{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/next/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"themes/next/source/google52ddb0d56cb747a0.html","path":"google52ddb0d56cb747a0.html","modified":0,"renderable":1},{"_id":"themes/next/source/robots.txt","path":"robots.txt","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo-16x16.png","path":"images/logo-16x16.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo-180x180.png","path":"images/logo-180x180.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo-32x32.png","path":"images/logo-32x32.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/page-bg.jpg","path":"images/page-bg.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/clicklove.js","path":"js/src/clicklove.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/crash_cheat.js","path":"js/src/crash_cheat.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hone_hone_clock.js","path":"js/src/hone_hone_clock.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1526977684387},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1526977684387},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1526977684387},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1526977684387},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1526977684387},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1526977684387},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1526977684387},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1526977684387},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1526977684387},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1526977684387},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1526977684387},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1526977684387},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1526977684387},{"_id":"themes/next/_config.yml","hash":"ab51d79f998396a9a9647c16ba63fa02333f2086","modified":1527488781565},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1526977684403},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1526977684465},{"_id":"source/_posts.zip","hash":"78db01d667a5c7beaccb811210053e406d894902","modified":1527648151633},{"_id":"source/_posts/css-unit.md","hash":"603e9d31fd27de32e81fab1111c256caede9f950","modified":1527643011045},{"_id":"source/_posts/domain-look.md","hash":"af38b8985f8e546355ee6a4ae08f8b7d948a5cad","modified":1527584580595},{"_id":"source/_posts/element-form.md","hash":"4adc7c45d1fa35a8037a82468c40eb7f99e8b96d","modified":1527586526041},{"_id":"source/_posts/github-hexo-next-01.md","hash":"86f1a3e62b64862c4e6ad3209b4a40bf6a8f7f7d","modified":1527129779342},{"_id":"source/_posts/github-addon-domain.md","hash":"2ddea40fdd7605314942e57f1af2c1fe3bd9bbcf","modified":1527584493794},{"_id":"source/_posts/github-hexo-next-02.md","hash":"04f49662c9a1fbb5baa423d5b859c5f46a6b3e15","modified":1527395201336},{"_id":"source/_posts/github-hexo-next-03.md","hash":"b52f2734a7333a9ff7de18a633a851c2c8bcfb3c","modified":1527394787742},{"_id":"source/_posts/github-hexo-next-04.md","hash":"6a0df19239ec057f982ca5de28e981fb5334d841","modified":1527558403561},{"_id":"source/_posts/github-hexo-next-05.md","hash":"06af765917dd319ca3080f902d646b1239b5cc91","modified":1527574882841},{"_id":"source/_posts/github-hexo-next-06.md","hash":"687d7bd3c1075fcb9817f4b4cf4d29b6d9818ca0","modified":1527576418909},{"_id":"source/_posts/github-hexo-next-07.md","hash":"6fe032833bb2a23047aad358eb74db1b52470e12","modified":1527580971961},{"_id":"source/_posts/github-new-branch.md","hash":"77506108d789c80aed531fceed6a4625d660ff9c","modified":1527586676524},{"_id":"source/_posts/gulp-install.md","hash":"139fdc6f9c236b6ad7261a1c9d661f4fc3cd6683","modified":1527643398199},{"_id":"source/_posts/ip-by-js.md","hash":"226f76403d5131883d708303adcad241e38736e1","modified":1527585016605},{"_id":"source/_posts/ip-lqs.md","hash":"53e1e55a55ede7decb119b1701a1a1900e86c1e4","modified":1527584699834},{"_id":"source/_posts/mobile-css-reset.md","hash":"64c4b03e1c6a6f7c5e577c50a8d36961f1bbaad9","modified":1527644188493},{"_id":"source/_posts/mobile-meta.md","hash":"6f5065c5c7500c906c777b6e0807110eb0605481","modified":1527644118434},{"_id":"source/_posts/node-version-upgrade.md","hash":"3e52a2330947a1ad72f9956ca1d436699ca70006","modified":1527585997608},{"_id":"source/_posts/ps-front.md","hash":"8daef68522e03bf6ba8ad5fe6579f1e6938a0cba","modified":1527583244425},{"_id":"source/_posts/ps-photo-2x.md","hash":"0a442a4971ec2f47b621e52b4be2c4c634985234","modified":1527645119810},{"_id":"source/_posts/resolution-retina-2x.md","hash":"bfb4203bdc718e6eeb6f16eb6baf9b4393fdd5c4","modified":1527646864227},{"_id":"source/_posts/scroll-more.md","hash":"d4aa8e51615b289bd417670b374b5784a424cffe","modified":1527643901841},{"_id":"source/_posts/template.md","hash":"243b846847b62c0d61155c7e37ce601474ee5eb0","modified":1527583564229},{"_id":"source/_posts/text-overflow-ellipsis.md","hash":"715c24f9bc6c169e99bb2ee0ada28c3f7d6641b2","modified":1527642955114},{"_id":"source/_posts/tomcat6-sthml.md","hash":"c8bad8d1f1fe8446fabeb9c6c01db400f3bbbfbc","modified":1527643137319},{"_id":"source/_posts/tool-cut-mark.md","hash":"583fea4a7dd5de771a152f760383c993dc066ea6","modified":1527648520048},{"_id":"source/_posts/tool-html5-video.md","hash":"5b67416972905e91b2c5d148bed2cd451ca19d0a","modified":1527646115932},{"_id":"source/_posts/vue-axios.md","hash":"9accd11d9fc5bdca9bf849d39ec0385db85c170a","modified":1527585359302},{"_id":"source/_posts/vue-bmap.md","hash":"a9db0c9ba851ef1f1d34e8bb62291e2a08129741","modified":1527585628656},{"_id":"source/_posts/vue-echarts.md","hash":"82dd6b82ef63bcc98d68bc5d3aab6dabc51c4773","modified":1527585532658},{"_id":"source/_posts/vue-element-01.md","hash":"96f807ae4d661da003cbda332fbd45e7052bbef2","modified":1527667880217},{"_id":"source/_posts/vue-element-02.md","hash":"3d051fbfd8ca1f643ae7e49aec92d6e3aa8d1e0e","modified":1527586114353},{"_id":"source/_posts/vue-mockjs.md","hash":"76b6440c7ece8a885ade828d2480da7f6f11b0e6","modified":1527585459952},{"_id":"source/_posts/vue-sass.md","hash":"457ef168dadaa903386e4618373d44b674b2d86f","modified":1528125597738},{"_id":"source/_posts/webkit-text-size-adjust.md","hash":"4f52afe58508aaab65590f2d82be47f1439f77a4","modified":1527646953021},{"_id":"source/_posts/webstorm-gitlab.md","hash":"05086d6fc1a09de59b4a08d4d1597f214cc7a379","modified":1528125608284},{"_id":"source/_posts/webstorm-plugin-markdown.md","hash":"812818e85d3dbb5d12bfb929fb0a04710622be4f","modified":1527644482654},{"_id":"source/_posts/webstorm-regitstcode.md","hash":"69f303b62ff675c9057e684e7ace5a3c97efaa60","modified":1527583663370},{"_id":"source/_posts/webstorm-setting-01.md","hash":"0dbaf2168e7ae409293c0189aea87b8270385978","modified":1527644523031},{"_id":"source/about/index.md","hash":"932ce0091020f124283914f8ce0c4a9f0101e3f6","modified":1527581983201},{"_id":"source/categories/index.md","hash":"d886ade85733776de0ed406629e8bdf53dcbe38e","modified":1527079581884},{"_id":"source/custom/bio.html","hash":"304e8ca6be9688eb417a2ad1e3ad54dd31dccdc9","modified":1524367438491},{"_id":"source/resources/index.md","hash":"9f1d7a94980a3679cd0db5db059c5f04e1869558","modified":1527327940801},{"_id":"source/schedule/index.md","hash":"60d481727f3b8ed010e334bc19a3177ef52e0562","modified":1527327894876},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1526977684356},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1526977684372},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1526976668903},{"_id":"themes/next/.git/index","hash":"3d3c932a50660cbd37fde7a9db37912a0ac8bbea","modified":1526977684715},{"_id":"themes/next/.git/packed-refs","hash":"8e36811256ee380c2c65692f1b8f8e77c5bc33c9","modified":1526977684325},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1526977684387},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1526977684387},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1526977684387},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1526977684387},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1526977684403},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1526977684403},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1526977684403},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1526977684403},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1526977684403},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1526977684403},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1526977684403},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1526977684403},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1526977684403},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1526977684403},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1526977684403},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1526977684403},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1526977684403},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1526977684403},{"_id":"themes/next/languages/zh-Hans.yml","hash":"fbdb1a849d0e87b17add575150d76fd9382e8c76","modified":1527038993259},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1526977684403},{"_id":"themes/next/layout/_layout.swig","hash":"9f881bb6c5016f85936929b385b2b59c84bcb944","modified":1527578704074},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1526977684465},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1526977684465},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1526977684465},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1526977684465},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1526977684465},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1526977684465},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1526977684465},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1526977684465},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1526977684481},{"_id":"themes/next/source/404.html","hash":"8e383c281de5b6ee7859d8d41a4d50eebb953ed7","modified":1526973778936},{"_id":"themes/next/source/CNAME","hash":"744fb575e9173a00e733f8533efd34254bd184c2","modified":1526988302686},{"_id":"source/tags/index.md","hash":"dd548b1156201df4d97dc9b64c8fa9c82d9b373f","modified":1527079634543},{"_id":"themes/next/source/google52ddb0d56cb747a0.html","hash":"8ab1f4fd3b41db22d36c91599fccc1423b26e74d","modified":1527149441966},{"_id":"themes/next/source/robots.txt","hash":"65968de5ef3fae4f6947d369c1f819dc628ec038","modified":1527149098779},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1526977684715},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1526977684715},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1526977684715},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526977684575},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1526976668903},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1526976668903},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1526976668903},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1526976668903},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1526976668903},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1526976668903},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1526976668903},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1526976668903},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1526976668903},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1526976668903},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1526976668903},{"_id":"themes/next/.git/logs/HEAD","hash":"72c378df3799145d8e083f5c11451d027af87a03","modified":1526977684356},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1526977684403},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1526977684419},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"dcf92ac10a5fb5d40468f3f777d7d80fd3c1f29a","modified":1527159232428},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1526977684419},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1526977684419},{"_id":"themes/next/layout/_macro/post.swig","hash":"065dca73f3498012bad967b232f35fb892426b91","modified":1527161842318},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1526977684419},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1526977684419},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1526977684419},{"_id":"themes/next/layout/_partials/comments.swig","hash":"fd2a8cd2a6750fbb25ca8408760363eb5e69b01e","modified":1527337056876},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1526977684419},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1526977684419},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1526977684419},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1526977684419},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1526977684419},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1526977684419},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1526977684434},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1526977684434},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1526977684434},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1526977684450},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1526977684450},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1526977684465},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1526977684465},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1526977684465},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1526977684465},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1526977684465},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1526977684481},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1526977684481},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1526977684481},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1526977684481},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1526977684481},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1526977684481},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1526977684481},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1526977684481},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1526977684481},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1526977684575},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1526977684575},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1526977684575},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1526977684575},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1526977684575},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1526977684575},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1526977684575},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1526977684575},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1526977684590},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1526977684590},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1526977684590},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1526977684590},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1526977684590},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526977684590},{"_id":"themes/next/source/images/logo-16x16.png","hash":"8ef99f2247182bab506d8179bdd5e64fc5fd8fec","modified":1527344590617},{"_id":"themes/next/source/images/logo-180x180.png","hash":"5d1ff886f3af5602d018e22c80ceeb7f7050e37a","modified":1527344526637},{"_id":"themes/next/source/images/logo-32x32.png","hash":"004b46887ff8a2e3ea2d8184b57cc01e42f83f3f","modified":1527344559380},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1526977684590},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526977684590},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1526977684590},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1526977684590},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526977684590},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526977684434},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526977684434},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526977684543},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526977684543},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526977684543},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526977684575},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526977684575},{"_id":"themes/next/source/images/page-bg.jpg","hash":"6e7662ee79724bbc260caf2bbd5e8984a153f8e8","modified":1527074390500},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1526977684356},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1526977684419},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1526977684419},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1526977684419},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1526977684434},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1526977684434},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1526977684434},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1526977684434},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1526977684434},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1526977684434},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1526977684434},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1526977684434},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1526977684434},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1526977684434},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1526977684434},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1526977684434},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1526977684434},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1526977684450},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1526977684450},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1526977684450},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1526977684450},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1526977684450},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1526977684450},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1526977684450},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1526977684450},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1526977684450},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1526977684450},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1526977684450},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"a7aaa4c2729df8d0e6c4e37d544047c5b48dee6b","modified":1527341220515},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1526977684450},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1526977684450},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1526977684450},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"75d973fc442af673a15b253379a1839df29b1a32","modified":1527331699655},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1526977684450},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1526977684450},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1526977684450},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1526977684465},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1526977684465},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1526977684465},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1526977684465},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"adaf6eecf1baf181849c8a11557aea8a0ab0c888","modified":1527581621870},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1526977684543},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1526977684543},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1526977684543},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1526977684575},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1526977684575},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1526977684575},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1526977684575},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1526977684590},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1526977684590},{"_id":"themes/next/source/js/src/clicklove.js","hash":"6583037545c7edc355f76f29b3393e250b150032","modified":1527392712288},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1526977684590},{"_id":"themes/next/source/js/src/crash_cheat.js","hash":"4cd307ea608b2989d86edc6c18014f43e27a64d4","modified":1527575452630},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1526977684590},{"_id":"themes/next/source/js/src/hone_hone_clock.js","hash":"01510563022690cff475737b644d765ba635db60","modified":1527580156362},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1526977684590},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1526977684590},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1526977684590},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1526977684590},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1526977684606},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1526977684606},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1526977684606},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1526977684606},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1526977684621},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1526977684621},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1526977684621},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1526977684621},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1526977684637},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1526977684637},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1526977684637},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1526977684637},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1526977684637},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1526977684637},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1526977684653},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1526977684653},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1526977684653},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1526977684668},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1526977684668},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1526977684668},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1526977684668},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1526977684684},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1526977684684},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1526977684684},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1526977684684},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1526977684684},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1526977684684},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1526977684699},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1526977684699},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1526977684699},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1526977684699},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1526977684699},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1526977684699},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1526977684699},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1526977684715},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1526977684715},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1526977684715},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1526977684715},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1526977684668},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"72c378df3799145d8e083f5c11451d027af87a03","modified":1526977684356},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1526977684356},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1526977684465},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1526977684465},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1526977684481},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1526977684481},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1526977684481},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1526977684481},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1526977684528},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1526977684543},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1526977684543},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1526977684543},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1526977684543},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1526977684543},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1526977684543},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1526977684543},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1526977684543},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1526977684575},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1526977684575},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1526977684575},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1526977684590},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1526977684606},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1526977684606},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1526977684606},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526977684621},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526977684621},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526977684621},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526977684621},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526977684621},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526977684621},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1526977684637},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1526977684637},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1526977684637},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1526977684637},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1526977684637},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1526977684653},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1526977684653},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1526977684653},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1526977684699},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1526977684699},{"_id":"themes/next/source/images/avatar.png","hash":"5627ba4b04c8024b61109d28037a664837ce87a0","modified":1526971412971},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1526977684606},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526977684668},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526977684668},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1526977684715},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"72c378df3799145d8e083f5c11451d027af87a03","modified":1526977684356},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1526977684497},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1527161875279},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1526977684512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1526977684528},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1526977684543},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1526977684543},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1526977684559},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1526977684559},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1526977684606},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1526977684606},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1526977684606},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1526977684606},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1526977684606},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526977684621},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1526977684637},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1526977684637},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1526977684637},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1526977684637},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1526977684637},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1526977684653},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526977684653},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1526977684668},{"_id":"themes/next/.git/objects/pack/pack-0df40285cfd6ba61cd77b9db468522fa4a3564d9.idx","hash":"9bd7aefeb87914ecfb289a7b609bfefc37dd28e3","modified":1526977684075},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1526977684621},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1526977684699},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1526977684668},{"_id":"themes/next/.git/objects/pack/pack-0df40285cfd6ba61cd77b9db468522fa4a3564d9.pack","hash":"b7b9af2417976ae7eab57dc0584d64df5654085a","modified":1526977684075},{"_id":"public/atom.xml","hash":"66f931502f924c4ef8119a46c627c5b0dee68ca1","modified":1528125655132},{"_id":"public/sitemap.xml","hash":"ab861a752de55d85b50c2c421e6f2a914943c3b2","modified":1528125655243},{"_id":"public/search.xml","hash":"e01b7fe6f95286b4adbef47b0c6f876d7696dd99","modified":1528125655243},{"_id":"public/about/index.html","hash":"25ac4241b0bf87f9884601d58fe021e33e7feed7","modified":1528125655443},{"_id":"public/categories/index.html","hash":"6311e9398ddde559f0dde42f7a09849601b0fb8e","modified":1528125655444},{"_id":"public/custom/bio.html","hash":"8d3a3b4891f28c19ee441164e88da02daf1b4c0b","modified":1528125655445},{"_id":"public/resources/index.html","hash":"1a58ad6c7699470fa97bbe4abfea12106e5a094e","modified":1528125655445},{"_id":"public/schedule/index.html","hash":"ad0e37488a68b91ac1bdecc8db9689314557b823","modified":1528125655445},{"_id":"public/tags/index.html","hash":"0f8daa1daad70b96a381985e4324d6715056c64e","modified":1528125655445},{"_id":"public/2018/06/04/vue-sass.html","hash":"d844490b3a189abb69192bdaf362e0cb40b1ccf7","modified":1528125655445},{"_id":"public/2018/06/04/webstorm-gitlab.html","hash":"b770970f01047ba3a73ac28c216825c82b37e523","modified":1528125655446},{"_id":"public/2018/05/29/webstorm-regitstcode.html","hash":"746480a6468edba872f7e0138cec7ffc6f8fcc0a","modified":1528125655446},{"_id":"public/2018/05/29/ps-front.html","hash":"e5d25c1b45b2a4de829240413ece61b2fb40380f","modified":1528125655446},{"_id":"public/2018/05/29/github-hexo-next-07.html","hash":"3a375228bb2f638d36122cbc3576d73a2dda697c","modified":1528125655446},{"_id":"public/2018/05/29/github-hexo-next-06.html","hash":"fcc660f5264c7846675dc5ff39a834e158de75ec","modified":1528125655447},{"_id":"public/2018/05/29/github-hexo-next-05.html","hash":"634c89396168666c6b7da2211203c65e9ee1f042","modified":1528125655447},{"_id":"public/2018/05/29/github-hexo-next-04.html","hash":"db0f47c5f9890331c9147a68bea21b7761b2106f","modified":1528125655447},{"_id":"public/2018/05/27/github-hexo-next-03.html","hash":"a29bdbabf50ba6e7c77048be6ed87a95dd6c1117","modified":1528125655447},{"_id":"public/2018/05/27/github-hexo-next-02.html","hash":"a6597bf88c29f64ddb118005a816fb643aa0a615","modified":1528125655447},{"_id":"public/2018/05/24/github-new-branch.html","hash":"a252bf1e434f1277bb9591825e3362aaa5b9eef7","modified":1528125655447},{"_id":"public/2018/05/23/github-addon-domain.html","hash":"15412f25a2469308b2f66a821ff0697ba18db1fb","modified":1528125655448},{"_id":"public/2018/05/23/domain-look.html","hash":"51721c56ccb1849146151b6656149e2b2fa9747f","modified":1528125655448},{"_id":"public/2018/05/23/ip-lqs.html","hash":"ad1cff273ae801cd829455677a4ae5690564b50d","modified":1528125655448},{"_id":"public/2018/05/23/ip-by-js.html","hash":"4e7163c0280d72e1b8b47b1f5d1cd076bdfa6a07","modified":1528125655448},{"_id":"public/2018/05/23/github-hexo-next-01.html","hash":"0daa4648457dd9fadcbb2ae169642f21b3b477bd","modified":1528125655448},{"_id":"public/2018/05/20/element-form.html","hash":"27a5b9b860733a34290d1049b91e63b2974e4884","modified":1528125655449},{"_id":"public/2018/05/20/vue-axios.html","hash":"7e2cbf169fa566107e8b2d80b8747c8207b9276d","modified":1528125655449},{"_id":"public/2018/05/19/vue-echarts.html","hash":"1d667c64b5586d18d43566cb5496350c64fdaa34","modified":1528125655449},{"_id":"public/2018/05/19/vue-bmap.html","hash":"a78a5e46e381a6a7cb4da9a4e7559de11ee3f586","modified":1528125655449},{"_id":"public/2018/05/19/vue-mockjs.html","hash":"594eb32edab0d3b11af74271ea654c5136325cbc","modified":1528125655450},{"_id":"public/2018/05/06/vue-element-02.html","hash":"d0ff2bac83da730632a516560a29d9b6b9bcdc32","modified":1528125655450},{"_id":"public/2018/05/06/vue-element-01.html","hash":"0d10678a83cb75dd32235a30fb87117cd3d6d09f","modified":1528125655450},{"_id":"public/2018/04/27/node-version-upgrade.html","hash":"e54dcb21600bd4c5762b449480bc60d0ceb23e78","modified":1528125655450},{"_id":"public/2018/04/25/scroll-more.html","hash":"4961ebbfac808ed0856c1921c374450abab6e2c3","modified":1528125655451},{"_id":"public/2017/09/05/text-overflow-ellipsis.html","hash":"77042a1fe7b9b0efa101742d51da00a6918ba9cb","modified":1528125655451},{"_id":"public/2017/08/02/css-unit.html","hash":"892bd8353beac7de406bf3a91e45670cafc5a1cd","modified":1528125655451},{"_id":"public/2017/06/26/tomcat6-sthml.html","hash":"80051a27ecd132766990046bc087857730bec7ee","modified":1528125655451},{"_id":"public/2016/09/24/gulp-install.html","hash":"f904d559547cb59424e245504668202e9ef24a36","modified":1528125655451},{"_id":"public/2016/05/06/mobile-meta.html","hash":"2433271909f68777ceceb31122fb7a0c58b5a200","modified":1528125655452},{"_id":"public/2016/05/06/mobile-css-reset.html","hash":"0c1c466e8362952089f17131207fa57704f07419","modified":1528125655452},{"_id":"public/2016/03/21/webstorm-plugin-markdown.html","hash":"e11194cbc26b9c049d0b778f62efa6b0c7ffe7f6","modified":1528125655452},{"_id":"public/2016/03/15/webstorm-setting-01.html","hash":"ee91a72da235f7cb126606ad4e45b07d5d1e35b5","modified":1528125655452},{"_id":"public/2016/02/06/resolution-retina-2x.html","hash":"d11bb148145f47e10ebd23ba47c2a45d0bcf3c00","modified":1528125655453},{"_id":"public/2016/02/06/ps-photo-2x.html","hash":"d93364524d0f76559c044caa589c0b4d605b66f2","modified":1528125655453},{"_id":"public/2016/02/05/tool-html5-video.html","hash":"fe26d029e5366ae2bc50a289322311b1f14902c8","modified":1528125655453},{"_id":"public/2016/02/05/tool-cut-mark.html","hash":"2aa41967394556d9a52ed6f65d5d485d4a1c7512","modified":1528125655453},{"_id":"public/2016/02/05/webkit-text-size-adjust.html","hash":"0d7711403e7832b9eeca1f904b231cdede7d73fa","modified":1528125655453},{"_id":"public/2014/12/22/template.html","hash":"ec33155133d1b23430844485f867875e8e28581f","modified":1528125655454},{"_id":"public/archives/index.html","hash":"e9d8b91893a836968e8c57a975cee45925acae12","modified":1528125655454},{"_id":"public/archives/page/2/index.html","hash":"134bde9c8823e137cfc4d0b7249d38c70e098758","modified":1528125655454},{"_id":"public/archives/page/3/index.html","hash":"5d6a1edf334452ea0cd4b0eea7b9cc66049ce99d","modified":1528125655454},{"_id":"public/archives/page/4/index.html","hash":"873c80602965ff7b11c73a2a326c374856479a95","modified":1528125655455},{"_id":"public/archives/2014/index.html","hash":"b32d4a492a03bcde5a379d51f87ea0e12822ffaf","modified":1528125655455},{"_id":"public/archives/2014/12/index.html","hash":"f25c7a3e41d3cad2534073a0da03212151fc9368","modified":1528125655455},{"_id":"public/archives/2016/index.html","hash":"2f47f91589561f36f298cb39ca398e8bc8b53ca3","modified":1528125655455},{"_id":"public/archives/2016/02/index.html","hash":"44f19a65eb9a6e94b9828ecbf95a16d1a0094daf","modified":1528125655455},{"_id":"public/archives/2016/03/index.html","hash":"aebba9c282335367d8afa5a160a4e030946fba06","modified":1528125655456},{"_id":"public/archives/2016/05/index.html","hash":"10359fef4cd4219a7d6daeb7fb2359d0afb53f79","modified":1528125655456},{"_id":"public/archives/2016/09/index.html","hash":"25ecf2732c340a82d85675327c871fbcfc38ddbe","modified":1528125655456},{"_id":"public/archives/2017/index.html","hash":"8f539df53eb10b46c419a1f2e4e9d39fbe5ca48f","modified":1528125655456},{"_id":"public/archives/2017/06/index.html","hash":"09d9bff353f32e3551cda6eeb8fc8f95241947ce","modified":1528125655456},{"_id":"public/archives/2017/08/index.html","hash":"e76ee2f1e258efe89da166be627d578f6389f7ba","modified":1528125655457},{"_id":"public/archives/2017/09/index.html","hash":"b3833b2a7d8d72c1dade28d0837e1e29f194f1f6","modified":1528125655457},{"_id":"public/archives/2018/index.html","hash":"0f66a6c2a8481dc25ecabb68923df26e12edf543","modified":1528125655457},{"_id":"public/archives/2018/page/2/index.html","hash":"f27258700a6824a03cad0372440ac2b1e5e98a30","modified":1528125655457},{"_id":"public/archives/2018/page/3/index.html","hash":"7b68d24b47425439b86ae56d3e7d23da4562193f","modified":1528125655457},{"_id":"public/archives/2018/04/index.html","hash":"f93f9647cfc6edef03ddc4a671d270370666843e","modified":1528125655457},{"_id":"public/archives/2018/05/index.html","hash":"1c42cb82aa49d8450025c5a113487741406c90d4","modified":1528125655458},{"_id":"public/archives/2018/05/page/2/index.html","hash":"758d8a9222dc19271f627f74b0e61ea897c04627","modified":1528125655458},{"_id":"public/archives/2018/05/page/3/index.html","hash":"5a9ba28dabb6539d75818b1343b87d3bf45cdd50","modified":1528125655458},{"_id":"public/archives/2018/06/index.html","hash":"a74cb6233730a3531317914e92ee14183aa29193","modified":1528125655458},{"_id":"public/categories/css/index.html","hash":"f9ab3ca043427ebcce676480e6293edce7b23482","modified":1528125655458},{"_id":"public/categories/Element/index.html","hash":"d1de9d7a25f60657b6fdac11d198a1569cd3378a","modified":1528125655459},{"_id":"public/categories/Hexo/index.html","hash":"cf7f2ee5d3a2c27c1e8af6e47cc11726cccb6339","modified":1528125655459},{"_id":"public/categories/Git/index.html","hash":"67ed1a66fc023f112df2c7a1f1e3f53a21e70162","modified":1528125655459},{"_id":"public/categories/gulp/index.html","hash":"07a18cf7669442037e05c927a9c86f9773bf0e8f","modified":1528125655459},{"_id":"public/categories/Photoshop/index.html","hash":"b1e567bbe12408f342f255c22f7d199bbd38abf2","modified":1528125655459},{"_id":"public/categories/js/index.html","hash":"0b72c3645ec3bd3629a221a55c074ee59eb03656","modified":1528125655460},{"_id":"public/categories/class/index.html","hash":"d8e2aaf6a708599ac0039c1dce0f1a8c5b7633ee","modified":1528125655460},{"_id":"public/categories/tool/index.html","hash":"9426b131eab5d6cad7d114e03d6396365406a0bc","modified":1528125655460},{"_id":"public/categories/class/分类2/index.html","hash":"d8cf307e41ac0f63e65438447978ed7779597294","modified":1528125655460},{"_id":"public/categories/Vue2/index.html","hash":"81a813b6921750ee0a617dad6a2c5749a81191c3","modified":1528125655460},{"_id":"public/categories/vue/index.html","hash":"85e4966b1371c2963f3fbecd02a50dc8666b1285","modified":1528125655460},{"_id":"public/categories/webstorm/index.html","hash":"a6df1df0079d26fe8835170e57caa8d2911b703e","modified":1528125655461},{"_id":"public/page/2/index.html","hash":"d98708e1bc6627f90a5cb2d6c0487b37cbed553b","modified":1528125655462},{"_id":"public/index.html","hash":"7662a4a2bf190e3caa1af0487e6efcea45c8401d","modified":1528125655462},{"_id":"public/page/3/index.html","hash":"5ee3592fee18dfca77489ac18c8bd8e365e93e54","modified":1528125655462},{"_id":"public/page/4/index.html","hash":"67d42a916cf4ea840f8c357603de422b2ac2f9e5","modified":1528125655463},{"_id":"public/tags/css3/index.html","hash":"e0e6a679a5ed62777ab5e74037d696fcf6d0d942","modified":1528125655463},{"_id":"public/tags/域名/index.html","hash":"db21edeb1ff67c26c65e89cae654f47e0875d336","modified":1528125655463},{"_id":"public/tags/Element/index.html","hash":"14662ec71ed28787689cb708d5576c511a0bacc6","modified":1528125655463},{"_id":"public/tags/Github/index.html","hash":"11a9a3ec4875033e7d9bf024b525d59dfe3d0199","modified":1528125655463},{"_id":"public/tags/Hexo/index.html","hash":"3c6941d0220818046c46917422fc99cd6f41402a","modified":1528125655464},{"_id":"public/tags/NexT/index.html","hash":"4cae7230a22597d7937d56ddd90cd1dd6d340851","modified":1528125655464},{"_id":"public/tags/Godaddy/index.html","hash":"f5b8910019dcca92d81d50628bf8d3de4272a397","modified":1528125655464},{"_id":"public/tags/DNSPod/index.html","hash":"28a37a27dbc63e400cc9c7d474471bdc785fd1a3","modified":1528125655464},{"_id":"public/tags/CodePen/index.html","hash":"cd229009e30fb376510eb6850c59f13cba390bc7","modified":1528125655464},{"_id":"public/tags/jsFiddle/index.html","hash":"4bdf483a5e5d92e1a57546ac3f8c2b0bd6e392f9","modified":1528125655466},{"_id":"public/tags/Web-Music/index.html","hash":"39d1f25ee63a40063b100b77a0b8c7ee75b1d227","modified":1528125655467},{"_id":"public/tags/Aplayer/index.html","hash":"4d826b068f78b8ce2ccdf915fcece35c70ca6934","modified":1528125655467},{"_id":"public/tags/Git/index.html","hash":"e2ff466691fb4cd70d00f6d264b8451cf6cb1b4c","modified":1528125655467},{"_id":"public/tags/gulp/index.html","hash":"474c74b7cb3d0a9719cbd224f9ea52f9611882ba","modified":1528125655467},{"_id":"public/tags/IP/index.html","hash":"cafea6e704d705876b6ef3e787a5f79b4698fca6","modified":1528125655467},{"_id":"public/tags/js/index.html","hash":"88b9909596ae49a381411156776e47a7e781207a","modified":1528125655468},{"_id":"public/tags/css/index.html","hash":"7e405e7a981c6755b76f0043ae4725ecf7a79e4c","modified":1528125655468},{"_id":"public/tags/Node/index.html","hash":"26d31791d4d65043b2466d669de690314c58ab32","modified":1528125655468},{"_id":"public/tags/Photoshop/index.html","hash":"a16a6c40929a8e3ec820bd7e6d6db96792900a62","modified":1528125655468},{"_id":"public/tags/photoshop/index.html","hash":"bb2150580f63c6036d2969f46fda7ffa0b688534","modified":1528125655468},{"_id":"public/tags/tag1/index.html","hash":"c7f55552e318c57c8cd7b3097f584f4d7b103b44","modified":1528125655469},{"_id":"public/tags/标签2/index.html","hash":"d2fd5919674a9ea387f180e67fd85e57109d3f86","modified":1528125655469},{"_id":"public/tags/tomcat6/index.html","hash":"5e08c73f4f9f8bd5c1ef5b0f00ef929dd2d97b8f","modified":1528125655469},{"_id":"public/tags/html5/index.html","hash":"d5d4ceaec8d117bad127917a5cab326fb99f569e","modified":1528125655469},{"_id":"public/tags/Vue2/index.html","hash":"eae3fd48f738e4e199da4613e8e658a0f99673ea","modified":1528125655469},{"_id":"public/tags/axios/index.html","hash":"7a1fa996c73f97f92921e3970e504aa0101ed5e2","modified":1528125655470},{"_id":"public/tags/百度地图/index.html","hash":"10017bcf9491a42f6105496d476a05052656e0b5","modified":1528125655470},{"_id":"public/tags/Echarts/index.html","hash":"8495ba04ef2481d639c93aee2376db0c46555115","modified":1528125655470},{"_id":"public/tags/webstorm/index.html","hash":"d3e651881a514906f04816ecc09d756f66c279c0","modified":1528125655470},{"_id":"public/tags/vue/index.html","hash":"fda1af8a8ac854ec1456560a43dc380fb3f56a59","modified":1528125655470},{"_id":"public/tags/sass/index.html","hash":"a98f49617965806748cfdc62c84d1fc29062d691","modified":1528125655470},{"_id":"public/tags/Mockjs/index.html","hash":"307528f42fed28738e8baeeb031ee1955c79b894","modified":1528125655471},{"_id":"public/tags/gitlab/index.html","hash":"cba37f453d8275a490cd4599b945e1256c3209c7","modified":1528125655471},{"_id":"public/tags/markdown/index.html","hash":"14eec4e02f30036d2f44c8652661ef960a421343","modified":1528125655471},{"_id":"public/tags/webstorm11/index.html","hash":"bf9106013793272eca918d71d6cacb1964f677fd","modified":1528125655505},{"_id":"public/CNAME","hash":"744fb575e9173a00e733f8533efd34254bd184c2","modified":1528125655505},{"_id":"public/robots.txt","hash":"65968de5ef3fae4f6947d369c1f819dc628ec038","modified":1528125655506},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1528125655506},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1528125655506},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1528125655506},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1528125655506},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1528125655506},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1528125655507},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1528125655507},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1528125655507},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1528125655507},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1528125655507},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1528125655507},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1528125655508},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1528125655508},{"_id":"public/images/logo-16x16.png","hash":"8ef99f2247182bab506d8179bdd5e64fc5fd8fec","modified":1528125655508},{"_id":"public/images/logo-180x180.png","hash":"5d1ff886f3af5602d018e22c80ceeb7f7050e37a","modified":1528125655508},{"_id":"public/images/logo-32x32.png","hash":"004b46887ff8a2e3ea2d8184b57cc01e42f83f3f","modified":1528125655509},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1528125655509},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1528125655509},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1528125655509},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1528125655509},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1528125655509},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1528125655510},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1528125655510},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1528125655510},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1528125655510},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1528125655510},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1528125655510},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1528125655511},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1528125655511},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1528125655511},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1528125655511},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1528125655511},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1528125655511},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1528125655512},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1528125655512},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1528125655512},{"_id":"public/images/page-bg.jpg","hash":"6e7662ee79724bbc260caf2bbd5e8984a153f8e8","modified":1528125657218},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1528125657226},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1528125657255},{"_id":"public/404.html","hash":"b3830e553b7a72959b82e05ba7859e7e13c26673","modified":1528125657293},{"_id":"public/google52ddb0d56cb747a0.html","hash":"8ab1f4fd3b41db22d36c91599fccc1423b26e74d","modified":1528125657293},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1528125657293},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1528125657294},{"_id":"public/js/src/crash_cheat.js","hash":"38450bee383082cab5fe63002af5c8855327a157","modified":1528125657294},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1528125657294},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1528125657294},{"_id":"public/js/src/clicklove.js","hash":"effa770d8085f7e7fb903de217ce521dff163780","modified":1528125657294},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1528125657294},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1528125657294},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1528125657295},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1528125657295},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1528125657295},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1528125657295},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1528125657295},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1528125657295},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1528125657296},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1528125657296},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1528125657296},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1528125657296},{"_id":"public/js/src/hone_hone_clock.js","hash":"94a3b0493a4fde0277e38fc08999b54502872d0b","modified":1528125657296},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1528125657296},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1528125657297},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1528125657297},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1528125657297},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1528125657297},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1528125657297},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1528125657298},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1528125657298},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1528125657298},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1528125657298},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1528125657298},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1528125657298},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1528125657299},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1528125657299},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1528125657299},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1528125657299},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1528125657299},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1528125657300},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1528125657300},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1528125657300},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1528125657300},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1528125657300},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1528125657300},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1528125657301},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1528125657301},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1528125657301},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1528125657301},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1528125657302},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1528125657302},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1528125657302},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1528125657302},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1528125657302},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1528125657302},{"_id":"public/css/main.css","hash":"cbed35aaa440cf35679ed71d43d5af0c2f37445f","modified":1528125657303},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1528125657303},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1528125657303},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1528125657303},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1528125657303},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1528125657304},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1528125657304},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1528125657304},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1528125657304},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1528125657304},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1528125657304},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1528125657305},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1528125657305},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1528125657305},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1528125657305},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1528125657305},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1528125657305},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1528125657306},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1528125657306},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1528125657306},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1528125657306},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1528125657307},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1528125657308},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1528125657308},{"_id":"public/images/avatar.png","hash":"5627ba4b04c8024b61109d28037a664837ce87a0","modified":1528125657493},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1528125657552}],"Category":[{"name":"css","_id":"cji0ejm110002g4l17vnc1wi0"},{"name":"Element","_id":"cji0ejm1k0007g4l1wrfk4kvd"},{"name":"Hexo","_id":"cji0ejm1x000dg4l10zjmf2pt"},{"name":"Git","_id":"cji0ejm38000vg4l1zm793pn9"},{"name":"gulp","_id":"cji0ejm3i0011g4l14zdcv398"},{"name":"Photoshop","_id":"cji0ejm4a001hg4l1uedpviy6"},{"name":"js","_id":"cji0ejm4p001pg4l1koli2vl5"},{"name":"class","_id":"cji0ejm51001wg4l14rcknmzs"},{"name":"tool","_id":"cji0ejm5d0023g4l1yydlvaal"},{"name":"分类2","parent":"cji0ejm51001wg4l14rcknmzs","_id":"cji0ejm5y002eg4l14h73bqgj"},{"name":"Vue2","_id":"cji0ejm6a002lg4l14oxfmtq0"},{"name":"vue","_id":"cji0ejm7d003bg4l1lvqliiwo"},{"name":"webstorm","_id":"cji0ejm7r003kg4l1frv3egfl"}],"Data":[],"Page":[{"_content":"title: 关于日常发文\ndate: 2018-05-23 09:25:47\ncomments: false\n\n[Hexo 官网](https://hexo.io/zh-cn/)\n[NexT 主题](http://theme-next.iissnan.com/)\n\n## 日常发文\n\n### 日常发博文流程\n1. 打开 typora 写博文\n2. hexo clean #清空静态文件夹\n3. hexo generate #生成静态文件\n4. hexo server #浏览器预览效果\n5. git命令提交或 github 桌面端提交项目源码（gh-dev 分支）\n6. hexo deploy #发布部署（master 分支）\n\n### Hexo 常用命令\n常见命令：\n\n```swift\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #部署到GitHub\nhexo help  # 查看帮助\nhexo version  #查看Hexo的版本\n```\n\n缩写：\n\n```swift\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n组合命令：\n\n```swift\nhexo s -g #生成并本地预览\nhexo d -g #生成并上传\n```\n\n多命令一起执行：\n\n```swift\n#本地调试\nhexo clean && hexo g && hexo s\n#发布代码\nhexo clean && hexo g && hexo d\n```\n\n\n\n## 日常安排\n\n### 待办事项（带有xxx表示未完成）\n* 本地项目基本框架搭建     5/22/2018\n   * Hexo 安装，NexT 安装和引入。\n   * Hexo ，NexT 的一些基本设置。\n   * hexo 重用命令熟悉。\n* github 的域名绑定，分支创建（gh-dev，master）    5/23/2018\n* 搭建过程、主题优化过程碰到的坑等等整理成博文    5/22/2018--now\n* 日常发博文：markdown 文本编辑器（typora）、图床神器（ipic，暂时没windows版本）的筛选xxx  5/24/2018\n* 添加菜单项：标签、分类、404、站点地图、关于、日程表、资源API、我的足迹、个人简历等等。    5/23/2018\n* 集成三方服务：数据统计与分析（百度统计，腾讯分析、不蒜子统计）、阅读次数统计（LeanCloud）、搜索（Local Search）、评论系统（Valine）、分享服务（百度分享）、打赏（xxx）\n* 自定义样式：项目/themes/next/source/css/custom/custom.styl  5/23/2018\n  * 文本选中颜色修改（默认选中文本背景为黑色，代码块的也是，代码块选中与否分辨不清，故而修改文本选中颜色为蓝色。当然，另外一种方式就是改变代码块的默认背景色，把黑色改成其他淡色就行。）\n  * 代码块的代码颜色（如你不满意官方提供的风格，可自行调整）\n  * 头像样式修改，添加动画等等。\n  * 底栏的标签列表（#字符换成图标），作者的图标修改\n* 博客文章内的代码在线运行（codepend，jsFiddle）    5/28/2018\nhttps://hexo.io/zh-cn/docs/tag-plugins.html#jsFiddle\n* NexT主题优化（官网没有文档）一【参考教程：https://www.jianshu.com/p/3ff20be8574c 】  5/24/2018\n  * (一)  头像设置、浏览页面的时候显示当前浏览进度\n  * (二) 开启版权声明、自定义文章底部版权声明、在右上角或者左上角实现fork me on github、修改文章底部的那个带#号的标签、添加顶部加载条、修改网页底部\n  * (三) 博文置顶、统计功能（显示文章字数统计,阅读时长,总字数）、修改文章内文本连接样式、每篇文章末尾统一添加“本文结束”标记、文章顶部显示更新时间、修改访问URL路径、给代码块添加复制功能xxx、新建404界面、xxx静态资源压缩gulp\n  * (四) SEO 优化sitemap （google和百度收录）\n* NexT主题优化（官网没有文档）二    5/27/2018\n  * Hexo NexT主题添加点击爱心效果： https://asdfv1929.github.io/2018/01/26/click-love/\n  * Hexo NexT主题中添加网页音乐播放器功能xxx：https://asdfv1929.github.io/2018/05/26/next-add-music/\n  * 人体时钟引入：hone hone clock\n* 评论系统筛选和配置    5/27/2018  \n  * gitalk（没配置成功）：https://asdfv1929.github.io/2018/01/20/gitalk/\n  * Valine： https://valine.js.org/\n  * HyperComments：收费。后期看情况是否使用\n","source":"about/index.md","raw":"title: 关于日常发文\ndate: 2018-05-23 09:25:47\ncomments: false\n\n[Hexo 官网](https://hexo.io/zh-cn/)\n[NexT 主题](http://theme-next.iissnan.com/)\n\n## 日常发文\n\n### 日常发博文流程\n1. 打开 typora 写博文\n2. hexo clean #清空静态文件夹\n3. hexo generate #生成静态文件\n4. hexo server #浏览器预览效果\n5. git命令提交或 github 桌面端提交项目源码（gh-dev 分支）\n6. hexo deploy #发布部署（master 分支）\n\n### Hexo 常用命令\n常见命令：\n\n```swift\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #部署到GitHub\nhexo help  # 查看帮助\nhexo version  #查看Hexo的版本\n```\n\n缩写：\n\n```swift\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n组合命令：\n\n```swift\nhexo s -g #生成并本地预览\nhexo d -g #生成并上传\n```\n\n多命令一起执行：\n\n```swift\n#本地调试\nhexo clean && hexo g && hexo s\n#发布代码\nhexo clean && hexo g && hexo d\n```\n\n\n\n## 日常安排\n\n### 待办事项（带有xxx表示未完成）\n* 本地项目基本框架搭建     5/22/2018\n   * Hexo 安装，NexT 安装和引入。\n   * Hexo ，NexT 的一些基本设置。\n   * hexo 重用命令熟悉。\n* github 的域名绑定，分支创建（gh-dev，master）    5/23/2018\n* 搭建过程、主题优化过程碰到的坑等等整理成博文    5/22/2018--now\n* 日常发博文：markdown 文本编辑器（typora）、图床神器（ipic，暂时没windows版本）的筛选xxx  5/24/2018\n* 添加菜单项：标签、分类、404、站点地图、关于、日程表、资源API、我的足迹、个人简历等等。    5/23/2018\n* 集成三方服务：数据统计与分析（百度统计，腾讯分析、不蒜子统计）、阅读次数统计（LeanCloud）、搜索（Local Search）、评论系统（Valine）、分享服务（百度分享）、打赏（xxx）\n* 自定义样式：项目/themes/next/source/css/custom/custom.styl  5/23/2018\n  * 文本选中颜色修改（默认选中文本背景为黑色，代码块的也是，代码块选中与否分辨不清，故而修改文本选中颜色为蓝色。当然，另外一种方式就是改变代码块的默认背景色，把黑色改成其他淡色就行。）\n  * 代码块的代码颜色（如你不满意官方提供的风格，可自行调整）\n  * 头像样式修改，添加动画等等。\n  * 底栏的标签列表（#字符换成图标），作者的图标修改\n* 博客文章内的代码在线运行（codepend，jsFiddle）    5/28/2018\nhttps://hexo.io/zh-cn/docs/tag-plugins.html#jsFiddle\n* NexT主题优化（官网没有文档）一【参考教程：https://www.jianshu.com/p/3ff20be8574c 】  5/24/2018\n  * (一)  头像设置、浏览页面的时候显示当前浏览进度\n  * (二) 开启版权声明、自定义文章底部版权声明、在右上角或者左上角实现fork me on github、修改文章底部的那个带#号的标签、添加顶部加载条、修改网页底部\n  * (三) 博文置顶、统计功能（显示文章字数统计,阅读时长,总字数）、修改文章内文本连接样式、每篇文章末尾统一添加“本文结束”标记、文章顶部显示更新时间、修改访问URL路径、给代码块添加复制功能xxx、新建404界面、xxx静态资源压缩gulp\n  * (四) SEO 优化sitemap （google和百度收录）\n* NexT主题优化（官网没有文档）二    5/27/2018\n  * Hexo NexT主题添加点击爱心效果： https://asdfv1929.github.io/2018/01/26/click-love/\n  * Hexo NexT主题中添加网页音乐播放器功能xxx：https://asdfv1929.github.io/2018/05/26/next-add-music/\n  * 人体时钟引入：hone hone clock\n* 评论系统筛选和配置    5/27/2018  \n  * gitalk（没配置成功）：https://asdfv1929.github.io/2018/01/20/gitalk/\n  * Valine： https://valine.js.org/\n  * HyperComments：收费。后期看情况是否使用\n","date":"2018-05-29T08:19:43.201Z","updated":"2018-05-29T08:19:43.201Z","path":"about/index.html","title":"","comments":1,"layout":"page","_id":"cji0ejmr6005vg4l1m9mlb4db","content":"<p>title: 关于日常发文<br>date: 2018-05-23 09:25:47<br>comments: false</p>\n<p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo 官网</a><br><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">NexT 主题</a></p>\n<h2 id=\"日常发文\"><a href=\"#日常发文\" class=\"headerlink\" title=\"日常发文\"></a>日常发文</h2><h3 id=\"日常发博文流程\"><a href=\"#日常发博文流程\" class=\"headerlink\" title=\"日常发博文流程\"></a>日常发博文流程</h3><ol>\n<li>打开 typora 写博文</li>\n<li>hexo clean #清空静态文件夹</li>\n<li>hexo generate #生成静态文件</li>\n<li>hexo server #浏览器预览效果</li>\n<li>git命令提交或 github 桌面端提交项目源码（gh-dev 分支）</li>\n<li>hexo deploy #发布部署（master 分支）</li>\n</ol>\n<h3 id=\"Hexo-常用命令\"><a href=\"#Hexo-常用命令\" class=\"headerlink\" title=\"Hexo 常用命令\"></a>Hexo 常用命令</h3><p>常见命令：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"postName\"</span> #新建文章</span><br><span class=\"line\">hexo new page <span class=\"string\">\"pageName\"</span> #新建页面</span><br><span class=\"line\">hexo generate #生成静态页面至<span class=\"keyword\">public</span>目录</span><br><span class=\"line\">hexo server #开启预览访问端口（默认端口<span class=\"number\">4000</span>，'ctrl + <span class=\"built_in\">c</span>'关闭server）</span><br><span class=\"line\">hexo deploy #部署到<span class=\"type\">GitHub</span></span><br><span class=\"line\">hexo help  # 查看帮助</span><br><span class=\"line\">hexo version  #查看<span class=\"type\">Hexo</span>的版本</span><br></pre></td></tr></table></figure>\n<p>缩写：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n == hexo new</span><br><span class=\"line\">hexo g == hexo generate</span><br><span class=\"line\">hexo s == hexo server</span><br><span class=\"line\">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>\n<p>组合命令：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s -g #生成并本地预览</span><br><span class=\"line\">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure>\n<p>多命令一起执行：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#本地调试</span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br><span class=\"line\">#发布代码</span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<h2 id=\"日常安排\"><a href=\"#日常安排\" class=\"headerlink\" title=\"日常安排\"></a>日常安排</h2><h3 id=\"待办事项（带有xxx表示未完成）\"><a href=\"#待办事项（带有xxx表示未完成）\" class=\"headerlink\" title=\"待办事项（带有xxx表示未完成）\"></a>待办事项（带有xxx表示未完成）</h3><ul>\n<li>本地项目基本框架搭建     5/22/2018<ul>\n<li>Hexo 安装，NexT 安装和引入。</li>\n<li>Hexo ，NexT 的一些基本设置。</li>\n<li>hexo 重用命令熟悉。</li>\n</ul>\n</li>\n<li>github 的域名绑定，分支创建（gh-dev，master）    5/23/2018</li>\n<li>搭建过程、主题优化过程碰到的坑等等整理成博文    5/22/2018–now</li>\n<li>日常发博文：markdown 文本编辑器（typora）、图床神器（ipic，暂时没windows版本）的筛选xxx  5/24/2018</li>\n<li>添加菜单项：标签、分类、404、站点地图、关于、日程表、资源API、我的足迹、个人简历等等。    5/23/2018</li>\n<li>集成三方服务：数据统计与分析（百度统计，腾讯分析、不蒜子统计）、阅读次数统计（LeanCloud）、搜索（Local Search）、评论系统（Valine）、分享服务（百度分享）、打赏（xxx）</li>\n<li>自定义样式：项目/themes/next/source/css/custom/custom.styl  5/23/2018<ul>\n<li>文本选中颜色修改（默认选中文本背景为黑色，代码块的也是，代码块选中与否分辨不清，故而修改文本选中颜色为蓝色。当然，另外一种方式就是改变代码块的默认背景色，把黑色改成其他淡色就行。）</li>\n<li>代码块的代码颜色（如你不满意官方提供的风格，可自行调整）</li>\n<li>头像样式修改，添加动画等等。</li>\n<li>底栏的标签列表（#字符换成图标），作者的图标修改</li>\n</ul>\n</li>\n<li>博客文章内的代码在线运行（codepend，jsFiddle）    5/28/2018<br><a href=\"https://hexo.io/zh-cn/docs/tag-plugins.html#jsFiddle\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs/tag-plugins.html#jsFiddle</a></li>\n<li>NexT主题优化（官网没有文档）一【参考教程：<a href=\"https://www.jianshu.com/p/3ff20be8574c\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/3ff20be8574c</a> 】  5/24/2018<ul>\n<li>(一)  头像设置、浏览页面的时候显示当前浏览进度</li>\n<li>(二) 开启版权声明、自定义文章底部版权声明、在右上角或者左上角实现fork me on github、修改文章底部的那个带#号的标签、添加顶部加载条、修改网页底部</li>\n<li>(三) 博文置顶、统计功能（显示文章字数统计,阅读时长,总字数）、修改文章内文本连接样式、每篇文章末尾统一添加“本文结束”标记、文章顶部显示更新时间、修改访问URL路径、给代码块添加复制功能xxx、新建404界面、xxx静态资源压缩gulp</li>\n<li>(四) SEO 优化sitemap （google和百度收录）</li>\n</ul>\n</li>\n<li>NexT主题优化（官网没有文档）二    5/27/2018<ul>\n<li>Hexo NexT主题添加点击爱心效果： <a href=\"https://asdfv1929.github.io/2018/01/26/click-love/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/01/26/click-love/</a></li>\n<li>Hexo NexT主题中添加网页音乐播放器功能xxx：<a href=\"https://asdfv1929.github.io/2018/05/26/next-add-music/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/05/26/next-add-music/</a></li>\n<li>人体时钟引入：hone hone clock</li>\n</ul>\n</li>\n<li>评论系统筛选和配置    5/27/2018  <ul>\n<li>gitalk（没配置成功）：<a href=\"https://asdfv1929.github.io/2018/01/20/gitalk/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/01/20/gitalk/</a></li>\n<li>Valine： <a href=\"https://valine.js.org/\" target=\"_blank\" rel=\"noopener\">https://valine.js.org/</a></li>\n<li>HyperComments：收费。后期看情况是否使用</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>title: 关于日常发文<br>date: 2018-05-23 09:25:47<br>comments: false</p>\n<p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo 官网</a><br><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">NexT 主题</a></p>\n<h2 id=\"日常发文\"><a href=\"#日常发文\" class=\"headerlink\" title=\"日常发文\"></a>日常发文</h2><h3 id=\"日常发博文流程\"><a href=\"#日常发博文流程\" class=\"headerlink\" title=\"日常发博文流程\"></a>日常发博文流程</h3><ol>\n<li>打开 typora 写博文</li>\n<li>hexo clean #清空静态文件夹</li>\n<li>hexo generate #生成静态文件</li>\n<li>hexo server #浏览器预览效果</li>\n<li>git命令提交或 github 桌面端提交项目源码（gh-dev 分支）</li>\n<li>hexo deploy #发布部署（master 分支）</li>\n</ol>\n<h3 id=\"Hexo-常用命令\"><a href=\"#Hexo-常用命令\" class=\"headerlink\" title=\"Hexo 常用命令\"></a>Hexo 常用命令</h3><p>常见命令：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"postName\"</span> #新建文章</span><br><span class=\"line\">hexo new page <span class=\"string\">\"pageName\"</span> #新建页面</span><br><span class=\"line\">hexo generate #生成静态页面至<span class=\"keyword\">public</span>目录</span><br><span class=\"line\">hexo server #开启预览访问端口（默认端口<span class=\"number\">4000</span>，'ctrl + <span class=\"built_in\">c</span>'关闭server）</span><br><span class=\"line\">hexo deploy #部署到<span class=\"type\">GitHub</span></span><br><span class=\"line\">hexo help  # 查看帮助</span><br><span class=\"line\">hexo version  #查看<span class=\"type\">Hexo</span>的版本</span><br></pre></td></tr></table></figure>\n<p>缩写：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n == hexo new</span><br><span class=\"line\">hexo g == hexo generate</span><br><span class=\"line\">hexo s == hexo server</span><br><span class=\"line\">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>\n<p>组合命令：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s -g #生成并本地预览</span><br><span class=\"line\">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure>\n<p>多命令一起执行：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#本地调试</span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br><span class=\"line\">#发布代码</span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<h2 id=\"日常安排\"><a href=\"#日常安排\" class=\"headerlink\" title=\"日常安排\"></a>日常安排</h2><h3 id=\"待办事项（带有xxx表示未完成）\"><a href=\"#待办事项（带有xxx表示未完成）\" class=\"headerlink\" title=\"待办事项（带有xxx表示未完成）\"></a>待办事项（带有xxx表示未完成）</h3><ul>\n<li>本地项目基本框架搭建     5/22/2018<ul>\n<li>Hexo 安装，NexT 安装和引入。</li>\n<li>Hexo ，NexT 的一些基本设置。</li>\n<li>hexo 重用命令熟悉。</li>\n</ul>\n</li>\n<li>github 的域名绑定，分支创建（gh-dev，master）    5/23/2018</li>\n<li>搭建过程、主题优化过程碰到的坑等等整理成博文    5/22/2018–now</li>\n<li>日常发博文：markdown 文本编辑器（typora）、图床神器（ipic，暂时没windows版本）的筛选xxx  5/24/2018</li>\n<li>添加菜单项：标签、分类、404、站点地图、关于、日程表、资源API、我的足迹、个人简历等等。    5/23/2018</li>\n<li>集成三方服务：数据统计与分析（百度统计，腾讯分析、不蒜子统计）、阅读次数统计（LeanCloud）、搜索（Local Search）、评论系统（Valine）、分享服务（百度分享）、打赏（xxx）</li>\n<li>自定义样式：项目/themes/next/source/css/custom/custom.styl  5/23/2018<ul>\n<li>文本选中颜色修改（默认选中文本背景为黑色，代码块的也是，代码块选中与否分辨不清，故而修改文本选中颜色为蓝色。当然，另外一种方式就是改变代码块的默认背景色，把黑色改成其他淡色就行。）</li>\n<li>代码块的代码颜色（如你不满意官方提供的风格，可自行调整）</li>\n<li>头像样式修改，添加动画等等。</li>\n<li>底栏的标签列表（#字符换成图标），作者的图标修改</li>\n</ul>\n</li>\n<li>博客文章内的代码在线运行（codepend，jsFiddle）    5/28/2018<br><a href=\"https://hexo.io/zh-cn/docs/tag-plugins.html#jsFiddle\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs/tag-plugins.html#jsFiddle</a></li>\n<li>NexT主题优化（官网没有文档）一【参考教程：<a href=\"https://www.jianshu.com/p/3ff20be8574c\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/3ff20be8574c</a> 】  5/24/2018<ul>\n<li>(一)  头像设置、浏览页面的时候显示当前浏览进度</li>\n<li>(二) 开启版权声明、自定义文章底部版权声明、在右上角或者左上角实现fork me on github、修改文章底部的那个带#号的标签、添加顶部加载条、修改网页底部</li>\n<li>(三) 博文置顶、统计功能（显示文章字数统计,阅读时长,总字数）、修改文章内文本连接样式、每篇文章末尾统一添加“本文结束”标记、文章顶部显示更新时间、修改访问URL路径、给代码块添加复制功能xxx、新建404界面、xxx静态资源压缩gulp</li>\n<li>(四) SEO 优化sitemap （google和百度收录）</li>\n</ul>\n</li>\n<li>NexT主题优化（官网没有文档）二    5/27/2018<ul>\n<li>Hexo NexT主题添加点击爱心效果： <a href=\"https://asdfv1929.github.io/2018/01/26/click-love/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/01/26/click-love/</a></li>\n<li>Hexo NexT主题中添加网页音乐播放器功能xxx：<a href=\"https://asdfv1929.github.io/2018/05/26/next-add-music/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/05/26/next-add-music/</a></li>\n<li>人体时钟引入：hone hone clock</li>\n</ul>\n</li>\n<li>评论系统筛选和配置    5/27/2018  <ul>\n<li>gitalk（没配置成功）：<a href=\"https://asdfv1929.github.io/2018/01/20/gitalk/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/01/20/gitalk/</a></li>\n<li>Valine： <a href=\"https://valine.js.org/\" target=\"_blank\" rel=\"noopener\">https://valine.js.org/</a></li>\n<li>HyperComments：收费。后期看情况是否使用</li>\n</ul>\n</li>\n</ul>\n"},{"title":"分类","date":"2018-05-22T11:38:32.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-05-22 19:38:32\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-05-23T12:46:21.884Z","path":"categories/index.html","layout":"page","_id":"cji0ejmrc005wg4l1w7s4rjfq","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"<!DOCTYPE html>\n<!-- saved from url=(0088)file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/webli.html -->\n<html lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\n\t<title>webli</title>\n\t<link href=\"file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/favorite.ico\" rel=\"icon\" type=\"image/x-icon\">\n\t<!-- <link rel=\"stylesheet\" href=\"./webli_files/style.css\"> -->\n\t<style> \n\t\tbody,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td,hr,button,article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section { \n\t\t  margin:0; \n\t\t  padding:0; \n\t\t  -webkit-box-sizing:border-box;\n\t\t  -moz-box-sizing:border-box;\n\t\t  -ms-box-sizing:border-box;\n\t\t  -o-box-sizing:border-box;\n\t\t  box-sizing:border-box;\n\t\t} \n\n\t\thtml,body{\n\t\t    width: 100%;\n\t\t    height: 100%;\n\t\t    color: #333;\n\t\t    font-family: \"Helvetica Neue\",Helvetica,Arial,\"PingFang SC\",\"Hiragino Sans GB\",\"Heiti SC\",\"Microsoft YaHei\",\"WenQuanYi Micro Hei\",sans-serif;\n\t\t    font-family: -apple-system,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Arial,sans-serif;\n\t\t    font-size: 15px;\n\t\t    background-color: #f4f5f5;\n\t\t}\n\t\t.clearfix:before,.clearfix:after { \n\t\t  content:\"\"; \n\t\t  display:table; \n\t\t} \n\t\t.clearfix:after { \n\t\t  clear:both; \n\t\t  overflow:hidden; \n\t\t  display: block;\n\t\t  visibility: hidden;\n\t\t  height: 0;\n\t\t  line-height: 0;\n\t\t} \n\t\t.clearfix { \n\t\t  *zoom:1;  \n\t\t} \n\t\ta{\n\t\t  color: #007fff;\n\t\t}\n\t\t.wrap{\n\t\t  width: 800px;\n\t\t  margin:50px auto;\n\t\t  padding: 30px 50px;\n\t\t  background-color: #fff;\n\t\t  position: relative;\n\t\t  border: 1px solid #eee;\n\t\t  border-radius: 10px;\n\t\t  color: #000;\n\t\t  box-shadow: 0 0 25px rgba(0,0,0,.5);\n\t\t}\n\t\t.color{\n\t\t  color: #945c4c;\n\t\t}\n\t\t.name{\n\t\t  font-size: 30px;\n\t\t}\n\t\t.info{\n\t\t  width: 100%;\n\t\t  margin-top: 10px;\n\t\t  margin-left: 2em;\n\t\t}\n\t\t.info td{\n\t\t  padding: 5px 0;\n\t\t  /*font-size: 16px;*/\n\t\t}\n\t\t.title{\n\t\t  color: #333;\n\t\t  font-size: 24px;\n\t\t  font-weight: 600;\n\t\t  margin-top: 30px;\n\t\t  border-bottom: 1px solid #ececec;\n\t\t}\n\t\t.title:first-child{\n\t\t  margin-top: 0;\n\t\t}\n\t\t.sec{\n\t\t  padding-left: 2em;\n\t\t  padding-top: .5em;\n\t\t}\n\t\t.tec{\n\t\t  line-height: 1.8em;\n\t\t  margin-top: 12px;\n\t\t}\n\t\t.exp{\n\t\t  padding-left: 2em;\n\t\t}\n\t\t.exp .-company{\n\t\t  color: #444;\n\t\t  font-size: 20px;\n\t\t}\n\t\t.exp .-time{\n\t\t  font-size: 14px;\n\t\t}\n\t\t.exp .-post{\n\t\t  color: #666;\n\t\t  font-size: 16px;\n\t\t}\n\t\t.exp .-tech{\n\t\t  font-size: 14px;\n\t\t  padding-left: .5em;\n\t\t  border-left: 4px solid #cbcbcb;\n\t\t  background: #f4f5f5;\n\t\t}\n\t\t.exp .-project{\n\t\t  color: #666;\n\t\t  font-size: 16px;\n\t\t}\n\t\t.exp .-faq{\n\t\t  color: #999;\n\t\t  font-size: 14px;\n\t\t}\n\t\t.exp .-faq p{\n\t\t\ttext-indent: 2em;\n\t\t}\n\t\t.exp .-tap{\n\t\t  margin: .6em 0;\n\t\t}\n\t\t.exp .-item{\n\t\t  line-height: 1.8em;\n\t\t  /*font-size: 16px;*/\n\t\t  position: relative;\n\t\t}\n\t\t.exp .-list{\n\t\t  list-style: none;\n\t\t  margin: 0;\n\t\t  padding: 0;\n\t\t}\n\t\t.exp .-item:before {\n\t\t    content: \"\";\n\t\t    position: absolute;\n\t\t    top: 50%;\n\t\t    left: -10px;\n\t\t    width: 5px;\n\t\t    height: 5px;\n\t\t    -webkit-transform: translateY(-50%);\n\t\t    transform: translateY(-50%);\n\t\t    border-radius: 50%;\n\t\t    background-color: #999;\n\t\t}\n\t\t.download{\n\t\t  position: fixed;\n\t\t  left: 50%;\n\t\t  margin-left: 415px;\n\t\t  top:55px;\n\t\t  color:#FF9900;\n\t\t}\n\t\t.download:hover{\n\t\t  color:#FF6600;\n\t\t}\n\t\t.download i{\n\t\t  font-size: 22px;\n\t\t}\n\t\t.icon-download:before {\n\t\t    content: \"\\27f1\";\n\t\t}\n\t</style>\n\t<!--\n\t<style id=\"style-1-cropbar-clipper\">\n\t\t.en-markup-crop-options {\n\t\t    top: 18px !important;\n\t\t    left: 50% !important;\n\t\t    margin-left: -100px !important;\n\t\t    width: 200px !important;\n\t\t    border: 2px rgba(255,255,255,.38) solid !important;\n\t\t    border-radius: 4px !important;\n\t\t}\n\n\t\t.en-markup-crop-options div div:first-of-type {\n\t\t    margin-left: 0px !important;\n\t\t}\n\t</style>\n\t-->\n</head>\n<body>\n\t<div class=\"wrap\">\n\t\t<h2 class=\"title color\">基本情况</h2>\n\t\t<table class=\"info\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>姓名：黎飞</td>\n\t\t\t\t\t<td>职位：web 前端工程师</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>电话：184 8236 8234</td>\n\t\t\t\t\t<td>邮箱：905421889@qq.com</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>性别：男</td>\n\t\t\t\t\t<td>学历：本科</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>专业：软件工程</td>\n\t\t\t\t\t<td>学校：中南林业科技大学</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>博客：Fli <br>\n\t\t\t\t\t\t<a href=\"http://www.missfli.com/\"><sub>http://www.missfli.com</sub></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>简书：恬雅过客 <br>\n\t\t\t\t\t\t<a href=\"http://www.jianshu.com/u/2e16695e0599\"><sub>http://www.jianshu.com/u/2e16695e0599</sub></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<h3 class=\"title color\">专业技能</h3>\n\t\t<div class=\"sec\">\n\t\t\t<ul class=\"tec\">\n\t\t\t\t<li>熟练编写结构良好的语义化 html 和兼容主流浏览器的 css 代码</li>\n\t\t\t\t<li>熟练使用JQuery；熟悉基于jQuery的UI库（如bootstrap等）</li>\n\t\t\t\t<li>熟悉 html5、css3、响应式设计</li>\n\t\t\t\t<li>熟练使用前端代码调试工具（ chrome 调试）和 photoshop 进行常规操作</li>\n\t\t\t\t<li>熟练使用 svn、git 等工具进行日常代码管理</li>\n\t\t\t\t<li>了解模块化开发 SeaJs ，熟练使用前端构建工具 gulp </li> \n\t\t\t\t<li>理解 Ajax 原理，熟悉基于 Ajax 技术的应用开发</li>\n\t\t\t\t<li>了解不同设备及平台的特性，熟悉浏览器兼容性问题的调试处理</li>\n\t\t\t\t<li>了解主流 MVVM 框架，如 react、Vue 和 AngularJS </li>\n\t\t\t\t<li>了解 java 开发和oracle、mysql 数据库</li>\n\t\t\t\t<!-- <li>熟练编写结构良好的语义化 html 和兼容主流浏览器的 css 代码</li>\n\t\t\t\t<li>熟悉 javascript，并能写出兼具性能和复用性的代码</li>\n\t\t\t\t<li>熟练使用 gulp 前端自动化构建工具和jQuery、bootstrap等前端框架</li> -->\n\t\t\t</ul>\n\t\t</div>\n\t\t<h3 class=\"title color\">工作经历</h3>\n\t\t<div class=\"exp\">\n\t\t\t<!-- 工作经验三 -->\n            <h4 class=\"-company -tap\">成都房联云码科技有限公司</h4>\n            <p class=\"-time -tap\">2017.06 ~ 现在</p>\n            <p class=\"-post -tap\">web前端工程师</p>\n            <p class=\"-tech -tap\"><span> html html5 css css3 js jquery git svn sass seajs 百度地图 微信开发 百度图表echats 支付宝AntUI</span></p>\n            <p class=\"-project -tap\">透明房产网（买卖、租赁），拉萨市房地产市场信息网，南充市房地产管理局，成都城乡房管（微房管），支付宝（城市服务）</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">负责Web系统和Web App的前端开发和维护</li>\n            \t<li class=\"-item\">与设计师、后台开发人员、产品经理协同实现产品界面和功能</li>\n            \t<li class=\"-item\">参与需求可行性和UI交互体验讨论</li>\n            \t<li class=\"-item\">解决项目中的各种界面问题、性能问题、兼容性问题等</li>\n            \t<li class=\"-item\">了解前端新技术</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t<a href=\"http://www.funi.com/\">透明房产网 http://www.funi.com </a>的日常维护和其下的租赁、买卖项目的新功能模块（如国有住房）的开发维护，包括部分手机wap页面开发。\n            \t<a href=\"http://xzlsfgj.gov.cn/\">拉萨市房地产市场信息网 http://xzlsfgj.gov.cn </a>和<a href=\"http://www.ncfdj.gov.cn/\">南充市房地产管理局 http://www.ncfdj.gov.cn </a>开发维护。\n            \t成都城乡房管的微信公众号的已有功能的维护和新功能的开发。比如人才安居、查询服务等等。支付宝的城市服务相关功能的接入开发等。当然这过程中也碰到过不是问题，比如多行文本溢出显示省略号；html5 和 css3 在 IE8 浏览器的兼容性（圆角，伪类选择符：not,:last-child等等）; line-height:150%; 和 line-height:1.5; 的区别；行内块元素的空白间距问题；表头固定，表内容可滚动；pdf预览效果; 父元素如果存在 transform 属性，子元素的 position: fixed 属性无效; 当每个浮动标签（float:left/right;）高度不一致,会挤到下一行导致空白区域等等，查阅相关资料文档都已解决。\n            \t</p>\n            \t<p></p>\n            </div>\n\t\t\t<!-- 工作经验二 -->\n            <h4 class=\"-company -tap\">成都世纪光合作用科技有限公司</h4>\n            <p class=\"-time -tap\">2014.08 ~ 2017.06</p>\n            <p class=\"-post -tap\">web前端工程师</p>\n            <p class=\"-tech -tap\"><span> html html5 css css3 js git svn bootstrap appcan struts spring hibernate java jquery jsp mysql </span></p>\n            <p class=\"-project -tap\">光合作用官网，360买灯网，供应商系统，权限管理系统</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">参与新功能模块的开发维护和已有模块的功能修改、维护</li>\n            \t<li class=\"-item\">参与前端框架搭建以及类库选择</li>\n            \t<li class=\"-item\">参与前端基础组件开发和前端代码规范定制</li>\n            \t<li class=\"-item\">独立一人完成所有模块的开发，维护和优化</li>\n            \t<li class=\"-item\">调研前端新技术</li>\n            \t<li class=\"-item\">参与需求可行性讨论</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t后面3个项目基本就是日常修改维护工作，偶尔加个新功能模块。后面公司转型做智能led灯后，用appcan做过移动端页面开发。再后来，led灯产品出来后，需要官方网站，就由我一人独立完成官方网站的开发维护和优化。从需求分析到网站上线和后面的修改维护等。<br>\n            \t<a href=\"http://www.lettin.cn/\">光合作用官网（www.lettin.cn）</a>的开发过程中，碰到不少问题。比如设计师偏爱思源黑体（中文字体），roboto(英文字体)字体，可是这种字体在大多数电脑上默认是没有的，英文字体文件不大，所以好解决，直接下载下来放在项目里引用，或用三方的cdn公共库链接也行。可是中文字体很大啊，都是以M为单位，并且将字体文件放项目里引用，会有首次加载的3秒的延迟刷新页面的情况。使用切图片的方法更不用说了，少量可以，大部分的标题都用到该字体就不行了，更何况不便于浏览器爬虫抓取SEO搜索。最终选择了子集化（fontmin）的方式解决，只有用到的该字体的文字才转化成字体文件，这样字体文件就不大了。\n            \t</p>\n            \t<p>\n            \t还有网站的pc端，平板和移动端的适配问题，通过搜集资料，参考各大知名网站，才最终定下来的，内容区的分界点1200，1024，768。高清屏和retina屏的图片采用2x图。图片，js，css压缩管理等等打算用gulp来处理，还未来得及正式用在该项目上。还有移动端的图文顺序和非移动端的图文顺序完全相反，用flex布局来解决的。\n            \t</p>\n            </div>\n            <!-- 工作经验一 -->\n            <h4 class=\"-company -tap\">长沙乐科信息技术有限公司</h4>\n            <p class=\"-time -tap\">2012.10 ~ 2014.08</p>\n            <p class=\"-post -tap\"> java 开发工程师</p>\n            <p class=\"-tech -tap\"><span> struts spring hibernate java jquery extjs jsp oracle mysql cvs html css </span></p>\n            <p class=\"-project -tap\">电话营销系统，客服系统，权限系统，IVR自动培训系统</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">参与新功能模块的开发维护和已有模块的功能修改、维护</li>\n            \t<li class=\"-item\">项目的实施部署，改动需求沟通，给客户进行系统使用培训</li>\n            \t<li class=\"-item\">定制化项目的文档编写，使用手册编写以及售后技术服务</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t除了日常开发维护工作为，还做项目的现场实施、培训、售后技术支持等等工作，参与的项目不少（湖南邵阳移动，湖南常德昆仑燃气，广西玉林家政服务中心，上海巅峰郑州分公司，湖南国税局），当然也碰到过不少问题，比如在湖南常德昆仑燃气项目中，电话营销系统的客户号码批量导入和报表导出，读取数据（客户姓名，号码等）时出现中断而导致数据记录数不对的问题，经过跟代码和调查，发现是excel版本不同和数据表中出现空行导致的，经过代码的空行判断和版本规范解决了。\n            \t</p>\n            \t<p>\n            \t另外，湖南邵阳移动项目，该公司客服人员的文化程度不一，电脑知识了解不一，导致使用系统外呼时出现各种问题，外呼不了，打电话记录数不对，昨天能正常今天突然不能正常使用等等问题。通过重复多次指导客户使用，并编写详尽的使用手册以及教会用户怎么进行简单的浏览器配置解决的。\t\n            \t</p>\n            \t<p>\n            \t还有个有意思的经历，那是广西玉林家政服务中心的项目，我们提前3天到现场，发现客户之前承诺的准备工作基本没开展，就敦促他们赶紧开始，然后到项目上线的最后一个晚上（第二天上面领导检查），我们和客户都压力山大啊，什么都弄好了，试音时，发现话麦发不出声音，统一换耳机，时间上来不及，只能从软件方面着手，调查各种原因，后来还让公司的技术boss远程解决，两边一堆人围绕该问题各种折腾，下午到晚上，再到快天亮的时候，我突然想到是不是声音的设置不同导致的，技术boss试了一下还真是。第二天客户顺利地迎接领导的检查。\t\n            \t</p>\n            </div>\n        </div>\n\t\t<h3 class=\"title color\">个人说明</h3>\n\t\t<div class=\"sec\">\n\t\t\t<div class=\"ct\">\n\t\t\t\t做事比较沉稳，有责任心，坦诚，直率，抗压能力强，有耐心。有点固执，认定的事就会坚持下去。作为一个前端开发人员，要多看看技术书，逛逛技术论坛，多看看大神们的代码思路，多试试自己写些东西，这样才能提高自己的技术能力。在工作中能够敢于尝试，勇于尝试，突破自我。\n\t\t\t</div>\n\t\t</div>\n\t\t<a class=\"download\" download=\"\" href=\"file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/webli.pdf\">\n\t\t\t<i class=\"icon-download\"></i>\n\t\t</a>\n\t</div>\n\n</body></html>","source":"custom/bio.html","raw":"<!DOCTYPE html>\n<!-- saved from url=(0088)file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/webli.html -->\n<html lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\n\t<title>webli</title>\n\t<link href=\"file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/favorite.ico\" rel=\"icon\" type=\"image/x-icon\">\n\t<!-- <link rel=\"stylesheet\" href=\"./webli_files/style.css\"> -->\n\t<style> \n\t\tbody,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td,hr,button,article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section { \n\t\t  margin:0; \n\t\t  padding:0; \n\t\t  -webkit-box-sizing:border-box;\n\t\t  -moz-box-sizing:border-box;\n\t\t  -ms-box-sizing:border-box;\n\t\t  -o-box-sizing:border-box;\n\t\t  box-sizing:border-box;\n\t\t} \n\n\t\thtml,body{\n\t\t    width: 100%;\n\t\t    height: 100%;\n\t\t    color: #333;\n\t\t    font-family: \"Helvetica Neue\",Helvetica,Arial,\"PingFang SC\",\"Hiragino Sans GB\",\"Heiti SC\",\"Microsoft YaHei\",\"WenQuanYi Micro Hei\",sans-serif;\n\t\t    font-family: -apple-system,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Arial,sans-serif;\n\t\t    font-size: 15px;\n\t\t    background-color: #f4f5f5;\n\t\t}\n\t\t.clearfix:before,.clearfix:after { \n\t\t  content:\"\"; \n\t\t  display:table; \n\t\t} \n\t\t.clearfix:after { \n\t\t  clear:both; \n\t\t  overflow:hidden; \n\t\t  display: block;\n\t\t  visibility: hidden;\n\t\t  height: 0;\n\t\t  line-height: 0;\n\t\t} \n\t\t.clearfix { \n\t\t  *zoom:1;  \n\t\t} \n\t\ta{\n\t\t  color: #007fff;\n\t\t}\n\t\t.wrap{\n\t\t  width: 800px;\n\t\t  margin:50px auto;\n\t\t  padding: 30px 50px;\n\t\t  background-color: #fff;\n\t\t  position: relative;\n\t\t  border: 1px solid #eee;\n\t\t  border-radius: 10px;\n\t\t  color: #000;\n\t\t  box-shadow: 0 0 25px rgba(0,0,0,.5);\n\t\t}\n\t\t.color{\n\t\t  color: #945c4c;\n\t\t}\n\t\t.name{\n\t\t  font-size: 30px;\n\t\t}\n\t\t.info{\n\t\t  width: 100%;\n\t\t  margin-top: 10px;\n\t\t  margin-left: 2em;\n\t\t}\n\t\t.info td{\n\t\t  padding: 5px 0;\n\t\t  /*font-size: 16px;*/\n\t\t}\n\t\t.title{\n\t\t  color: #333;\n\t\t  font-size: 24px;\n\t\t  font-weight: 600;\n\t\t  margin-top: 30px;\n\t\t  border-bottom: 1px solid #ececec;\n\t\t}\n\t\t.title:first-child{\n\t\t  margin-top: 0;\n\t\t}\n\t\t.sec{\n\t\t  padding-left: 2em;\n\t\t  padding-top: .5em;\n\t\t}\n\t\t.tec{\n\t\t  line-height: 1.8em;\n\t\t  margin-top: 12px;\n\t\t}\n\t\t.exp{\n\t\t  padding-left: 2em;\n\t\t}\n\t\t.exp .-company{\n\t\t  color: #444;\n\t\t  font-size: 20px;\n\t\t}\n\t\t.exp .-time{\n\t\t  font-size: 14px;\n\t\t}\n\t\t.exp .-post{\n\t\t  color: #666;\n\t\t  font-size: 16px;\n\t\t}\n\t\t.exp .-tech{\n\t\t  font-size: 14px;\n\t\t  padding-left: .5em;\n\t\t  border-left: 4px solid #cbcbcb;\n\t\t  background: #f4f5f5;\n\t\t}\n\t\t.exp .-project{\n\t\t  color: #666;\n\t\t  font-size: 16px;\n\t\t}\n\t\t.exp .-faq{\n\t\t  color: #999;\n\t\t  font-size: 14px;\n\t\t}\n\t\t.exp .-faq p{\n\t\t\ttext-indent: 2em;\n\t\t}\n\t\t.exp .-tap{\n\t\t  margin: .6em 0;\n\t\t}\n\t\t.exp .-item{\n\t\t  line-height: 1.8em;\n\t\t  /*font-size: 16px;*/\n\t\t  position: relative;\n\t\t}\n\t\t.exp .-list{\n\t\t  list-style: none;\n\t\t  margin: 0;\n\t\t  padding: 0;\n\t\t}\n\t\t.exp .-item:before {\n\t\t    content: \"\";\n\t\t    position: absolute;\n\t\t    top: 50%;\n\t\t    left: -10px;\n\t\t    width: 5px;\n\t\t    height: 5px;\n\t\t    -webkit-transform: translateY(-50%);\n\t\t    transform: translateY(-50%);\n\t\t    border-radius: 50%;\n\t\t    background-color: #999;\n\t\t}\n\t\t.download{\n\t\t  position: fixed;\n\t\t  left: 50%;\n\t\t  margin-left: 415px;\n\t\t  top:55px;\n\t\t  color:#FF9900;\n\t\t}\n\t\t.download:hover{\n\t\t  color:#FF6600;\n\t\t}\n\t\t.download i{\n\t\t  font-size: 22px;\n\t\t}\n\t\t.icon-download:before {\n\t\t    content: \"\\27f1\";\n\t\t}\n\t</style>\n\t<!--\n\t<style id=\"style-1-cropbar-clipper\">\n\t\t.en-markup-crop-options {\n\t\t    top: 18px !important;\n\t\t    left: 50% !important;\n\t\t    margin-left: -100px !important;\n\t\t    width: 200px !important;\n\t\t    border: 2px rgba(255,255,255,.38) solid !important;\n\t\t    border-radius: 4px !important;\n\t\t}\n\n\t\t.en-markup-crop-options div div:first-of-type {\n\t\t    margin-left: 0px !important;\n\t\t}\n\t</style>\n\t-->\n</head>\n<body>\n\t<div class=\"wrap\">\n\t\t<h2 class=\"title color\">基本情况</h2>\n\t\t<table class=\"info\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>姓名：黎飞</td>\n\t\t\t\t\t<td>职位：web 前端工程师</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>电话：184 8236 8234</td>\n\t\t\t\t\t<td>邮箱：905421889@qq.com</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>性别：男</td>\n\t\t\t\t\t<td>学历：本科</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>专业：软件工程</td>\n\t\t\t\t\t<td>学校：中南林业科技大学</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>博客：Fli <br>\n\t\t\t\t\t\t<a href=\"http://www.missfli.com/\"><sub>http://www.missfli.com</sub></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>简书：恬雅过客 <br>\n\t\t\t\t\t\t<a href=\"http://www.jianshu.com/u/2e16695e0599\"><sub>http://www.jianshu.com/u/2e16695e0599</sub></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<h3 class=\"title color\">专业技能</h3>\n\t\t<div class=\"sec\">\n\t\t\t<ul class=\"tec\">\n\t\t\t\t<li>熟练编写结构良好的语义化 html 和兼容主流浏览器的 css 代码</li>\n\t\t\t\t<li>熟练使用JQuery；熟悉基于jQuery的UI库（如bootstrap等）</li>\n\t\t\t\t<li>熟悉 html5、css3、响应式设计</li>\n\t\t\t\t<li>熟练使用前端代码调试工具（ chrome 调试）和 photoshop 进行常规操作</li>\n\t\t\t\t<li>熟练使用 svn、git 等工具进行日常代码管理</li>\n\t\t\t\t<li>了解模块化开发 SeaJs ，熟练使用前端构建工具 gulp </li> \n\t\t\t\t<li>理解 Ajax 原理，熟悉基于 Ajax 技术的应用开发</li>\n\t\t\t\t<li>了解不同设备及平台的特性，熟悉浏览器兼容性问题的调试处理</li>\n\t\t\t\t<li>了解主流 MVVM 框架，如 react、Vue 和 AngularJS </li>\n\t\t\t\t<li>了解 java 开发和oracle、mysql 数据库</li>\n\t\t\t\t<!-- <li>熟练编写结构良好的语义化 html 和兼容主流浏览器的 css 代码</li>\n\t\t\t\t<li>熟悉 javascript，并能写出兼具性能和复用性的代码</li>\n\t\t\t\t<li>熟练使用 gulp 前端自动化构建工具和jQuery、bootstrap等前端框架</li> -->\n\t\t\t</ul>\n\t\t</div>\n\t\t<h3 class=\"title color\">工作经历</h3>\n\t\t<div class=\"exp\">\n\t\t\t<!-- 工作经验三 -->\n            <h4 class=\"-company -tap\">成都房联云码科技有限公司</h4>\n            <p class=\"-time -tap\">2017.06 ~ 现在</p>\n            <p class=\"-post -tap\">web前端工程师</p>\n            <p class=\"-tech -tap\"><span> html html5 css css3 js jquery git svn sass seajs 百度地图 微信开发 百度图表echats 支付宝AntUI</span></p>\n            <p class=\"-project -tap\">透明房产网（买卖、租赁），拉萨市房地产市场信息网，南充市房地产管理局，成都城乡房管（微房管），支付宝（城市服务）</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">负责Web系统和Web App的前端开发和维护</li>\n            \t<li class=\"-item\">与设计师、后台开发人员、产品经理协同实现产品界面和功能</li>\n            \t<li class=\"-item\">参与需求可行性和UI交互体验讨论</li>\n            \t<li class=\"-item\">解决项目中的各种界面问题、性能问题、兼容性问题等</li>\n            \t<li class=\"-item\">了解前端新技术</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t<a href=\"http://www.funi.com/\">透明房产网 http://www.funi.com </a>的日常维护和其下的租赁、买卖项目的新功能模块（如国有住房）的开发维护，包括部分手机wap页面开发。\n            \t<a href=\"http://xzlsfgj.gov.cn/\">拉萨市房地产市场信息网 http://xzlsfgj.gov.cn </a>和<a href=\"http://www.ncfdj.gov.cn/\">南充市房地产管理局 http://www.ncfdj.gov.cn </a>开发维护。\n            \t成都城乡房管的微信公众号的已有功能的维护和新功能的开发。比如人才安居、查询服务等等。支付宝的城市服务相关功能的接入开发等。当然这过程中也碰到过不是问题，比如多行文本溢出显示省略号；html5 和 css3 在 IE8 浏览器的兼容性（圆角，伪类选择符：not,:last-child等等）; line-height:150%; 和 line-height:1.5; 的区别；行内块元素的空白间距问题；表头固定，表内容可滚动；pdf预览效果; 父元素如果存在 transform 属性，子元素的 position: fixed 属性无效; 当每个浮动标签（float:left/right;）高度不一致,会挤到下一行导致空白区域等等，查阅相关资料文档都已解决。\n            \t</p>\n            \t<p></p>\n            </div>\n\t\t\t<!-- 工作经验二 -->\n            <h4 class=\"-company -tap\">成都世纪光合作用科技有限公司</h4>\n            <p class=\"-time -tap\">2014.08 ~ 2017.06</p>\n            <p class=\"-post -tap\">web前端工程师</p>\n            <p class=\"-tech -tap\"><span> html html5 css css3 js git svn bootstrap appcan struts spring hibernate java jquery jsp mysql </span></p>\n            <p class=\"-project -tap\">光合作用官网，360买灯网，供应商系统，权限管理系统</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">参与新功能模块的开发维护和已有模块的功能修改、维护</li>\n            \t<li class=\"-item\">参与前端框架搭建以及类库选择</li>\n            \t<li class=\"-item\">参与前端基础组件开发和前端代码规范定制</li>\n            \t<li class=\"-item\">独立一人完成所有模块的开发，维护和优化</li>\n            \t<li class=\"-item\">调研前端新技术</li>\n            \t<li class=\"-item\">参与需求可行性讨论</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t后面3个项目基本就是日常修改维护工作，偶尔加个新功能模块。后面公司转型做智能led灯后，用appcan做过移动端页面开发。再后来，led灯产品出来后，需要官方网站，就由我一人独立完成官方网站的开发维护和优化。从需求分析到网站上线和后面的修改维护等。<br>\n            \t<a href=\"http://www.lettin.cn/\">光合作用官网（www.lettin.cn）</a>的开发过程中，碰到不少问题。比如设计师偏爱思源黑体（中文字体），roboto(英文字体)字体，可是这种字体在大多数电脑上默认是没有的，英文字体文件不大，所以好解决，直接下载下来放在项目里引用，或用三方的cdn公共库链接也行。可是中文字体很大啊，都是以M为单位，并且将字体文件放项目里引用，会有首次加载的3秒的延迟刷新页面的情况。使用切图片的方法更不用说了，少量可以，大部分的标题都用到该字体就不行了，更何况不便于浏览器爬虫抓取SEO搜索。最终选择了子集化（fontmin）的方式解决，只有用到的该字体的文字才转化成字体文件，这样字体文件就不大了。\n            \t</p>\n            \t<p>\n            \t还有网站的pc端，平板和移动端的适配问题，通过搜集资料，参考各大知名网站，才最终定下来的，内容区的分界点1200，1024，768。高清屏和retina屏的图片采用2x图。图片，js，css压缩管理等等打算用gulp来处理，还未来得及正式用在该项目上。还有移动端的图文顺序和非移动端的图文顺序完全相反，用flex布局来解决的。\n            \t</p>\n            </div>\n            <!-- 工作经验一 -->\n            <h4 class=\"-company -tap\">长沙乐科信息技术有限公司</h4>\n            <p class=\"-time -tap\">2012.10 ~ 2014.08</p>\n            <p class=\"-post -tap\"> java 开发工程师</p>\n            <p class=\"-tech -tap\"><span> struts spring hibernate java jquery extjs jsp oracle mysql cvs html css </span></p>\n            <p class=\"-project -tap\">电话营销系统，客服系统，权限系统，IVR自动培训系统</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">参与新功能模块的开发维护和已有模块的功能修改、维护</li>\n            \t<li class=\"-item\">项目的实施部署，改动需求沟通，给客户进行系统使用培训</li>\n            \t<li class=\"-item\">定制化项目的文档编写，使用手册编写以及售后技术服务</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t除了日常开发维护工作为，还做项目的现场实施、培训、售后技术支持等等工作，参与的项目不少（湖南邵阳移动，湖南常德昆仑燃气，广西玉林家政服务中心，上海巅峰郑州分公司，湖南国税局），当然也碰到过不少问题，比如在湖南常德昆仑燃气项目中，电话营销系统的客户号码批量导入和报表导出，读取数据（客户姓名，号码等）时出现中断而导致数据记录数不对的问题，经过跟代码和调查，发现是excel版本不同和数据表中出现空行导致的，经过代码的空行判断和版本规范解决了。\n            \t</p>\n            \t<p>\n            \t另外，湖南邵阳移动项目，该公司客服人员的文化程度不一，电脑知识了解不一，导致使用系统外呼时出现各种问题，外呼不了，打电话记录数不对，昨天能正常今天突然不能正常使用等等问题。通过重复多次指导客户使用，并编写详尽的使用手册以及教会用户怎么进行简单的浏览器配置解决的。\t\n            \t</p>\n            \t<p>\n            \t还有个有意思的经历，那是广西玉林家政服务中心的项目，我们提前3天到现场，发现客户之前承诺的准备工作基本没开展，就敦促他们赶紧开始，然后到项目上线的最后一个晚上（第二天上面领导检查），我们和客户都压力山大啊，什么都弄好了，试音时，发现话麦发不出声音，统一换耳机，时间上来不及，只能从软件方面着手，调查各种原因，后来还让公司的技术boss远程解决，两边一堆人围绕该问题各种折腾，下午到晚上，再到快天亮的时候，我突然想到是不是声音的设置不同导致的，技术boss试了一下还真是。第二天客户顺利地迎接领导的检查。\t\n            \t</p>\n            </div>\n        </div>\n\t\t<h3 class=\"title color\">个人说明</h3>\n\t\t<div class=\"sec\">\n\t\t\t<div class=\"ct\">\n\t\t\t\t做事比较沉稳，有责任心，坦诚，直率，抗压能力强，有耐心。有点固执，认定的事就会坚持下去。作为一个前端开发人员，要多看看技术书，逛逛技术论坛，多看看大神们的代码思路，多试试自己写些东西，这样才能提高自己的技术能力。在工作中能够敢于尝试，勇于尝试，突破自我。\n\t\t\t</div>\n\t\t</div>\n\t\t<a class=\"download\" download=\"\" href=\"file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/webli.pdf\">\n\t\t\t<i class=\"icon-download\"></i>\n\t\t</a>\n\t</div>\n\n</body></html>","date":"2018-05-30T03:13:58.391Z","updated":"2018-04-22T03:23:58.491Z","path":"custom/bio.html","title":"","comments":1,"layout":"page","_id":"cji0ejmrl005xg4l1k2jlzkbd","content":"<!DOCTYPE html>\n<!-- saved from url=(0088)file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/webli.html -->\n<html lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\n\t<title>webli</title>\n\t<link href=\"file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/favorite.ico\" rel=\"icon\" type=\"image/x-icon\">\n\t<!-- <link rel=\"stylesheet\" href=\"./webli_files/style.css\"> -->\n\t<style> \n\t\tbody,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td,hr,button,article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section { \n\t\t  margin:0; \n\t\t  padding:0; \n\t\t  -webkit-box-sizing:border-box;\n\t\t  -moz-box-sizing:border-box;\n\t\t  -ms-box-sizing:border-box;\n\t\t  -o-box-sizing:border-box;\n\t\t  box-sizing:border-box;\n\t\t} \n\n\t\thtml,body{\n\t\t    width: 100%;\n\t\t    height: 100%;\n\t\t    color: #333;\n\t\t    font-family: \"Helvetica Neue\",Helvetica,Arial,\"PingFang SC\",\"Hiragino Sans GB\",\"Heiti SC\",\"Microsoft YaHei\",\"WenQuanYi Micro Hei\",sans-serif;\n\t\t    font-family: -apple-system,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Arial,sans-serif;\n\t\t    font-size: 15px;\n\t\t    background-color: #f4f5f5;\n\t\t}\n\t\t.clearfix:before,.clearfix:after { \n\t\t  content:\"\"; \n\t\t  display:table; \n\t\t} \n\t\t.clearfix:after { \n\t\t  clear:both; \n\t\t  overflow:hidden; \n\t\t  display: block;\n\t\t  visibility: hidden;\n\t\t  height: 0;\n\t\t  line-height: 0;\n\t\t} \n\t\t.clearfix { \n\t\t  *zoom:1;  \n\t\t} \n\t\ta{\n\t\t  color: #007fff;\n\t\t}\n\t\t.wrap{\n\t\t  width: 800px;\n\t\t  margin:50px auto;\n\t\t  padding: 30px 50px;\n\t\t  background-color: #fff;\n\t\t  position: relative;\n\t\t  border: 1px solid #eee;\n\t\t  border-radius: 10px;\n\t\t  color: #000;\n\t\t  box-shadow: 0 0 25px rgba(0,0,0,.5);\n\t\t}\n\t\t.color{\n\t\t  color: #945c4c;\n\t\t}\n\t\t.name{\n\t\t  font-size: 30px;\n\t\t}\n\t\t.info{\n\t\t  width: 100%;\n\t\t  margin-top: 10px;\n\t\t  margin-left: 2em;\n\t\t}\n\t\t.info td{\n\t\t  padding: 5px 0;\n\t\t  /*font-size: 16px;*/\n\t\t}\n\t\t.title{\n\t\t  color: #333;\n\t\t  font-size: 24px;\n\t\t  font-weight: 600;\n\t\t  margin-top: 30px;\n\t\t  border-bottom: 1px solid #ececec;\n\t\t}\n\t\t.title:first-child{\n\t\t  margin-top: 0;\n\t\t}\n\t\t.sec{\n\t\t  padding-left: 2em;\n\t\t  padding-top: .5em;\n\t\t}\n\t\t.tec{\n\t\t  line-height: 1.8em;\n\t\t  margin-top: 12px;\n\t\t}\n\t\t.exp{\n\t\t  padding-left: 2em;\n\t\t}\n\t\t.exp .-company{\n\t\t  color: #444;\n\t\t  font-size: 20px;\n\t\t}\n\t\t.exp .-time{\n\t\t  font-size: 14px;\n\t\t}\n\t\t.exp .-post{\n\t\t  color: #666;\n\t\t  font-size: 16px;\n\t\t}\n\t\t.exp .-tech{\n\t\t  font-size: 14px;\n\t\t  padding-left: .5em;\n\t\t  border-left: 4px solid #cbcbcb;\n\t\t  background: #f4f5f5;\n\t\t}\n\t\t.exp .-project{\n\t\t  color: #666;\n\t\t  font-size: 16px;\n\t\t}\n\t\t.exp .-faq{\n\t\t  color: #999;\n\t\t  font-size: 14px;\n\t\t}\n\t\t.exp .-faq p{\n\t\t\ttext-indent: 2em;\n\t\t}\n\t\t.exp .-tap{\n\t\t  margin: .6em 0;\n\t\t}\n\t\t.exp .-item{\n\t\t  line-height: 1.8em;\n\t\t  /*font-size: 16px;*/\n\t\t  position: relative;\n\t\t}\n\t\t.exp .-list{\n\t\t  list-style: none;\n\t\t  margin: 0;\n\t\t  padding: 0;\n\t\t}\n\t\t.exp .-item:before {\n\t\t    content: \"\";\n\t\t    position: absolute;\n\t\t    top: 50%;\n\t\t    left: -10px;\n\t\t    width: 5px;\n\t\t    height: 5px;\n\t\t    -webkit-transform: translateY(-50%);\n\t\t    transform: translateY(-50%);\n\t\t    border-radius: 50%;\n\t\t    background-color: #999;\n\t\t}\n\t\t.download{\n\t\t  position: fixed;\n\t\t  left: 50%;\n\t\t  margin-left: 415px;\n\t\t  top:55px;\n\t\t  color:#FF9900;\n\t\t}\n\t\t.download:hover{\n\t\t  color:#FF6600;\n\t\t}\n\t\t.download i{\n\t\t  font-size: 22px;\n\t\t}\n\t\t.icon-download:before {\n\t\t    content: \"\\27f1\";\n\t\t}\n\t</style>\n\t<!--\n\t<style id=\"style-1-cropbar-clipper\">\n\t\t.en-markup-crop-options {\n\t\t    top: 18px !important;\n\t\t    left: 50% !important;\n\t\t    margin-left: -100px !important;\n\t\t    width: 200px !important;\n\t\t    border: 2px rgba(255,255,255,.38) solid !important;\n\t\t    border-radius: 4px !important;\n\t\t}\n\n\t\t.en-markup-crop-options div div:first-of-type {\n\t\t    margin-left: 0px !important;\n\t\t}\n\t</style>\n\t-->\n</head>\n<body>\n\t<div class=\"wrap\">\n\t\t<h2 class=\"title color\">基本情况</h2>\n\t\t<table class=\"info\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>姓名：黎飞</td>\n\t\t\t\t\t<td>职位：web 前端工程师</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>电话：184 8236 8234</td>\n\t\t\t\t\t<td>邮箱：905421889@qq.com</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>性别：男</td>\n\t\t\t\t\t<td>学历：本科</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>专业：软件工程</td>\n\t\t\t\t\t<td>学校：中南林业科技大学</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>博客：Fli <br>\n\t\t\t\t\t\t<a href=\"http://www.missfli.com/\" target=\"_blank\" rel=\"noopener\"><sub>http://www.missfli.com</sub></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>简书：恬雅过客 <br>\n\t\t\t\t\t\t<a href=\"http://www.jianshu.com/u/2e16695e0599\" target=\"_blank\" rel=\"noopener\"><sub>http://www.jianshu.com/u/2e16695e0599</sub></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<h3 class=\"title color\">专业技能</h3>\n\t\t<div class=\"sec\">\n\t\t\t<ul class=\"tec\">\n\t\t\t\t<li>熟练编写结构良好的语义化 html 和兼容主流浏览器的 css 代码</li>\n\t\t\t\t<li>熟练使用JQuery；熟悉基于jQuery的UI库（如bootstrap等）</li>\n\t\t\t\t<li>熟悉 html5、css3、响应式设计</li>\n\t\t\t\t<li>熟练使用前端代码调试工具（ chrome 调试）和 photoshop 进行常规操作</li>\n\t\t\t\t<li>熟练使用 svn、git 等工具进行日常代码管理</li>\n\t\t\t\t<li>了解模块化开发 SeaJs ，熟练使用前端构建工具 gulp </li> \n\t\t\t\t<li>理解 Ajax 原理，熟悉基于 Ajax 技术的应用开发</li>\n\t\t\t\t<li>了解不同设备及平台的特性，熟悉浏览器兼容性问题的调试处理</li>\n\t\t\t\t<li>了解主流 MVVM 框架，如 react、Vue 和 AngularJS </li>\n\t\t\t\t<li>了解 java 开发和oracle、mysql 数据库</li>\n\t\t\t\t<!-- <li>熟练编写结构良好的语义化 html 和兼容主流浏览器的 css 代码</li>\n\t\t\t\t<li>熟悉 javascript，并能写出兼具性能和复用性的代码</li>\n\t\t\t\t<li>熟练使用 gulp 前端自动化构建工具和jQuery、bootstrap等前端框架</li> -->\n\t\t\t</ul>\n\t\t</div>\n\t\t<h3 class=\"title color\">工作经历</h3>\n\t\t<div class=\"exp\">\n\t\t\t<!-- 工作经验三 -->\n            <h4 class=\"-company -tap\">成都房联云码科技有限公司</h4>\n            <p class=\"-time -tap\">2017.06 ~ 现在</p>\n            <p class=\"-post -tap\">web前端工程师</p>\n            <p class=\"-tech -tap\"><span> html html5 css css3 js jquery git svn sass seajs 百度地图 微信开发 百度图表echats 支付宝AntUI</span></p>\n            <p class=\"-project -tap\">透明房产网（买卖、租赁），拉萨市房地产市场信息网，南充市房地产管理局，成都城乡房管（微房管），支付宝（城市服务）</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">负责Web系统和Web App的前端开发和维护</li>\n            \t<li class=\"-item\">与设计师、后台开发人员、产品经理协同实现产品界面和功能</li>\n            \t<li class=\"-item\">参与需求可行性和UI交互体验讨论</li>\n            \t<li class=\"-item\">解决项目中的各种界面问题、性能问题、兼容性问题等</li>\n            \t<li class=\"-item\">了解前端新技术</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t<a href=\"http://www.funi.com/\" target=\"_blank\" rel=\"noopener\">透明房产网 http://www.funi.com </a>的日常维护和其下的租赁、买卖项目的新功能模块（如国有住房）的开发维护，包括部分手机wap页面开发。\n            \t<a href=\"http://xzlsfgj.gov.cn/\" target=\"_blank\" rel=\"noopener\">拉萨市房地产市场信息网 http://xzlsfgj.gov.cn </a>和<a href=\"http://www.ncfdj.gov.cn/\" target=\"_blank\" rel=\"noopener\">南充市房地产管理局 http://www.ncfdj.gov.cn </a>开发维护。\n            \t成都城乡房管的微信公众号的已有功能的维护和新功能的开发。比如人才安居、查询服务等等。支付宝的城市服务相关功能的接入开发等。当然这过程中也碰到过不是问题，比如多行文本溢出显示省略号；html5 和 css3 在 IE8 浏览器的兼容性（圆角，伪类选择符：not,:last-child等等）; line-height:150%; 和 line-height:1.5; 的区别；行内块元素的空白间距问题；表头固定，表内容可滚动；pdf预览效果; 父元素如果存在 transform 属性，子元素的 position: fixed 属性无效; 当每个浮动标签（float:left/right;）高度不一致,会挤到下一行导致空白区域等等，查阅相关资料文档都已解决。\n            \t</p>\n            \t<p></p>\n            </div>\n\t\t\t<!-- 工作经验二 -->\n            <h4 class=\"-company -tap\">成都世纪光合作用科技有限公司</h4>\n            <p class=\"-time -tap\">2014.08 ~ 2017.06</p>\n            <p class=\"-post -tap\">web前端工程师</p>\n            <p class=\"-tech -tap\"><span> html html5 css css3 js git svn bootstrap appcan struts spring hibernate java jquery jsp mysql </span></p>\n            <p class=\"-project -tap\">光合作用官网，360买灯网，供应商系统，权限管理系统</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">参与新功能模块的开发维护和已有模块的功能修改、维护</li>\n            \t<li class=\"-item\">参与前端框架搭建以及类库选择</li>\n            \t<li class=\"-item\">参与前端基础组件开发和前端代码规范定制</li>\n            \t<li class=\"-item\">独立一人完成所有模块的开发，维护和优化</li>\n            \t<li class=\"-item\">调研前端新技术</li>\n            \t<li class=\"-item\">参与需求可行性讨论</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t后面3个项目基本就是日常修改维护工作，偶尔加个新功能模块。后面公司转型做智能led灯后，用appcan做过移动端页面开发。再后来，led灯产品出来后，需要官方网站，就由我一人独立完成官方网站的开发维护和优化。从需求分析到网站上线和后面的修改维护等。<br>\n            \t<a href=\"http://www.lettin.cn/\" target=\"_blank\" rel=\"noopener\">光合作用官网（www.lettin.cn）</a>的开发过程中，碰到不少问题。比如设计师偏爱思源黑体（中文字体），roboto(英文字体)字体，可是这种字体在大多数电脑上默认是没有的，英文字体文件不大，所以好解决，直接下载下来放在项目里引用，或用三方的cdn公共库链接也行。可是中文字体很大啊，都是以M为单位，并且将字体文件放项目里引用，会有首次加载的3秒的延迟刷新页面的情况。使用切图片的方法更不用说了，少量可以，大部分的标题都用到该字体就不行了，更何况不便于浏览器爬虫抓取SEO搜索。最终选择了子集化（fontmin）的方式解决，只有用到的该字体的文字才转化成字体文件，这样字体文件就不大了。\n            \t</p>\n            \t<p>\n            \t还有网站的pc端，平板和移动端的适配问题，通过搜集资料，参考各大知名网站，才最终定下来的，内容区的分界点1200，1024，768。高清屏和retina屏的图片采用2x图。图片，js，css压缩管理等等打算用gulp来处理，还未来得及正式用在该项目上。还有移动端的图文顺序和非移动端的图文顺序完全相反，用flex布局来解决的。\n            \t</p>\n            </div>\n            <!-- 工作经验一 -->\n            <h4 class=\"-company -tap\">长沙乐科信息技术有限公司</h4>\n            <p class=\"-time -tap\">2012.10 ~ 2014.08</p>\n            <p class=\"-post -tap\"> java 开发工程师</p>\n            <p class=\"-tech -tap\"><span> struts spring hibernate java jquery extjs jsp oracle mysql cvs html css </span></p>\n            <p class=\"-project -tap\">电话营销系统，客服系统，权限系统，IVR自动培训系统</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">参与新功能模块的开发维护和已有模块的功能修改、维护</li>\n            \t<li class=\"-item\">项目的实施部署，改动需求沟通，给客户进行系统使用培训</li>\n            \t<li class=\"-item\">定制化项目的文档编写，使用手册编写以及售后技术服务</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t除了日常开发维护工作为，还做项目的现场实施、培训、售后技术支持等等工作，参与的项目不少（湖南邵阳移动，湖南常德昆仑燃气，广西玉林家政服务中心，上海巅峰郑州分公司，湖南国税局），当然也碰到过不少问题，比如在湖南常德昆仑燃气项目中，电话营销系统的客户号码批量导入和报表导出，读取数据（客户姓名，号码等）时出现中断而导致数据记录数不对的问题，经过跟代码和调查，发现是excel版本不同和数据表中出现空行导致的，经过代码的空行判断和版本规范解决了。\n            \t</p>\n            \t<p>\n            \t另外，湖南邵阳移动项目，该公司客服人员的文化程度不一，电脑知识了解不一，导致使用系统外呼时出现各种问题，外呼不了，打电话记录数不对，昨天能正常今天突然不能正常使用等等问题。通过重复多次指导客户使用，并编写详尽的使用手册以及教会用户怎么进行简单的浏览器配置解决的。\t\n            \t</p>\n            \t<p>\n            \t还有个有意思的经历，那是广西玉林家政服务中心的项目，我们提前3天到现场，发现客户之前承诺的准备工作基本没开展，就敦促他们赶紧开始，然后到项目上线的最后一个晚上（第二天上面领导检查），我们和客户都压力山大啊，什么都弄好了，试音时，发现话麦发不出声音，统一换耳机，时间上来不及，只能从软件方面着手，调查各种原因，后来还让公司的技术boss远程解决，两边一堆人围绕该问题各种折腾，下午到晚上，再到快天亮的时候，我突然想到是不是声音的设置不同导致的，技术boss试了一下还真是。第二天客户顺利地迎接领导的检查。\t\n            \t</p>\n            </div>\n        </div>\n\t\t<h3 class=\"title color\">个人说明</h3>\n\t\t<div class=\"sec\">\n\t\t\t<div class=\"ct\">\n\t\t\t\t做事比较沉稳，有责任心，坦诚，直率，抗压能力强，有耐心。有点固执，认定的事就会坚持下去。作为一个前端开发人员，要多看看技术书，逛逛技术论坛，多看看大神们的代码思路，多试试自己写些东西，这样才能提高自己的技术能力。在工作中能够敢于尝试，勇于尝试，突破自我。\n\t\t\t</div>\n\t\t</div>\n\t\t<a class=\"download\" download=\"\" href=\"file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/webli.pdf\" target=\"_blank\" rel=\"noopener\">\n\t\t\t<i class=\"icon-download\"></i>\n\t\t</a>\n\t</div>\n\n</body></html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<!-- saved from url=(0088)file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/webli.html -->\n<html lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\n\t<title>webli</title>\n\t<link href=\"file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/favorite.ico\" rel=\"icon\" type=\"image/x-icon\">\n\t<!-- <link rel=\"stylesheet\" href=\"./webli_files/style.css\"> -->\n\t<style> \n\t\tbody,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td,hr,button,article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section { \n\t\t  margin:0; \n\t\t  padding:0; \n\t\t  -webkit-box-sizing:border-box;\n\t\t  -moz-box-sizing:border-box;\n\t\t  -ms-box-sizing:border-box;\n\t\t  -o-box-sizing:border-box;\n\t\t  box-sizing:border-box;\n\t\t} \n\n\t\thtml,body{\n\t\t    width: 100%;\n\t\t    height: 100%;\n\t\t    color: #333;\n\t\t    font-family: \"Helvetica Neue\",Helvetica,Arial,\"PingFang SC\",\"Hiragino Sans GB\",\"Heiti SC\",\"Microsoft YaHei\",\"WenQuanYi Micro Hei\",sans-serif;\n\t\t    font-family: -apple-system,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Arial,sans-serif;\n\t\t    font-size: 15px;\n\t\t    background-color: #f4f5f5;\n\t\t}\n\t\t.clearfix:before,.clearfix:after { \n\t\t  content:\"\"; \n\t\t  display:table; \n\t\t} \n\t\t.clearfix:after { \n\t\t  clear:both; \n\t\t  overflow:hidden; \n\t\t  display: block;\n\t\t  visibility: hidden;\n\t\t  height: 0;\n\t\t  line-height: 0;\n\t\t} \n\t\t.clearfix { \n\t\t  *zoom:1;  \n\t\t} \n\t\ta{\n\t\t  color: #007fff;\n\t\t}\n\t\t.wrap{\n\t\t  width: 800px;\n\t\t  margin:50px auto;\n\t\t  padding: 30px 50px;\n\t\t  background-color: #fff;\n\t\t  position: relative;\n\t\t  border: 1px solid #eee;\n\t\t  border-radius: 10px;\n\t\t  color: #000;\n\t\t  box-shadow: 0 0 25px rgba(0,0,0,.5);\n\t\t}\n\t\t.color{\n\t\t  color: #945c4c;\n\t\t}\n\t\t.name{\n\t\t  font-size: 30px;\n\t\t}\n\t\t.info{\n\t\t  width: 100%;\n\t\t  margin-top: 10px;\n\t\t  margin-left: 2em;\n\t\t}\n\t\t.info td{\n\t\t  padding: 5px 0;\n\t\t  /*font-size: 16px;*/\n\t\t}\n\t\t.title{\n\t\t  color: #333;\n\t\t  font-size: 24px;\n\t\t  font-weight: 600;\n\t\t  margin-top: 30px;\n\t\t  border-bottom: 1px solid #ececec;\n\t\t}\n\t\t.title:first-child{\n\t\t  margin-top: 0;\n\t\t}\n\t\t.sec{\n\t\t  padding-left: 2em;\n\t\t  padding-top: .5em;\n\t\t}\n\t\t.tec{\n\t\t  line-height: 1.8em;\n\t\t  margin-top: 12px;\n\t\t}\n\t\t.exp{\n\t\t  padding-left: 2em;\n\t\t}\n\t\t.exp .-company{\n\t\t  color: #444;\n\t\t  font-size: 20px;\n\t\t}\n\t\t.exp .-time{\n\t\t  font-size: 14px;\n\t\t}\n\t\t.exp .-post{\n\t\t  color: #666;\n\t\t  font-size: 16px;\n\t\t}\n\t\t.exp .-tech{\n\t\t  font-size: 14px;\n\t\t  padding-left: .5em;\n\t\t  border-left: 4px solid #cbcbcb;\n\t\t  background: #f4f5f5;\n\t\t}\n\t\t.exp .-project{\n\t\t  color: #666;\n\t\t  font-size: 16px;\n\t\t}\n\t\t.exp .-faq{\n\t\t  color: #999;\n\t\t  font-size: 14px;\n\t\t}\n\t\t.exp .-faq p{\n\t\t\ttext-indent: 2em;\n\t\t}\n\t\t.exp .-tap{\n\t\t  margin: .6em 0;\n\t\t}\n\t\t.exp .-item{\n\t\t  line-height: 1.8em;\n\t\t  /*font-size: 16px;*/\n\t\t  position: relative;\n\t\t}\n\t\t.exp .-list{\n\t\t  list-style: none;\n\t\t  margin: 0;\n\t\t  padding: 0;\n\t\t}\n\t\t.exp .-item:before {\n\t\t    content: \"\";\n\t\t    position: absolute;\n\t\t    top: 50%;\n\t\t    left: -10px;\n\t\t    width: 5px;\n\t\t    height: 5px;\n\t\t    -webkit-transform: translateY(-50%);\n\t\t    transform: translateY(-50%);\n\t\t    border-radius: 50%;\n\t\t    background-color: #999;\n\t\t}\n\t\t.download{\n\t\t  position: fixed;\n\t\t  left: 50%;\n\t\t  margin-left: 415px;\n\t\t  top:55px;\n\t\t  color:#FF9900;\n\t\t}\n\t\t.download:hover{\n\t\t  color:#FF6600;\n\t\t}\n\t\t.download i{\n\t\t  font-size: 22px;\n\t\t}\n\t\t.icon-download:before {\n\t\t    content: \"\\27f1\";\n\t\t}\n\t</style>\n\t<!--\n\t<style id=\"style-1-cropbar-clipper\">\n\t\t.en-markup-crop-options {\n\t\t    top: 18px !important;\n\t\t    left: 50% !important;\n\t\t    margin-left: -100px !important;\n\t\t    width: 200px !important;\n\t\t    border: 2px rgba(255,255,255,.38) solid !important;\n\t\t    border-radius: 4px !important;\n\t\t}\n\n\t\t.en-markup-crop-options div div:first-of-type {\n\t\t    margin-left: 0px !important;\n\t\t}\n\t</style>\n\t-->\n</head>\n<body>\n\t<div class=\"wrap\">\n\t\t<h2 class=\"title color\">基本情况</h2>\n\t\t<table class=\"info\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>姓名：黎飞</td>\n\t\t\t\t\t<td>职位：web 前端工程师</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>电话：184 8236 8234</td>\n\t\t\t\t\t<td>邮箱：905421889@qq.com</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>性别：男</td>\n\t\t\t\t\t<td>学历：本科</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>专业：软件工程</td>\n\t\t\t\t\t<td>学校：中南林业科技大学</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>博客：Fli <br>\n\t\t\t\t\t\t<a href=\"http://www.missfli.com/\" target=\"_blank\" rel=\"noopener\"><sub>http://www.missfli.com</sub></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>简书：恬雅过客 <br>\n\t\t\t\t\t\t<a href=\"http://www.jianshu.com/u/2e16695e0599\" target=\"_blank\" rel=\"noopener\"><sub>http://www.jianshu.com/u/2e16695e0599</sub></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<h3 class=\"title color\">专业技能</h3>\n\t\t<div class=\"sec\">\n\t\t\t<ul class=\"tec\">\n\t\t\t\t<li>熟练编写结构良好的语义化 html 和兼容主流浏览器的 css 代码</li>\n\t\t\t\t<li>熟练使用JQuery；熟悉基于jQuery的UI库（如bootstrap等）</li>\n\t\t\t\t<li>熟悉 html5、css3、响应式设计</li>\n\t\t\t\t<li>熟练使用前端代码调试工具（ chrome 调试）和 photoshop 进行常规操作</li>\n\t\t\t\t<li>熟练使用 svn、git 等工具进行日常代码管理</li>\n\t\t\t\t<li>了解模块化开发 SeaJs ，熟练使用前端构建工具 gulp </li> \n\t\t\t\t<li>理解 Ajax 原理，熟悉基于 Ajax 技术的应用开发</li>\n\t\t\t\t<li>了解不同设备及平台的特性，熟悉浏览器兼容性问题的调试处理</li>\n\t\t\t\t<li>了解主流 MVVM 框架，如 react、Vue 和 AngularJS </li>\n\t\t\t\t<li>了解 java 开发和oracle、mysql 数据库</li>\n\t\t\t\t<!-- <li>熟练编写结构良好的语义化 html 和兼容主流浏览器的 css 代码</li>\n\t\t\t\t<li>熟悉 javascript，并能写出兼具性能和复用性的代码</li>\n\t\t\t\t<li>熟练使用 gulp 前端自动化构建工具和jQuery、bootstrap等前端框架</li> -->\n\t\t\t</ul>\n\t\t</div>\n\t\t<h3 class=\"title color\">工作经历</h3>\n\t\t<div class=\"exp\">\n\t\t\t<!-- 工作经验三 -->\n            <h4 class=\"-company -tap\">成都房联云码科技有限公司</h4>\n            <p class=\"-time -tap\">2017.06 ~ 现在</p>\n            <p class=\"-post -tap\">web前端工程师</p>\n            <p class=\"-tech -tap\"><span> html html5 css css3 js jquery git svn sass seajs 百度地图 微信开发 百度图表echats 支付宝AntUI</span></p>\n            <p class=\"-project -tap\">透明房产网（买卖、租赁），拉萨市房地产市场信息网，南充市房地产管理局，成都城乡房管（微房管），支付宝（城市服务）</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">负责Web系统和Web App的前端开发和维护</li>\n            \t<li class=\"-item\">与设计师、后台开发人员、产品经理协同实现产品界面和功能</li>\n            \t<li class=\"-item\">参与需求可行性和UI交互体验讨论</li>\n            \t<li class=\"-item\">解决项目中的各种界面问题、性能问题、兼容性问题等</li>\n            \t<li class=\"-item\">了解前端新技术</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t<a href=\"http://www.funi.com/\" target=\"_blank\" rel=\"noopener\">透明房产网 http://www.funi.com </a>的日常维护和其下的租赁、买卖项目的新功能模块（如国有住房）的开发维护，包括部分手机wap页面开发。\n            \t<a href=\"http://xzlsfgj.gov.cn/\" target=\"_blank\" rel=\"noopener\">拉萨市房地产市场信息网 http://xzlsfgj.gov.cn </a>和<a href=\"http://www.ncfdj.gov.cn/\" target=\"_blank\" rel=\"noopener\">南充市房地产管理局 http://www.ncfdj.gov.cn </a>开发维护。\n            \t成都城乡房管的微信公众号的已有功能的维护和新功能的开发。比如人才安居、查询服务等等。支付宝的城市服务相关功能的接入开发等。当然这过程中也碰到过不是问题，比如多行文本溢出显示省略号；html5 和 css3 在 IE8 浏览器的兼容性（圆角，伪类选择符：not,:last-child等等）; line-height:150%; 和 line-height:1.5; 的区别；行内块元素的空白间距问题；表头固定，表内容可滚动；pdf预览效果; 父元素如果存在 transform 属性，子元素的 position: fixed 属性无效; 当每个浮动标签（float:left/right;）高度不一致,会挤到下一行导致空白区域等等，查阅相关资料文档都已解决。\n            \t</p>\n            \t<p></p>\n            </div>\n\t\t\t<!-- 工作经验二 -->\n            <h4 class=\"-company -tap\">成都世纪光合作用科技有限公司</h4>\n            <p class=\"-time -tap\">2014.08 ~ 2017.06</p>\n            <p class=\"-post -tap\">web前端工程师</p>\n            <p class=\"-tech -tap\"><span> html html5 css css3 js git svn bootstrap appcan struts spring hibernate java jquery jsp mysql </span></p>\n            <p class=\"-project -tap\">光合作用官网，360买灯网，供应商系统，权限管理系统</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">参与新功能模块的开发维护和已有模块的功能修改、维护</li>\n            \t<li class=\"-item\">参与前端框架搭建以及类库选择</li>\n            \t<li class=\"-item\">参与前端基础组件开发和前端代码规范定制</li>\n            \t<li class=\"-item\">独立一人完成所有模块的开发，维护和优化</li>\n            \t<li class=\"-item\">调研前端新技术</li>\n            \t<li class=\"-item\">参与需求可行性讨论</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t后面3个项目基本就是日常修改维护工作，偶尔加个新功能模块。后面公司转型做智能led灯后，用appcan做过移动端页面开发。再后来，led灯产品出来后，需要官方网站，就由我一人独立完成官方网站的开发维护和优化。从需求分析到网站上线和后面的修改维护等。<br>\n            \t<a href=\"http://www.lettin.cn/\" target=\"_blank\" rel=\"noopener\">光合作用官网（www.lettin.cn）</a>的开发过程中，碰到不少问题。比如设计师偏爱思源黑体（中文字体），roboto(英文字体)字体，可是这种字体在大多数电脑上默认是没有的，英文字体文件不大，所以好解决，直接下载下来放在项目里引用，或用三方的cdn公共库链接也行。可是中文字体很大啊，都是以M为单位，并且将字体文件放项目里引用，会有首次加载的3秒的延迟刷新页面的情况。使用切图片的方法更不用说了，少量可以，大部分的标题都用到该字体就不行了，更何况不便于浏览器爬虫抓取SEO搜索。最终选择了子集化（fontmin）的方式解决，只有用到的该字体的文字才转化成字体文件，这样字体文件就不大了。\n            \t</p>\n            \t<p>\n            \t还有网站的pc端，平板和移动端的适配问题，通过搜集资料，参考各大知名网站，才最终定下来的，内容区的分界点1200，1024，768。高清屏和retina屏的图片采用2x图。图片，js，css压缩管理等等打算用gulp来处理，还未来得及正式用在该项目上。还有移动端的图文顺序和非移动端的图文顺序完全相反，用flex布局来解决的。\n            \t</p>\n            </div>\n            <!-- 工作经验一 -->\n            <h4 class=\"-company -tap\">长沙乐科信息技术有限公司</h4>\n            <p class=\"-time -tap\">2012.10 ~ 2014.08</p>\n            <p class=\"-post -tap\"> java 开发工程师</p>\n            <p class=\"-tech -tap\"><span> struts spring hibernate java jquery extjs jsp oracle mysql cvs html css </span></p>\n            <p class=\"-project -tap\">电话营销系统，客服系统，权限系统，IVR自动培训系统</p>\n            <ul class=\"-list\">\n            \t<li class=\"-item\">参与新功能模块的开发维护和已有模块的功能修改、维护</li>\n            \t<li class=\"-item\">项目的实施部署，改动需求沟通，给客户进行系统使用培训</li>\n            \t<li class=\"-item\">定制化项目的文档编写，使用手册编写以及售后技术服务</li>\n            </ul>\n            <div class=\"-faq -tap\">\n            \t<p>\n            \t除了日常开发维护工作为，还做项目的现场实施、培训、售后技术支持等等工作，参与的项目不少（湖南邵阳移动，湖南常德昆仑燃气，广西玉林家政服务中心，上海巅峰郑州分公司，湖南国税局），当然也碰到过不少问题，比如在湖南常德昆仑燃气项目中，电话营销系统的客户号码批量导入和报表导出，读取数据（客户姓名，号码等）时出现中断而导致数据记录数不对的问题，经过跟代码和调查，发现是excel版本不同和数据表中出现空行导致的，经过代码的空行判断和版本规范解决了。\n            \t</p>\n            \t<p>\n            \t另外，湖南邵阳移动项目，该公司客服人员的文化程度不一，电脑知识了解不一，导致使用系统外呼时出现各种问题，外呼不了，打电话记录数不对，昨天能正常今天突然不能正常使用等等问题。通过重复多次指导客户使用，并编写详尽的使用手册以及教会用户怎么进行简单的浏览器配置解决的。\t\n            \t</p>\n            \t<p>\n            \t还有个有意思的经历，那是广西玉林家政服务中心的项目，我们提前3天到现场，发现客户之前承诺的准备工作基本没开展，就敦促他们赶紧开始，然后到项目上线的最后一个晚上（第二天上面领导检查），我们和客户都压力山大啊，什么都弄好了，试音时，发现话麦发不出声音，统一换耳机，时间上来不及，只能从软件方面着手，调查各种原因，后来还让公司的技术boss远程解决，两边一堆人围绕该问题各种折腾，下午到晚上，再到快天亮的时候，我突然想到是不是声音的设置不同导致的，技术boss试了一下还真是。第二天客户顺利地迎接领导的检查。\t\n            \t</p>\n            </div>\n        </div>\n\t\t<h3 class=\"title color\">个人说明</h3>\n\t\t<div class=\"sec\">\n\t\t\t<div class=\"ct\">\n\t\t\t\t做事比较沉稳，有责任心，坦诚，直率，抗压能力强，有耐心。有点固执，认定的事就会坚持下去。作为一个前端开发人员，要多看看技术书，逛逛技术论坛，多看看大神们的代码思路，多试试自己写些东西，这样才能提高自己的技术能力。在工作中能够敢于尝试，勇于尝试，突破自我。\n\t\t\t</div>\n\t\t</div>\n\t\t<a class=\"download\" download=\"\" href=\"file:///C:/Users/feili/Desktop/%E7%AE%80%E5%8E%86-%E7%BD%91%E9%A1%B5%E7%89%88/webli.pdf\" target=\"_blank\" rel=\"noopener\">\n\t\t\t<i class=\"icon-download\"></i>\n\t\t</a>\n\t</div>\n\n</body></html>"},{"title":"资源API","date":"2018-05-23T01:32:12.000Z","_content":"\nresource资源\n\n","source":"resources/index.md","raw":"---\ntitle: 资源API\ndate: 2018-05-23 09:32:12\n---\n\nresource资源\n\n","updated":"2018-05-26T09:45:40.801Z","path":"resources/index.html","comments":1,"layout":"page","_id":"cji0ejmrq005yg4l1insyku7h","content":"<p>resource资源</p>\n","site":{"data":{}},"excerpt":"","more":"<p>resource资源</p>\n"},{"title":"日程表","date":"2018-05-23T01:31:05.000Z","_content":"\n日程表scheme\n","source":"schedule/index.md","raw":"---\ntitle: 日程表\ndate: 2018-05-23 09:31:05\n---\n\n日程表scheme\n","updated":"2018-05-26T09:44:54.876Z","path":"schedule/index.html","comments":1,"layout":"page","_id":"cji0ejmru005zg4l1w3ipl5w8","content":"<p>日程表scheme</p>\n","site":{"data":{}},"excerpt":"","more":"<p>日程表scheme</p>\n"},{"title":"标签","date":"2018-05-22T11:36:48.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-05-22 19:36:48\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-05-23T12:47:14.543Z","path":"tags/index.html","layout":"page","_id":"cji0ejmrw0060g4l12bxiihzd","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"pages","title":"CSS3 Test 之单位","date":"2017-08-02T03:25:00.000Z","_content":"\n平时或许你用过不少css的单位，相对和绝对单位你都用过，这里将会列出所有的。\n<!-- more -->\n\n## css单位\n\ncss单位：em，ex， %，px，cm，mm，mozmm，in，pt， pc，ch，rem，vh，vw，vmin，vmax。先看看各单位的浏览器兼容性：\n![1.png](http://upload-images.jianshu.io/upload_images/1464420-11747778ffc1d32a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 单位分类\n\n单位分类：相对单位和绝对单位。\n\n### 1. 相对单位\n\n* em 相对于直接父元素的字体大小（font-size）。\n* ex 相对于当前字体的小写x字母的高度或者 1/2 的 1em（很少用）。*很多时候，它是字体的中间标志。 大部分用于版式的微调。比如下标，上标等。*\n* ch 相对于数字“0”的宽度。*如：将一个等宽字体的字母”N”的宽度设置为40ch，那么在另一种类型的字体里它却可以包含40个字母。这个单位的传统用途主要是盲文的排版。*\n* rem 相对于根元素的字体大小（网页中的根元素为html）。*如：大多数浏览器默认字体大小：font-size: 16px。`html{ font-size：62.5%；/* 16×62.5%=10px */}`，那么1rem=10px。*\n* vw 相对于视窗（viewport）的宽度的1%。*如：浏览器宽度750px, 1 vw = 750px/100 = 7.5px。*\n* vh 相对于视窗（viewport）的高度的1%。*如：浏览器高度1334px, 1 vh = 1334px/100 = 13.34px。*\n* vmin 相对于视窗（viewport）的较小尺寸的1％，就是指视窗的宽和高中较小那个。*如：浏览器的宽度750px，高度1334px，1vmin = 750px/100 = 7.5px。*\n* vmax 相对于视窗（viewport）的较大尺寸的1％，就是指视窗的宽和高中较大那个。*如：浏览器的宽度750px，高度1334px，1vmax = 1334px/100 = 13.34px。*\n* % 百分比。\n\n **注：em, rem, %常用于自适应处理。Viewport =浏览器窗口大小。**\n\n### 2. 绝对单位\n\n* cm 厘米\n* mm 毫米\n* in 英寸(1in = 96px = 2.54cm)\n* px 像素 (1px = 1/96th of 1in)\n* pt 点(1pt = 1in/72)\n* pc 排卡(1pc = 12 pt)，相当于我国新四号铅字的尺寸。\n\n**注：1in = 2.54cm = 25.4 mm = 72pt = 6pc *\n\n## 单位对比\n\n这些单位的大小对比，可以看[这里](http://katydecorah.com/css-ruler/)。\n\n#### 参考：\n* [CSS Units](https://www.w3schools.com/cssref/css_units.asp)\n* [CSS Ruler](http://katydecorah.com/css-ruler/)\n* [7个你可能不认识的CSS单位](http://www.iteye.com/news/29797)\n\n","source":"_posts/css-unit.md","raw":"---\nlayout: pages\ntitle: CSS3 Test 之单位\ndate: 2017-08-02 11:25:00\ncategories:\n- css\ntags:\n- css3\n---\n\n平时或许你用过不少css的单位，相对和绝对单位你都用过，这里将会列出所有的。\n<!-- more -->\n\n## css单位\n\ncss单位：em，ex， %，px，cm，mm，mozmm，in，pt， pc，ch，rem，vh，vw，vmin，vmax。先看看各单位的浏览器兼容性：\n![1.png](http://upload-images.jianshu.io/upload_images/1464420-11747778ffc1d32a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 单位分类\n\n单位分类：相对单位和绝对单位。\n\n### 1. 相对单位\n\n* em 相对于直接父元素的字体大小（font-size）。\n* ex 相对于当前字体的小写x字母的高度或者 1/2 的 1em（很少用）。*很多时候，它是字体的中间标志。 大部分用于版式的微调。比如下标，上标等。*\n* ch 相对于数字“0”的宽度。*如：将一个等宽字体的字母”N”的宽度设置为40ch，那么在另一种类型的字体里它却可以包含40个字母。这个单位的传统用途主要是盲文的排版。*\n* rem 相对于根元素的字体大小（网页中的根元素为html）。*如：大多数浏览器默认字体大小：font-size: 16px。`html{ font-size：62.5%；/* 16×62.5%=10px */}`，那么1rem=10px。*\n* vw 相对于视窗（viewport）的宽度的1%。*如：浏览器宽度750px, 1 vw = 750px/100 = 7.5px。*\n* vh 相对于视窗（viewport）的高度的1%。*如：浏览器高度1334px, 1 vh = 1334px/100 = 13.34px。*\n* vmin 相对于视窗（viewport）的较小尺寸的1％，就是指视窗的宽和高中较小那个。*如：浏览器的宽度750px，高度1334px，1vmin = 750px/100 = 7.5px。*\n* vmax 相对于视窗（viewport）的较大尺寸的1％，就是指视窗的宽和高中较大那个。*如：浏览器的宽度750px，高度1334px，1vmax = 1334px/100 = 13.34px。*\n* % 百分比。\n\n **注：em, rem, %常用于自适应处理。Viewport =浏览器窗口大小。**\n\n### 2. 绝对单位\n\n* cm 厘米\n* mm 毫米\n* in 英寸(1in = 96px = 2.54cm)\n* px 像素 (1px = 1/96th of 1in)\n* pt 点(1pt = 1in/72)\n* pc 排卡(1pc = 12 pt)，相当于我国新四号铅字的尺寸。\n\n**注：1in = 2.54cm = 25.4 mm = 72pt = 6pc *\n\n## 单位对比\n\n这些单位的大小对比，可以看[这里](http://katydecorah.com/css-ruler/)。\n\n#### 参考：\n* [CSS Units](https://www.w3schools.com/cssref/css_units.asp)\n* [CSS Ruler](http://katydecorah.com/css-ruler/)\n* [7个你可能不认识的CSS单位](http://www.iteye.com/news/29797)\n\n","slug":"css-unit","published":1,"updated":"2018-05-30T01:16:51.045Z","comments":1,"photos":[],"link":"","_id":"cji0ejm0g0000g4l1npwrp0uv","content":"<p>平时或许你用过不少css的单位，相对和绝对单位你都用过，这里将会列出所有的。<br><a id=\"more\"></a></p>\n<h2 id=\"css单位\"><a href=\"#css单位\" class=\"headerlink\" title=\"css单位\"></a>css单位</h2><p>css单位：em，ex， %，px，cm，mm，mozmm，in，pt， pc，ch，rem，vh，vw，vmin，vmax。先看看各单位的浏览器兼容性：<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-11747778ffc1d32a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></p>\n<h2 id=\"单位分类\"><a href=\"#单位分类\" class=\"headerlink\" title=\"单位分类\"></a>单位分类</h2><p>单位分类：相对单位和绝对单位。</p>\n<h3 id=\"1-相对单位\"><a href=\"#1-相对单位\" class=\"headerlink\" title=\"1. 相对单位\"></a>1. 相对单位</h3><ul>\n<li>em 相对于直接父元素的字体大小（font-size）。</li>\n<li>ex 相对于当前字体的小写x字母的高度或者 1/2 的 1em（很少用）。<em>很多时候，它是字体的中间标志。 大部分用于版式的微调。比如下标，上标等。</em></li>\n<li>ch 相对于数字“0”的宽度。<em>如：将一个等宽字体的字母”N”的宽度设置为40ch，那么在另一种类型的字体里它却可以包含40个字母。这个单位的传统用途主要是盲文的排版。</em></li>\n<li>rem 相对于根元素的字体大小（网页中的根元素为html）。<em>如：大多数浏览器默认字体大小：font-size: 16px。`html{ font-size：62.5%；/</em> 16×62.5%=10px <em>/}`，那么1rem=10px。</em></li>\n<li>vw 相对于视窗（viewport）的宽度的1%。<em>如：浏览器宽度750px, 1 vw = 750px/100 = 7.5px。</em></li>\n<li>vh 相对于视窗（viewport）的高度的1%。<em>如：浏览器高度1334px, 1 vh = 1334px/100 = 13.34px。</em></li>\n<li>vmin 相对于视窗（viewport）的较小尺寸的1％，就是指视窗的宽和高中较小那个。<em>如：浏览器的宽度750px，高度1334px，1vmin = 750px/100 = 7.5px。</em></li>\n<li>vmax 相对于视窗（viewport）的较大尺寸的1％，就是指视窗的宽和高中较大那个。<em>如：浏览器的宽度750px，高度1334px，1vmax = 1334px/100 = 13.34px。</em></li>\n<li><p>% 百分比。</p>\n<p><strong>注：em, rem, %常用于自适应处理。Viewport =浏览器窗口大小。</strong></p>\n</li>\n</ul>\n<h3 id=\"2-绝对单位\"><a href=\"#2-绝对单位\" class=\"headerlink\" title=\"2. 绝对单位\"></a>2. 绝对单位</h3><ul>\n<li>cm 厘米</li>\n<li>mm 毫米</li>\n<li>in 英寸(1in = 96px = 2.54cm)</li>\n<li>px 像素 (1px = 1/96th of 1in)</li>\n<li>pt 点(1pt = 1in/72)</li>\n<li>pc 排卡(1pc = 12 pt)，相当于我国新四号铅字的尺寸。</li>\n</ul>\n<p>*<em>注：1in = 2.54cm = 25.4 mm = 72pt = 6pc </em></p>\n<h2 id=\"单位对比\"><a href=\"#单位对比\" class=\"headerlink\" title=\"单位对比\"></a>单位对比</h2><p>这些单位的大小对比，可以看<a href=\"http://katydecorah.com/css-ruler/\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"https://www.w3schools.com/cssref/css_units.asp\" target=\"_blank\" rel=\"noopener\">CSS Units</a></li>\n<li><a href=\"http://katydecorah.com/css-ruler/\" target=\"_blank\" rel=\"noopener\">CSS Ruler</a></li>\n<li><a href=\"http://www.iteye.com/news/29797\" target=\"_blank\" rel=\"noopener\">7个你可能不认识的CSS单位</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>平时或许你用过不少css的单位，相对和绝对单位你都用过，这里将会列出所有的。<br>","more":"</p>\n<h2 id=\"css单位\"><a href=\"#css单位\" class=\"headerlink\" title=\"css单位\"></a>css单位</h2><p>css单位：em，ex， %，px，cm，mm，mozmm，in，pt， pc，ch，rem，vh，vw，vmin，vmax。先看看各单位的浏览器兼容性：<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-11747778ffc1d32a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></p>\n<h2 id=\"单位分类\"><a href=\"#单位分类\" class=\"headerlink\" title=\"单位分类\"></a>单位分类</h2><p>单位分类：相对单位和绝对单位。</p>\n<h3 id=\"1-相对单位\"><a href=\"#1-相对单位\" class=\"headerlink\" title=\"1. 相对单位\"></a>1. 相对单位</h3><ul>\n<li>em 相对于直接父元素的字体大小（font-size）。</li>\n<li>ex 相对于当前字体的小写x字母的高度或者 1/2 的 1em（很少用）。<em>很多时候，它是字体的中间标志。 大部分用于版式的微调。比如下标，上标等。</em></li>\n<li>ch 相对于数字“0”的宽度。<em>如：将一个等宽字体的字母”N”的宽度设置为40ch，那么在另一种类型的字体里它却可以包含40个字母。这个单位的传统用途主要是盲文的排版。</em></li>\n<li>rem 相对于根元素的字体大小（网页中的根元素为html）。<em>如：大多数浏览器默认字体大小：font-size: 16px。`html{ font-size：62.5%；/</em> 16×62.5%=10px <em>/}`，那么1rem=10px。</em></li>\n<li>vw 相对于视窗（viewport）的宽度的1%。<em>如：浏览器宽度750px, 1 vw = 750px/100 = 7.5px。</em></li>\n<li>vh 相对于视窗（viewport）的高度的1%。<em>如：浏览器高度1334px, 1 vh = 1334px/100 = 13.34px。</em></li>\n<li>vmin 相对于视窗（viewport）的较小尺寸的1％，就是指视窗的宽和高中较小那个。<em>如：浏览器的宽度750px，高度1334px，1vmin = 750px/100 = 7.5px。</em></li>\n<li>vmax 相对于视窗（viewport）的较大尺寸的1％，就是指视窗的宽和高中较大那个。<em>如：浏览器的宽度750px，高度1334px，1vmax = 1334px/100 = 13.34px。</em></li>\n<li><p>% 百分比。</p>\n<p><strong>注：em, rem, %常用于自适应处理。Viewport =浏览器窗口大小。</strong></p>\n</li>\n</ul>\n<h3 id=\"2-绝对单位\"><a href=\"#2-绝对单位\" class=\"headerlink\" title=\"2. 绝对单位\"></a>2. 绝对单位</h3><ul>\n<li>cm 厘米</li>\n<li>mm 毫米</li>\n<li>in 英寸(1in = 96px = 2.54cm)</li>\n<li>px 像素 (1px = 1/96th of 1in)</li>\n<li>pt 点(1pt = 1in/72)</li>\n<li>pc 排卡(1pc = 12 pt)，相当于我国新四号铅字的尺寸。</li>\n</ul>\n<p>*<em>注：1in = 2.54cm = 25.4 mm = 72pt = 6pc </em></p>\n<h2 id=\"单位对比\"><a href=\"#单位对比\" class=\"headerlink\" title=\"单位对比\"></a>单位对比</h2><p>这些单位的大小对比，可以看<a href=\"http://katydecorah.com/css-ruler/\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"https://www.w3schools.com/cssref/css_units.asp\" target=\"_blank\" rel=\"noopener\">CSS Units</a></li>\n<li><a href=\"http://katydecorah.com/css-ruler/\" target=\"_blank\" rel=\"noopener\">CSS Ruler</a></li>\n<li><a href=\"http://www.iteye.com/news/29797\" target=\"_blank\" rel=\"noopener\">7个你可能不认识的CSS单位</a></li>\n</ul>"},{"layout":"pages","title":"域名信息查询","date":"2018-05-23T12:20:08.000Z","_content":"\n你想知道网站域名的相关信息吗？其实很简单，跟谷哥或度娘说：whois，一大堆结果。在这里呢，就只给你推荐几个比较权威准确点的。\n<!-- more -->\n\n## 国外\n\n免费用户有查询次数限制：[http://whois.domaintools.com/](http://whois.domaintools.com/)\n\n## [](http://www.missfli.com/2016/09/07/domain-search-whois/#%E5%9B%BD%E5%86%85 \"国内\")国内\n\n*   [威胁情报分析平台ThreatBook](https://x.threatbook.cn/)\n*   [阿里云域名查询](https://whois.aliyun.com/)\n*   [站长工具域名查询](http://whois.chinaz.com/)\n\n**查询结果**\n\n*   www.google.com ：208.111.59.15/19/23/27/29/30/34/38/42/44/45/49/53/57/59,93.46.8.89\n*   www.microsoft.com ：118.215.11.168,182.215.11.168\n*   www.apple.com/cn ：23.15.152.48,17.142.160.11,17.172.224.30,17.178.96.11\n*   www.focebook.com ：31.13.79.220,179.60.192.3\n*   www.twitter.com ：104.244.42.193/65\n*   www.youtube.com ：74.125.200.136/190/91/93,216.58.211.46\n*   www.philips.com ：118.215.81.147\n*   www.linkedin.com ：103.20.94.1\n*   www.amazon.com ：54.239.25.200,54.239.29.3\n*   www.baidu.com ：14.215.177.37/38,103.235.46.212\n*   www.alibaba.com ：205.204.101.42,110.75.112.20,140.205.94.148\n*   www.qq.com ：101.226.103.106\n","source":"_posts/domain-look.md","raw":"---\nlayout: pages\ntitle: 域名信息查询\ndate: 2018-05-23 20:20:08\ntags:\n- 域名\n---\n\n你想知道网站域名的相关信息吗？其实很简单，跟谷哥或度娘说：whois，一大堆结果。在这里呢，就只给你推荐几个比较权威准确点的。\n<!-- more -->\n\n## 国外\n\n免费用户有查询次数限制：[http://whois.domaintools.com/](http://whois.domaintools.com/)\n\n## [](http://www.missfli.com/2016/09/07/domain-search-whois/#%E5%9B%BD%E5%86%85 \"国内\")国内\n\n*   [威胁情报分析平台ThreatBook](https://x.threatbook.cn/)\n*   [阿里云域名查询](https://whois.aliyun.com/)\n*   [站长工具域名查询](http://whois.chinaz.com/)\n\n**查询结果**\n\n*   www.google.com ：208.111.59.15/19/23/27/29/30/34/38/42/44/45/49/53/57/59,93.46.8.89\n*   www.microsoft.com ：118.215.11.168,182.215.11.168\n*   www.apple.com/cn ：23.15.152.48,17.142.160.11,17.172.224.30,17.178.96.11\n*   www.focebook.com ：31.13.79.220,179.60.192.3\n*   www.twitter.com ：104.244.42.193/65\n*   www.youtube.com ：74.125.200.136/190/91/93,216.58.211.46\n*   www.philips.com ：118.215.81.147\n*   www.linkedin.com ：103.20.94.1\n*   www.amazon.com ：54.239.25.200,54.239.29.3\n*   www.baidu.com ：14.215.177.37/38,103.235.46.212\n*   www.alibaba.com ：205.204.101.42,110.75.112.20,140.205.94.148\n*   www.qq.com ：101.226.103.106\n","slug":"domain-look","published":1,"updated":"2018-05-29T09:03:00.595Z","comments":1,"photos":[],"link":"","_id":"cji0ejm0v0001g4l1gz7x2owv","content":"<p>你想知道网站域名的相关信息吗？其实很简单，跟谷哥或度娘说：whois，一大堆结果。在这里呢，就只给你推荐几个比较权威准确点的。<br><a id=\"more\"></a></p>\n<h2 id=\"国外\"><a href=\"#国外\" class=\"headerlink\" title=\"国外\"></a>国外</h2><p>免费用户有查询次数限制：<a href=\"http://whois.domaintools.com/\" target=\"_blank\" rel=\"noopener\">http://whois.domaintools.com/</a></p>\n<h2 id=\"国内\"><a href=\"#国内\" class=\"headerlink\" title=\"国内\"></a><a href=\"http://www.missfli.com/2016/09/07/domain-search-whois/#%E5%9B%BD%E5%86%85\" title=\"国内\" target=\"_blank\" rel=\"noopener\"></a>国内</h2><ul>\n<li><a href=\"https://x.threatbook.cn/\" target=\"_blank\" rel=\"noopener\">威胁情报分析平台ThreatBook</a></li>\n<li><a href=\"https://whois.aliyun.com/\" target=\"_blank\" rel=\"noopener\">阿里云域名查询</a></li>\n<li><a href=\"http://whois.chinaz.com/\" target=\"_blank\" rel=\"noopener\">站长工具域名查询</a></li>\n</ul>\n<p><strong>查询结果</strong></p>\n<ul>\n<li><a href=\"http://www.google.com\" target=\"_blank\" rel=\"noopener\">www.google.com</a> ：208.111.59.15/19/23/27/29/30/34/38/42/44/45/49/53/57/59,93.46.8.89</li>\n<li><a href=\"http://www.microsoft.com\" target=\"_blank\" rel=\"noopener\">www.microsoft.com</a> ：118.215.11.168,182.215.11.168</li>\n<li><a href=\"http://www.apple.com/cn\" target=\"_blank\" rel=\"noopener\">www.apple.com/cn</a> ：23.15.152.48,17.142.160.11,17.172.224.30,17.178.96.11</li>\n<li><a href=\"http://www.focebook.com\" target=\"_blank\" rel=\"noopener\">www.focebook.com</a> ：31.13.79.220,179.60.192.3</li>\n<li><a href=\"http://www.twitter.com\" target=\"_blank\" rel=\"noopener\">www.twitter.com</a> ：104.244.42.193/65</li>\n<li><a href=\"http://www.youtube.com\" target=\"_blank\" rel=\"noopener\">www.youtube.com</a> ：74.125.200.136/190/91/93,216.58.211.46</li>\n<li><a href=\"http://www.philips.com\" target=\"_blank\" rel=\"noopener\">www.philips.com</a> ：118.215.81.147</li>\n<li><a href=\"http://www.linkedin.com\" target=\"_blank\" rel=\"noopener\">www.linkedin.com</a> ：103.20.94.1</li>\n<li><a href=\"http://www.amazon.com\" target=\"_blank\" rel=\"noopener\">www.amazon.com</a> ：54.239.25.200,54.239.29.3</li>\n<li><a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">www.baidu.com</a> ：14.215.177.37/38,103.235.46.212</li>\n<li><a href=\"http://www.alibaba.com\" target=\"_blank\" rel=\"noopener\">www.alibaba.com</a> ：205.204.101.42,110.75.112.20,140.205.94.148</li>\n<li><a href=\"http://www.qq.com\" target=\"_blank\" rel=\"noopener\">www.qq.com</a> ：101.226.103.106</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>你想知道网站域名的相关信息吗？其实很简单，跟谷哥或度娘说：whois，一大堆结果。在这里呢，就只给你推荐几个比较权威准确点的。<br>","more":"</p>\n<h2 id=\"国外\"><a href=\"#国外\" class=\"headerlink\" title=\"国外\"></a>国外</h2><p>免费用户有查询次数限制：<a href=\"http://whois.domaintools.com/\" target=\"_blank\" rel=\"noopener\">http://whois.domaintools.com/</a></p>\n<h2 id=\"国内\"><a href=\"#国内\" class=\"headerlink\" title=\"国内\"></a><a href=\"http://www.missfli.com/2016/09/07/domain-search-whois/#%E5%9B%BD%E5%86%85\" title=\"国内\" target=\"_blank\" rel=\"noopener\"></a>国内</h2><ul>\n<li><a href=\"https://x.threatbook.cn/\" target=\"_blank\" rel=\"noopener\">威胁情报分析平台ThreatBook</a></li>\n<li><a href=\"https://whois.aliyun.com/\" target=\"_blank\" rel=\"noopener\">阿里云域名查询</a></li>\n<li><a href=\"http://whois.chinaz.com/\" target=\"_blank\" rel=\"noopener\">站长工具域名查询</a></li>\n</ul>\n<p><strong>查询结果</strong></p>\n<ul>\n<li><a href=\"http://www.google.com\" target=\"_blank\" rel=\"noopener\">www.google.com</a> ：208.111.59.15/19/23/27/29/30/34/38/42/44/45/49/53/57/59,93.46.8.89</li>\n<li><a href=\"http://www.microsoft.com\" target=\"_blank\" rel=\"noopener\">www.microsoft.com</a> ：118.215.11.168,182.215.11.168</li>\n<li><a href=\"http://www.apple.com/cn\" target=\"_blank\" rel=\"noopener\">www.apple.com/cn</a> ：23.15.152.48,17.142.160.11,17.172.224.30,17.178.96.11</li>\n<li><a href=\"http://www.focebook.com\" target=\"_blank\" rel=\"noopener\">www.focebook.com</a> ：31.13.79.220,179.60.192.3</li>\n<li><a href=\"http://www.twitter.com\" target=\"_blank\" rel=\"noopener\">www.twitter.com</a> ：104.244.42.193/65</li>\n<li><a href=\"http://www.youtube.com\" target=\"_blank\" rel=\"noopener\">www.youtube.com</a> ：74.125.200.136/190/91/93,216.58.211.46</li>\n<li><a href=\"http://www.philips.com\" target=\"_blank\" rel=\"noopener\">www.philips.com</a> ：118.215.81.147</li>\n<li><a href=\"http://www.linkedin.com\" target=\"_blank\" rel=\"noopener\">www.linkedin.com</a> ：103.20.94.1</li>\n<li><a href=\"http://www.amazon.com\" target=\"_blank\" rel=\"noopener\">www.amazon.com</a> ：54.239.25.200,54.239.29.3</li>\n<li><a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">www.baidu.com</a> ：14.215.177.37/38,103.235.46.212</li>\n<li><a href=\"http://www.alibaba.com\" target=\"_blank\" rel=\"noopener\">www.alibaba.com</a> ：205.204.101.42,110.75.112.20,140.205.94.148</li>\n<li><a href=\"http://www.qq.com\" target=\"_blank\" rel=\"noopener\">www.qq.com</a> ：101.226.103.106</li>\n</ul>"},{"layout":"pages","title":"Element ui之form表单使用","date":"2018-05-20T11:22:00.000Z","_content":"\n初次使用[Element ui](http://element-cn.eleme.io/#/zh-CN/component/installation)，遇到不少坑。在此做些记录，方便日后查阅。\n<!-- more -->\n\n## form 表单赋值/取值\n**取值**：获取 form 表单的每个表单项的值：`this.formName.property`，比如：`this.ruleForm.username`，`this.ruleForm.psw`\n**赋值**：大部分都是下面这种方式赋值格式（property: value），\n一般的 input ，赋值和显示的事一致的，而有些则不一定。比如下拉选择列表 select ，复选框 checkbox , 单选 radio ，日期 date 时间 time , 文件上传 fileupload 等等会有个显示文本（给用户看）和实际值（后台数据库存储的值）。\n* select 选择器设置默认选择，见此例https://jsfiddle.net/athena0304/g51g4L0L/\n* checkbox 复选框和文件上传 fileupload 的是数组\n* 动态生成后的默认选项设置：label对应的string，:label对应的传过来的参数（string,number），见此例https://codepen.io/feili/pen/KReNWw\n\n## form 表单验证\n自带验证和自定义验证。\n自带验证：\n```swift\n<script>\n  export default {\n    data() {\n      return {\n        form: {\n          telphone: '',\n          cardnum: '523456178988776111',\n        },\n        rules: {\n          telphone: [\n            { required: true, message: '请输入手机号', trigger: 'blur' }\n          ],\n          cardnum: [\n            { required: true, message: '请输入买受人身份证号', trigger: 'blur' }\n          ],\n        }\n      }\n    },\n    ...\n  }\n</script>\n```\n自定义验证：\n```swift\n<script>\n  export default {\n    data() {\n      //自定义验证规则\n      //身份证验证\n      var checkCardnum = (rule, value, callback) => {\n        setTimeout(() => {\n          var reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n          if(!reg.test(value)){\n            callback(new Error('身份证输入不合法'));\n          }else{\n            callback();\n          }\n        }, 1000);\n      };\n      return {\n        form: {\n          telphone: '',\n          cardnum: '523456178988776111',\n        },\n        rules: {\n          telphone: [\n            { required: true, message: '请输入手机号', trigger: 'blur' },\n            { pattern: /^1[34578]\\d{9}$/, message: '目前只支持中国大陆的手机号码' }\n          ],\n          cardnum: [\n            { required: true, message: '请输入买受人身份证号', trigger: 'blur' },\n            { validator: checkCardnum, trigger: 'blur' }\n          ],\n        }\n      }\n    },\n    ...\n  }\n</script>\n```\n当然，自定义验证规则时，一般都会是单独的文件做相关验证规则限制，然后引入调用。validate.js，customValidate.js， xxx.vue。\nvalidate.js\n```swift\n/**\n * Created by feili on 2018/5/11.\n */\nexport default function (type,val) {\n  //type的值：qq-QQ号，mobile-手机号，phone-座机号，cardid-身份证号，integer-数字，moneynum-货币数字（带两位小数），...\n  var result = false;\n\n  //QQ\n  var isQQ = function (val) {\n    const reg = /^[1-9][0-9]{4,10}$/;\n    return reg.test(val);\n  }\n\n  //邮箱\n  var isEmail = function (val) {\n    const reg = /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/;\n    return reg.test(val);\n  }\n\n  //手机号(目前只支持中国大陆的手机号码)\n  var isMobile = function (val) {\n    const reg = /^1[34578]\\d{9}$/;\n    return reg.test(val);\n  }\n\n  //座机号\n  var isPhone = function (val) {\n    const reg = /^0\\d{2,3}-\\d{7,8}$/;\n    return reg.test(val);\n  }\n\n  //身份证号(15位和18位)\n  var isCardID = function (val) {\n    const reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n    return reg.test(val);\n  }\n\n  //车牌号(川B12345)\n  var isPlateNumber = function (val) {\n    const reg = /(^[\\u4E00-\\u9FA5]{1}[A-Z0-9]{6}$)|(^[A-Z]{2}[A-Z0-9]{2}[A-Z0-9\\u4E00-\\u9FA5]{1}[A-Z0-9]{4}$)|(^[\\u4E00-\\u9FA5]{1}[A-Z0-9]{5}[挂学警军港澳]{1}$)|(^[A-Z]{2}[0-9]{5}$)|(^(08|38){1}[A-Z0-9]{4}[A-Z0-9挂学警军港澳]{1}$)/;\n    return reg.test(val);\n  }\n\n  //数字（正整数和0）\n  var isInteger = function (val) {\n    const reg = /^([1-9]\\d*|[0]{1,1})$/;\n    return reg.test(val);\n  }\n\n  //货币数字（最多带两位小数）\n  var isMoneynum = function (val) {\n    const reg = /^([1-9]\\d+|0)(\\.[\\d]{1,2})?$/;\n    return reg.test(val);\n  }\n\n\n  switch(type) {\n    case 'qq':\n      result = isQQ(val);\n      break;\n    case 'mobile':\n      result = isMobile(val);\n      break;\n    case 'phone':\n      result = isPhone(val);\n      break;\n    case 'cardid':\n      result = isCardID(val);\n      break;\n    case 'platenumber':\n      result = isPlateNumber(val);\n      break;\n    case 'integer':\n      result = isInteger(val);\n      break;\n    case 'moneynum':\n      result = isMoneynum(val);\n      break;\n    default:\n      break;\n  }\n\n  return result;\n\n}\n```\ncustomValidate.js\n```swift\n/**\n * Created by feili on 2018/5/11.\n */\n\nimport  validate from './validate.js'\n\nexport default {\n  /*qq号*/\n  isQQ: (rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('qq',value)) {\n        callback(new Error('您输入的QQ号不正确!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n  /*手机号*/\n  isMobile: (rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('mobile',value)) {\n        callback(new Error('您输入的手机号不正确!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n  /*座机号*/\n  isPhone:(rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('phone',value)) {\n        callback(new Error('您输入的座机号不正确!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n  /*身份证号*/\n  isCardID:(rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('cardid',value)) {\n        callback(new Error('您输入的身份证号不正确!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n  /*数字（正整数和0）*/\n  isInteger: (rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('integer',value)) {\n        callback(new Error('请输入数字!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n  /*保留两位小数*/\n  isMoneynum:(rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('moneynum',value)) {\n        callback(new Error('请输入正确的数字，最多保留两位小数!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n\n}\n\n```\nxxx.vue\n`import customValid from  '@/util/customValidate'`\n```swift\nrules: {\n          renttype: [\n            { required: true, message: '请选择出租方式', trigger: 'change' }\n          ],\n          rentarea: [\n            { required: true, message: '此项必填', trigger: 'blur' },\n            { validator: customValid.isMoneynum, trigger: 'blur' }\n          ],\n          rentcash: [\n            { required: true, message: '此项必填', trigger: 'blur' },\n            { validator: customValid.isInteger, trigger: 'blur' }\n          ],\n          ...\n}\n```\n\n#### 参考\n* [ElementUi rules表单验证](https://segmentfault.com/a/1190000012551362)\n* [vue+element-ui中的表单验证（电话等等）](http://www.cnblogs.com/myfirstboke/p/7930197.html)\n\n","source":"_posts/element-form.md","raw":"---\nlayout: pages\ntitle: Element ui之form表单使用\ndate: 2018-05-20 19:22:00\ncategories:\n- Element\ntags:\n- Element\n---\n\n初次使用[Element ui](http://element-cn.eleme.io/#/zh-CN/component/installation)，遇到不少坑。在此做些记录，方便日后查阅。\n<!-- more -->\n\n## form 表单赋值/取值\n**取值**：获取 form 表单的每个表单项的值：`this.formName.property`，比如：`this.ruleForm.username`，`this.ruleForm.psw`\n**赋值**：大部分都是下面这种方式赋值格式（property: value），\n一般的 input ，赋值和显示的事一致的，而有些则不一定。比如下拉选择列表 select ，复选框 checkbox , 单选 radio ，日期 date 时间 time , 文件上传 fileupload 等等会有个显示文本（给用户看）和实际值（后台数据库存储的值）。\n* select 选择器设置默认选择，见此例https://jsfiddle.net/athena0304/g51g4L0L/\n* checkbox 复选框和文件上传 fileupload 的是数组\n* 动态生成后的默认选项设置：label对应的string，:label对应的传过来的参数（string,number），见此例https://codepen.io/feili/pen/KReNWw\n\n## form 表单验证\n自带验证和自定义验证。\n自带验证：\n```swift\n<script>\n  export default {\n    data() {\n      return {\n        form: {\n          telphone: '',\n          cardnum: '523456178988776111',\n        },\n        rules: {\n          telphone: [\n            { required: true, message: '请输入手机号', trigger: 'blur' }\n          ],\n          cardnum: [\n            { required: true, message: '请输入买受人身份证号', trigger: 'blur' }\n          ],\n        }\n      }\n    },\n    ...\n  }\n</script>\n```\n自定义验证：\n```swift\n<script>\n  export default {\n    data() {\n      //自定义验证规则\n      //身份证验证\n      var checkCardnum = (rule, value, callback) => {\n        setTimeout(() => {\n          var reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n          if(!reg.test(value)){\n            callback(new Error('身份证输入不合法'));\n          }else{\n            callback();\n          }\n        }, 1000);\n      };\n      return {\n        form: {\n          telphone: '',\n          cardnum: '523456178988776111',\n        },\n        rules: {\n          telphone: [\n            { required: true, message: '请输入手机号', trigger: 'blur' },\n            { pattern: /^1[34578]\\d{9}$/, message: '目前只支持中国大陆的手机号码' }\n          ],\n          cardnum: [\n            { required: true, message: '请输入买受人身份证号', trigger: 'blur' },\n            { validator: checkCardnum, trigger: 'blur' }\n          ],\n        }\n      }\n    },\n    ...\n  }\n</script>\n```\n当然，自定义验证规则时，一般都会是单独的文件做相关验证规则限制，然后引入调用。validate.js，customValidate.js， xxx.vue。\nvalidate.js\n```swift\n/**\n * Created by feili on 2018/5/11.\n */\nexport default function (type,val) {\n  //type的值：qq-QQ号，mobile-手机号，phone-座机号，cardid-身份证号，integer-数字，moneynum-货币数字（带两位小数），...\n  var result = false;\n\n  //QQ\n  var isQQ = function (val) {\n    const reg = /^[1-9][0-9]{4,10}$/;\n    return reg.test(val);\n  }\n\n  //邮箱\n  var isEmail = function (val) {\n    const reg = /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/;\n    return reg.test(val);\n  }\n\n  //手机号(目前只支持中国大陆的手机号码)\n  var isMobile = function (val) {\n    const reg = /^1[34578]\\d{9}$/;\n    return reg.test(val);\n  }\n\n  //座机号\n  var isPhone = function (val) {\n    const reg = /^0\\d{2,3}-\\d{7,8}$/;\n    return reg.test(val);\n  }\n\n  //身份证号(15位和18位)\n  var isCardID = function (val) {\n    const reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n    return reg.test(val);\n  }\n\n  //车牌号(川B12345)\n  var isPlateNumber = function (val) {\n    const reg = /(^[\\u4E00-\\u9FA5]{1}[A-Z0-9]{6}$)|(^[A-Z]{2}[A-Z0-9]{2}[A-Z0-9\\u4E00-\\u9FA5]{1}[A-Z0-9]{4}$)|(^[\\u4E00-\\u9FA5]{1}[A-Z0-9]{5}[挂学警军港澳]{1}$)|(^[A-Z]{2}[0-9]{5}$)|(^(08|38){1}[A-Z0-9]{4}[A-Z0-9挂学警军港澳]{1}$)/;\n    return reg.test(val);\n  }\n\n  //数字（正整数和0）\n  var isInteger = function (val) {\n    const reg = /^([1-9]\\d*|[0]{1,1})$/;\n    return reg.test(val);\n  }\n\n  //货币数字（最多带两位小数）\n  var isMoneynum = function (val) {\n    const reg = /^([1-9]\\d+|0)(\\.[\\d]{1,2})?$/;\n    return reg.test(val);\n  }\n\n\n  switch(type) {\n    case 'qq':\n      result = isQQ(val);\n      break;\n    case 'mobile':\n      result = isMobile(val);\n      break;\n    case 'phone':\n      result = isPhone(val);\n      break;\n    case 'cardid':\n      result = isCardID(val);\n      break;\n    case 'platenumber':\n      result = isPlateNumber(val);\n      break;\n    case 'integer':\n      result = isInteger(val);\n      break;\n    case 'moneynum':\n      result = isMoneynum(val);\n      break;\n    default:\n      break;\n  }\n\n  return result;\n\n}\n```\ncustomValidate.js\n```swift\n/**\n * Created by feili on 2018/5/11.\n */\n\nimport  validate from './validate.js'\n\nexport default {\n  /*qq号*/\n  isQQ: (rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('qq',value)) {\n        callback(new Error('您输入的QQ号不正确!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n  /*手机号*/\n  isMobile: (rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('mobile',value)) {\n        callback(new Error('您输入的手机号不正确!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n  /*座机号*/\n  isPhone:(rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('phone',value)) {\n        callback(new Error('您输入的座机号不正确!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n  /*身份证号*/\n  isCardID:(rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('cardid',value)) {\n        callback(new Error('您输入的身份证号不正确!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n  /*数字（正整数和0）*/\n  isInteger: (rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('integer',value)) {\n        callback(new Error('请输入数字!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n  /*保留两位小数*/\n  isMoneynum:(rule, value, callback) => {\n    if((value || '')!='') {\n      if(!validate('moneynum',value)) {\n        callback(new Error('请输入正确的数字，最多保留两位小数!'))\n      } else {\n        callback()\n      }\n    } else{\n      callback();\n    }\n  },\n\n}\n\n```\nxxx.vue\n`import customValid from  '@/util/customValidate'`\n```swift\nrules: {\n          renttype: [\n            { required: true, message: '请选择出租方式', trigger: 'change' }\n          ],\n          rentarea: [\n            { required: true, message: '此项必填', trigger: 'blur' },\n            { validator: customValid.isMoneynum, trigger: 'blur' }\n          ],\n          rentcash: [\n            { required: true, message: '此项必填', trigger: 'blur' },\n            { validator: customValid.isInteger, trigger: 'blur' }\n          ],\n          ...\n}\n```\n\n#### 参考\n* [ElementUi rules表单验证](https://segmentfault.com/a/1190000012551362)\n* [vue+element-ui中的表单验证（电话等等）](http://www.cnblogs.com/myfirstboke/p/7930197.html)\n\n","slug":"element-form","published":1,"updated":"2018-05-29T09:35:26.041Z","comments":1,"photos":[],"link":"","_id":"cji0ejm180004g4l1s88v02zl","content":"<p>初次使用<a href=\"http://element-cn.eleme.io/#/zh-CN/component/installation\" target=\"_blank\" rel=\"noopener\">Element ui</a>，遇到不少坑。在此做些记录，方便日后查阅。<br><a id=\"more\"></a></p>\n<h2 id=\"form-表单赋值-取值\"><a href=\"#form-表单赋值-取值\" class=\"headerlink\" title=\"form 表单赋值/取值\"></a>form 表单赋值/取值</h2><p><strong>取值</strong>：获取 form 表单的每个表单项的值：<code>this.formName.property</code>，比如：<code>this.ruleForm.username</code>，<code>this.ruleForm.psw</code><br><strong>赋值</strong>：大部分都是下面这种方式赋值格式（property: value），<br>一般的 input ，赋值和显示的事一致的，而有些则不一定。比如下拉选择列表 select ，复选框 checkbox , 单选 radio ，日期 date 时间 time , 文件上传 fileupload 等等会有个显示文本（给用户看）和实际值（后台数据库存储的值）。</p>\n<ul>\n<li>select 选择器设置默认选择，见此例<a href=\"https://jsfiddle.net/athena0304/g51g4L0L/\" target=\"_blank\" rel=\"noopener\">https://jsfiddle.net/athena0304/g51g4L0L/</a></li>\n<li>checkbox 复选框和文件上传 fileupload 的是数组</li>\n<li>动态生成后的默认选项设置：label对应的string，:label对应的传过来的参数（string,number），见此例<a href=\"https://codepen.io/feili/pen/KReNWw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/feili/pen/KReNWw</a></li>\n</ul>\n<h2 id=\"form-表单验证\"><a href=\"#form-表单验证\" class=\"headerlink\" title=\"form 表单验证\"></a>form 表单验证</h2><p>自带验证和自定义验证。<br>自带验证：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        form: &#123;</span><br><span class=\"line\">          telphone: '',</span><br><span class=\"line\">          cardnum: '<span class=\"number\">523456178988776111</span>',</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        rules: &#123;</span><br><span class=\"line\">          telphone: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '请输入手机号', trigger: 'blur' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          cardnum: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '请输入买受人身份证号', trigger: 'blur' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>自定义验证：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      <span class=\"comment\">//自定义验证规则</span></span><br><span class=\"line\">      <span class=\"comment\">//身份证验证</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> checkCardnum = (rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">        setTimeout(() =&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">var</span> reg = /(^\\d&#123;<span class=\"number\">15</span>&#125;$)|(^\\d&#123;<span class=\"number\">18</span>&#125;$)|(^\\d&#123;<span class=\"number\">17</span>&#125;(\\d|<span class=\"type\">X</span>|x)$)/;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(!reg.test(value))&#123;</span><br><span class=\"line\">            callback(new <span class=\"type\">Error</span>('身份证输入不合法'));</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            callback();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        form: &#123;</span><br><span class=\"line\">          telphone: '',</span><br><span class=\"line\">          cardnum: '<span class=\"number\">523456178988776111</span>',</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        rules: &#123;</span><br><span class=\"line\">          telphone: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '请输入手机号', trigger: 'blur' &#125;,</span><br><span class=\"line\">            &#123; pattern: /^<span class=\"number\">1</span>[<span class=\"number\">34578</span>]\\d&#123;<span class=\"number\">9</span>&#125;$/, message: '目前只支持中国大陆的手机号码' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          cardnum: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '请输入买受人身份证号', trigger: 'blur' &#125;,</span><br><span class=\"line\">            &#123; validator: checkCardnum, trigger: 'blur' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>当然，自定义验证规则时，一般都会是单独的文件做相关验证规则限制，然后引入调用。validate.js，customValidate.js， xxx.vue。<br>validate.js<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by feili on 2018/5/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">export <span class=\"keyword\">default</span> function (type,val) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//type的值：qq-QQ号，mobile-手机号，phone-座机号，cardid-身份证号，integer-数字，moneynum-货币数字（带两位小数），...</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//QQ</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isQQ = function (val) &#123;</span><br><span class=\"line\">    const reg = /^[<span class=\"number\">1</span>-<span class=\"number\">9</span>][<span class=\"number\">0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">4</span>,<span class=\"number\">10</span>&#125;$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//邮箱</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isEmail = function (val) &#123;</span><br><span class=\"line\">    const reg = /^([a-zA-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]+[<span class=\"number\">_</span>|\\<span class=\"number\">_</span>|\\.]?)*[a-zA-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]+@([a-zA-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]+[<span class=\"number\">_</span>|\\<span class=\"number\">_</span>|\\.]?)*[a-zA-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]+\\.[a-zA-<span class=\"type\">Z</span>]&#123;<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//手机号(目前只支持中国大陆的手机号码)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isMobile = function (val) &#123;</span><br><span class=\"line\">    const reg = /^<span class=\"number\">1</span>[<span class=\"number\">34578</span>]\\d&#123;<span class=\"number\">9</span>&#125;$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//座机号</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isPhone = function (val) &#123;</span><br><span class=\"line\">    const reg = /^<span class=\"number\">0</span>\\d&#123;<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;-\\d&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>&#125;$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//身份证号(15位和18位)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isCardID = function (val) &#123;</span><br><span class=\"line\">    const reg = /(^\\d&#123;<span class=\"number\">15</span>&#125;$)|(^\\d&#123;<span class=\"number\">18</span>&#125;$)|(^\\d&#123;<span class=\"number\">17</span>&#125;(\\d|<span class=\"type\">X</span>|x)$)/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//车牌号(川B12345)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isPlateNumber = function (val) &#123;</span><br><span class=\"line\">    const reg = /(^[\\u4E00-\\u9FA5]&#123;<span class=\"number\">1</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">6</span>&#125;$)|(^[<span class=\"type\">A</span>-<span class=\"type\">Z</span>]&#123;<span class=\"number\">2</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">2</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>\\u4E00-\\u9FA5]&#123;<span class=\"number\">1</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">4</span>&#125;$)|(^[\\u4E00-\\u9FA5]&#123;<span class=\"number\">1</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">5</span>&#125;[挂学警军港澳]&#123;<span class=\"number\">1</span>&#125;$)|(^[<span class=\"type\">A</span>-<span class=\"type\">Z</span>]&#123;<span class=\"number\">2</span>&#125;[<span class=\"number\">0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">5</span>&#125;$)|(^(<span class=\"number\">08</span>|<span class=\"number\">38</span>)&#123;<span class=\"number\">1</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">4</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>挂学警军港澳]&#123;<span class=\"number\">1</span>&#125;$)/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//数字（正整数和0）</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isInteger = function (val) &#123;</span><br><span class=\"line\">    const reg = /^([<span class=\"number\">1</span>-<span class=\"number\">9</span>]\\d*|[<span class=\"number\">0</span>]&#123;<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;)$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//货币数字（最多带两位小数）</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isMoneynum = function (val) &#123;</span><br><span class=\"line\">    const reg = /^([<span class=\"number\">1</span>-<span class=\"number\">9</span>]\\d+|<span class=\"number\">0</span>)(\\.[\\d]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;)?$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'qq':</span><br><span class=\"line\">      result = isQQ(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'mobile':</span><br><span class=\"line\">      result = isMobile(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'phone':</span><br><span class=\"line\">      result = isPhone(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'cardid':</span><br><span class=\"line\">      result = isCardID(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'platenumber':</span><br><span class=\"line\">      result = isPlateNumber(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'integer':</span><br><span class=\"line\">      result = isInteger(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'moneynum':</span><br><span class=\"line\">      result = isMoneynum(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>customValidate.js<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by feili on 2018/5/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span>  validate from './validate.js'</span><br><span class=\"line\"></span><br><span class=\"line\">export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*qq号*/</span></span><br><span class=\"line\">  isQQ: (rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('qq',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('您输入的<span class=\"type\">QQ</span>号不正确!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*手机号*/</span></span><br><span class=\"line\">  isMobile: (rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('mobile',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('您输入的手机号不正确!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*座机号*/</span></span><br><span class=\"line\">  isPhone:(rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('phone',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('您输入的座机号不正确!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*身份证号*/</span></span><br><span class=\"line\">  isCardID:(rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('cardid',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('您输入的身份证号不正确!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*数字（正整数和0）*/</span></span><br><span class=\"line\">  isInteger: (rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('integer',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('请输入数字!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*保留两位小数*/</span></span><br><span class=\"line\">  isMoneynum:(rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('moneynum',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('请输入正确的数字，最多保留两位小数!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>xxx.vue<br><code>import customValid from  &#39;@/util/customValidate&#39;</code><br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules: &#123;</span><br><span class=\"line\">          renttype: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '请选择出租方式', trigger: 'change' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          rentarea: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '此项必填', trigger: 'blur' &#125;,</span><br><span class=\"line\">            &#123; validator: customValid.isMoneynum, trigger: 'blur' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          rentcash: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '此项必填', trigger: 'blur' &#125;,</span><br><span class=\"line\">            &#123; validator: customValid.isInteger, trigger: 'blur' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://segmentfault.com/a/1190000012551362\" target=\"_blank\" rel=\"noopener\">ElementUi rules表单验证</a></li>\n<li><a href=\"http://www.cnblogs.com/myfirstboke/p/7930197.html\" target=\"_blank\" rel=\"noopener\">vue+element-ui中的表单验证（电话等等）</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>初次使用<a href=\"http://element-cn.eleme.io/#/zh-CN/component/installation\" target=\"_blank\" rel=\"noopener\">Element ui</a>，遇到不少坑。在此做些记录，方便日后查阅。<br>","more":"</p>\n<h2 id=\"form-表单赋值-取值\"><a href=\"#form-表单赋值-取值\" class=\"headerlink\" title=\"form 表单赋值/取值\"></a>form 表单赋值/取值</h2><p><strong>取值</strong>：获取 form 表单的每个表单项的值：<code>this.formName.property</code>，比如：<code>this.ruleForm.username</code>，<code>this.ruleForm.psw</code><br><strong>赋值</strong>：大部分都是下面这种方式赋值格式（property: value），<br>一般的 input ，赋值和显示的事一致的，而有些则不一定。比如下拉选择列表 select ，复选框 checkbox , 单选 radio ，日期 date 时间 time , 文件上传 fileupload 等等会有个显示文本（给用户看）和实际值（后台数据库存储的值）。</p>\n<ul>\n<li>select 选择器设置默认选择，见此例<a href=\"https://jsfiddle.net/athena0304/g51g4L0L/\" target=\"_blank\" rel=\"noopener\">https://jsfiddle.net/athena0304/g51g4L0L/</a></li>\n<li>checkbox 复选框和文件上传 fileupload 的是数组</li>\n<li>动态生成后的默认选项设置：label对应的string，:label对应的传过来的参数（string,number），见此例<a href=\"https://codepen.io/feili/pen/KReNWw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/feili/pen/KReNWw</a></li>\n</ul>\n<h2 id=\"form-表单验证\"><a href=\"#form-表单验证\" class=\"headerlink\" title=\"form 表单验证\"></a>form 表单验证</h2><p>自带验证和自定义验证。<br>自带验证：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        form: &#123;</span><br><span class=\"line\">          telphone: '',</span><br><span class=\"line\">          cardnum: '<span class=\"number\">523456178988776111</span>',</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        rules: &#123;</span><br><span class=\"line\">          telphone: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '请输入手机号', trigger: 'blur' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          cardnum: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '请输入买受人身份证号', trigger: 'blur' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>自定义验证：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      <span class=\"comment\">//自定义验证规则</span></span><br><span class=\"line\">      <span class=\"comment\">//身份证验证</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> checkCardnum = (rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">        setTimeout(() =&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">var</span> reg = /(^\\d&#123;<span class=\"number\">15</span>&#125;$)|(^\\d&#123;<span class=\"number\">18</span>&#125;$)|(^\\d&#123;<span class=\"number\">17</span>&#125;(\\d|<span class=\"type\">X</span>|x)$)/;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(!reg.test(value))&#123;</span><br><span class=\"line\">            callback(new <span class=\"type\">Error</span>('身份证输入不合法'));</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            callback();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        form: &#123;</span><br><span class=\"line\">          telphone: '',</span><br><span class=\"line\">          cardnum: '<span class=\"number\">523456178988776111</span>',</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        rules: &#123;</span><br><span class=\"line\">          telphone: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '请输入手机号', trigger: 'blur' &#125;,</span><br><span class=\"line\">            &#123; pattern: /^<span class=\"number\">1</span>[<span class=\"number\">34578</span>]\\d&#123;<span class=\"number\">9</span>&#125;$/, message: '目前只支持中国大陆的手机号码' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          cardnum: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '请输入买受人身份证号', trigger: 'blur' &#125;,</span><br><span class=\"line\">            &#123; validator: checkCardnum, trigger: 'blur' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>当然，自定义验证规则时，一般都会是单独的文件做相关验证规则限制，然后引入调用。validate.js，customValidate.js， xxx.vue。<br>validate.js<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by feili on 2018/5/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">export <span class=\"keyword\">default</span> function (type,val) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//type的值：qq-QQ号，mobile-手机号，phone-座机号，cardid-身份证号，integer-数字，moneynum-货币数字（带两位小数），...</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//QQ</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isQQ = function (val) &#123;</span><br><span class=\"line\">    const reg = /^[<span class=\"number\">1</span>-<span class=\"number\">9</span>][<span class=\"number\">0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">4</span>,<span class=\"number\">10</span>&#125;$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//邮箱</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isEmail = function (val) &#123;</span><br><span class=\"line\">    const reg = /^([a-zA-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]+[<span class=\"number\">_</span>|\\<span class=\"number\">_</span>|\\.]?)*[a-zA-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]+@([a-zA-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]+[<span class=\"number\">_</span>|\\<span class=\"number\">_</span>|\\.]?)*[a-zA-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]+\\.[a-zA-<span class=\"type\">Z</span>]&#123;<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//手机号(目前只支持中国大陆的手机号码)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isMobile = function (val) &#123;</span><br><span class=\"line\">    const reg = /^<span class=\"number\">1</span>[<span class=\"number\">34578</span>]\\d&#123;<span class=\"number\">9</span>&#125;$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//座机号</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isPhone = function (val) &#123;</span><br><span class=\"line\">    const reg = /^<span class=\"number\">0</span>\\d&#123;<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;-\\d&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>&#125;$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//身份证号(15位和18位)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isCardID = function (val) &#123;</span><br><span class=\"line\">    const reg = /(^\\d&#123;<span class=\"number\">15</span>&#125;$)|(^\\d&#123;<span class=\"number\">18</span>&#125;$)|(^\\d&#123;<span class=\"number\">17</span>&#125;(\\d|<span class=\"type\">X</span>|x)$)/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//车牌号(川B12345)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isPlateNumber = function (val) &#123;</span><br><span class=\"line\">    const reg = /(^[\\u4E00-\\u9FA5]&#123;<span class=\"number\">1</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">6</span>&#125;$)|(^[<span class=\"type\">A</span>-<span class=\"type\">Z</span>]&#123;<span class=\"number\">2</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">2</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>\\u4E00-\\u9FA5]&#123;<span class=\"number\">1</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">4</span>&#125;$)|(^[\\u4E00-\\u9FA5]&#123;<span class=\"number\">1</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">5</span>&#125;[挂学警军港澳]&#123;<span class=\"number\">1</span>&#125;$)|(^[<span class=\"type\">A</span>-<span class=\"type\">Z</span>]&#123;<span class=\"number\">2</span>&#125;[<span class=\"number\">0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">5</span>&#125;$)|(^(<span class=\"number\">08</span>|<span class=\"number\">38</span>)&#123;<span class=\"number\">1</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">4</span>&#125;[<span class=\"type\">A</span>-<span class=\"type\">Z0</span>-<span class=\"number\">9</span>挂学警军港澳]&#123;<span class=\"number\">1</span>&#125;$)/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//数字（正整数和0）</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isInteger = function (val) &#123;</span><br><span class=\"line\">    const reg = /^([<span class=\"number\">1</span>-<span class=\"number\">9</span>]\\d*|[<span class=\"number\">0</span>]&#123;<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;)$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//货币数字（最多带两位小数）</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> isMoneynum = function (val) &#123;</span><br><span class=\"line\">    const reg = /^([<span class=\"number\">1</span>-<span class=\"number\">9</span>]\\d+|<span class=\"number\">0</span>)(\\.[\\d]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;)?$/;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> reg.test(val);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'qq':</span><br><span class=\"line\">      result = isQQ(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'mobile':</span><br><span class=\"line\">      result = isMobile(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'phone':</span><br><span class=\"line\">      result = isPhone(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'cardid':</span><br><span class=\"line\">      result = isCardID(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'platenumber':</span><br><span class=\"line\">      result = isPlateNumber(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'integer':</span><br><span class=\"line\">      result = isInteger(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 'moneynum':</span><br><span class=\"line\">      result = isMoneynum(val);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>customValidate.js<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by feili on 2018/5/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span>  validate from './validate.js'</span><br><span class=\"line\"></span><br><span class=\"line\">export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*qq号*/</span></span><br><span class=\"line\">  isQQ: (rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('qq',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('您输入的<span class=\"type\">QQ</span>号不正确!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*手机号*/</span></span><br><span class=\"line\">  isMobile: (rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('mobile',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('您输入的手机号不正确!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*座机号*/</span></span><br><span class=\"line\">  isPhone:(rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('phone',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('您输入的座机号不正确!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*身份证号*/</span></span><br><span class=\"line\">  isCardID:(rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('cardid',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('您输入的身份证号不正确!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*数字（正整数和0）*/</span></span><br><span class=\"line\">  isInteger: (rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('integer',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('请输入数字!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*保留两位小数*/</span></span><br><span class=\"line\">  isMoneynum:(rule, value, callback) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((value || '')!='') &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!validate('moneynum',value)) &#123;</span><br><span class=\"line\">        callback(new <span class=\"type\">Error</span>('请输入正确的数字，最多保留两位小数!'))</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      callback();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>xxx.vue<br><code>import customValid from  &#39;@/util/customValidate&#39;</code><br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules: &#123;</span><br><span class=\"line\">          renttype: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '请选择出租方式', trigger: 'change' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          rentarea: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '此项必填', trigger: 'blur' &#125;,</span><br><span class=\"line\">            &#123; validator: customValid.isMoneynum, trigger: 'blur' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          rentcash: [</span><br><span class=\"line\">            &#123; <span class=\"keyword\">required</span>: <span class=\"literal\">true</span>, message: '此项必填', trigger: 'blur' &#125;,</span><br><span class=\"line\">            &#123; validator: customValid.isInteger, trigger: 'blur' &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://segmentfault.com/a/1190000012551362\" target=\"_blank\" rel=\"noopener\">ElementUi rules表单验证</a></li>\n<li><a href=\"http://www.cnblogs.com/myfirstboke/p/7930197.html\" target=\"_blank\" rel=\"noopener\">vue+element-ui中的表单验证（电话等等）</a></li>\n</ul>"},{"layout":"pages","title":"GitHub+Hexo（NexT主题）搭建博客","date":"2018-05-23T07:39:04.000Z","_content":"\n由于曾经搭建过，但是不小心删掉了本地电脑上的源码，而 github 上也只有生成后的html页面代码，导致了没法继续发布新文章。并且那会儿倒腾的有些久，断断续续的弄得，也没写博文记录。现在重新搭建一次，并且记录一下。\n<!-- more -->\n\n## 准备工作\n\n### 域名\n\n我的域名：www.missfli.com ，不愿意花钱就跳过此步骤。\n去[godaddy](https://sg.godaddy.com/zh/)购买域名，英文，中文的话选择新加坡或台湾香港都行，基本都能懂。购买的教程，可以参考[此文](https://www.jianshu.com/p/05289a4bc8b2)的 **购买域名** 步骤。\n\n### 环境技术\n\n[GitHub Pages](https://pages.github.com/) 用到了github，那就来个github桌面版，图形化界面，好用，你要喜欢命令模式也行。 \n[Hexo](https://hexo.io/zh-cn/) 的安装前提就是得有 Node.js 和 Git 。\n这里，我们要区分清楚git与github。git是一个版本控制的工具，而github有点类似于远程仓库，用于存放用git管理的各种项目。\n下面提供相关的官方版本地址，安装教程去网上搜一下就很多。\n\n* Node 官方版本安装：https://nodejs.org/en/\n* Git 官方版本安装：https://git-scm.com/download/win\n* Github桌面版安装：https://desktop.github.com/\n\n### Git 配置\n\n当安装完Git应该做的第一件事情就是设置用户名称和邮件地址。这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改：\n\n```swift\n$ git config --global user.name \"username\"\n$ git config --global user.email \"username@example.com\"\n```\n\n对于user.email，因为在GitHub的commits信息上是可见的，所以如果你不想让人知道你的email，可以Keeping your email address private:\n\n1. 在GitHub右上方点击你的头像，选择”Settings”；\n1. 在右边的”Personal settings”侧边栏选择”Emails”；\n1. 选择”Keep my email address private”。\n\n这样，你就可以使用如下格式的email进行配置：\n`$ git config --global user.email \"username@users.noreply.github.com\"`\n\n## Github 配置\n\n### 创建仓库 new repository\n\n在自己的GitHub账号下创建一个新的仓库，命名为username.github.io（username 是你的账号名)。\n\n在这里，要知道，GitHub Pages有两种类型：User/Organization Pages 和 Project Pages，而我所使用的是User Pages。\n简单来说，User Pages 与 Project Pages的区别是：\n\n1. User Pages 是用来展示用户的，而 Project Pages 是用来展示项目的。\n1. 用于存放 User Pages 的仓库必须使用username.github.io的命名规则，而 Project Pages 则没有特殊的要求。\n1. User Pages 将使用仓库的 master 分支，而 Project Pages 将使用 gh-pages 分支。\n1. User Pages 通过 http(s)://username.github.io 进行访问，而 Projects Pages通过 http(s)://username.github.io/projectname 进行访问。\n\n另外注意：\n\n* 注册的邮箱一定要验证，否则不会成功；\n* 仓库名字必须是：username.github.io，其中username是你的用户名；\n* 仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；\n\n**创建仓库** 借用别人的图：\n![new-repository.png](https://upload-images.jianshu.io/upload_images/1464420-ec89ff7605fb8739.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 创建分支\n相关命令可参考[此文](https://www.jianshu.com/p/7ebb0286444f)。\n创建新代码仓库时，默认是 master 分支，但是这里需要2个分支，一个存储博客网站源码，一个存储HTML静态网页代码。我的是 gh-dev 分支存放源码，master 分支存放HTML静态网页代码。步骤如下()：\n```swift\n#进入项目目录\n#创建新分支并切换到该分支 gh-dev\n$ git checkout -b gh-dev\n```\n\n然后登陆 github , 将 username.github.io 项目的默认分支 master 修改成 gh-dev 即可。切换分支可以查看源码和生成后的HTML静态文件代码（发布代码）。\n![github修改默认分支.png](https://upload-images.jianshu.io/upload_images/1464420-d8046f94fe889429.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### Github 绑定域名\n\n如果你没购买域名，就用github提供的默认的 xxx.github.io 来访问，可忽略此步骤。\n具体的绑定步骤，参考此文[Github 域名绑定](https://www.jianshu.com/p/be3ca7841484)\n\n\n## 配置SSH key\n\n为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。\n\n1. 检查电脑是否已经有SSH KEYS。\n`$ ls -al ~/.ssh`\n默认情况下，public keys的文件名是以下的格式之一：id_dsa.pub、id_ecdsa.pub、id_ed25519.pub、id_rsa.pub。因此，如果列出的文件有public和private钥匙对（例如id_ras.pub和id_rsa），证明已存在SSH keys。如果提示：No such file or directory 说明你是第一次使用git。\n\n2. 如果没有SSH KEY，则生成新的SSH KEY。\n`ssh-keygen -t rsa -C \"your_email@example.com\"`\n然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到`.ssh\\id_rsa.pub`文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -> SSH and GPG keys -> New SSH key：\n\n![image](http://upload-images.jianshu.io/upload_images/1464420-c0db2cf48e955749.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n将刚复制的内容粘贴到key那里，title随便填，保存。\n\n3. 测试是否成功\n`$ ssh -T git@github.com`\n\n如果提示`Are you sure you want to continue connecting (yes/no)?`，输入yes，然后会看到：\n\n> Hi liuxianan! You've successfully authenticated, but GitHub does not provide shell access.\n\n看到这个信息说明SSH已配置成功！\n\n此时你还需要配置：\n\n```swift\n$ git config --global user.name \"liuxianan\"// 你的github用户名，非昵称\n$ git config --global user.email  \"xxx@qq.com\"// 填写你的github注册邮箱\n```\n具体这个配置是干嘛的我没仔细深究。\n\n以上的配置流程，我是用的别人的，给你看个我运行的命令截图：\n![ssh-key.png](https://upload-images.jianshu.io/upload_images/1464420-f9ad654379dc006f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 安装Hexo\n\n[Hexo](https://hexo.io/zh-cn/) 官网有详细步骤。\n\n注意事项：\n1. 很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；\n1. hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；\n1. hexo有2种_config.yml文件，一个是根目录下的全局的_config.yml，一个是各个theme下的，在配置文件中修改时，冒号后面必须有一个空格，否则可能会出问题；\n\n### Hexo 创建项目\n\n打开你 Git Bash ，进入到你项目所在目录：\n\n```swift\n#Hexo 的安装\n$ npm install hexo-cli -g\n#查看版本，确认是否安装成功\n$ hexo -version \n#建站\n$ hexo init <project-name>\n$ cd <project-name>\n$ npm install\n#生成静态页面（markdown文件转化为html文件）\n$ hexo generate\n#网站预览（默认的主题风格landscape）\n$ hexo server\n```\n\n## NexT 安装\n\n你要是愿意用自带的 langscape 主题，可忽略此步骤。\n[NexT ](http://theme-next.iissnan.com/) 官网也有详细的步骤，文档也很详细，按照文档一步一步的设置一些基本和常用功能。\n网址：http://theme-next.iissnan.com/getting-started.html\n\n### 安装 NexT\n\n* 下载主题\n在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：\n```swift\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n* 启用主题\n打开站点配置文件_config.yml\n`theme: next`\n* 验证主题\n验证相关配置是否正确：\n`hexo s --debug`\n提示：\nINFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.\n此时即可使用浏览器访问 http://localhost:4000，检查站点是否正确运行。\n\n### NexT 主题设定\n\n* 选择风格 Scheme\n* 设置 界面语言\n* 设置 菜单\n* 设置 侧边栏\n* 设置 头像\n* 设置 作者昵称\n* 设置 站点描述\n\n### NexT 集成常用的第三方服务\n\n* 百度统计\n* 阅读次数统计（LeanCloud）\n* Algolia 搜索\n\n### 其他的设置和三方插件服务引入\n\n其他的设置和三方插件服务引入，官方没有或遇到了一些坑，后面再单独写博文记录。\n\n## 常用hexo命令\n\n常见命令：\n\n```swift\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #部署到GitHub\nhexo help  # 查看帮助\nhexo version  #查看Hexo的版本\n```\n\n缩写：\n\n```swift\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n组合命令：\n\n```swift\nhexo s -g #生成并本地预览\nhexo d -g #生成并上传\n```\n\n## 发布到 github\n\n将上面hexo新建的项目里的所有文件复制到 username.github.io(从 github 上的 username.github.io 项目的 gh-dev 分支上 clone 下来项目)里，\n\n首先，ssh key肯定要配置好。\n其次，配置_config.yml中有关deploy的部分。\n默认生成的_config.yml：\n\n```swift\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type:\n```\n\n修改后的_config.yml：\n\n```swift\ndeploy:\n  type: git\n  #对应仓库的SSH地址（可以在GitHub对应的仓库中复制）\n  repo: git@github.com:woaiwojia321314/woaiwojia321314.github.io.git \n  #（分支：User Pages为master，Project Pages为gh-pages）\n  branch: master \n```\n\n为了能够使Hexo部署到GitHub上，需要安装一个插件：\n`$ npm install hexo-deployer-git --save`\n\n然后，本地预览博客正常后，用git命令或github桌面端提交源码到 gh-dev 分支；用hexo deploy命令发布生成后的HTML代码到 master 分支上。\n执行下列指令即可完成部署：\n\n```swift\n$ hexo generate\n$ hexo deploy\n```\n之后，可以通过在浏览器键入：username.github.io进行浏览，开心吧~\n\n## 部署与管理\n\n### 我的博客搭建流程\n\n1. 创建仓库：`woaiwojia321314.github.io` ；\n1. 创建两个分支：master 与 gh-dev ；\n1. 设置 gh-dev 为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；\n1. clone项目：github 桌面端或使用`git clone git@github.com:woaiwojia321314/woaiwojia321314.github.io.git`拷贝仓库；\n1. 在本地 `woaiwojia321314.github.io` 文件夹下通过 Git bash 依次执行 npm install hexo-cli、hexo init、npm install 和 npm install hexo-deployer- git（此时当前分支应显示为 gh-dev ）;\n1. 修改 _config.yml 中的 deploy 参数，分支应为 master , 这样就能保证发布代码发布到 master 分支上；\n1. 依次执行git add .、git commit -m “…”、git push origin hexo提交网站相关的文件，或者用 github 桌面端提交项目源码；\n执行hexo generate -d生成网站并部署到GitHub上。（git命令提交或github桌面端提交源码到 gh-dev ; hexo deploy 命令提交生成HTML文件到 master 分支）\n这样一来，在 GitHub 上的 `woaiwojia321314.github.io` 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美( •̀ ω •́ )y！\n\n### 我的博客管理流程\n\n#### 日常修改\n\n在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理：\n\n1. 依次执行 git add .、git commit -m “…”、git push origin hexo指令将改动推送到GitHub（此时当前分支应为 gh-dev ）；\n1. 然后才执行hexo generate -d发布网站到 master 分支上。\n虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的（例如突然死机要重装了，悲催….的情况，调转顺序就有问题了）。\n\n#### 本地资料丢失\n\n当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：\n\n1. clone项目：github桌面端 或 使用 `git clone git@github.com:woaiwojia321314/woaiwojia321314.github.io.git` 拷贝仓库（默认分支为 gh-dev）；\n1. 在本地新拷贝的 woaiwojia321314.github.io 文件夹下通过 Git bash 依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git（记得，不需要hexo init这条指令）。\n\n\n## 保留CNAME、README.md等文件\n\n* CNAME、README.md、favicon.ico等文件放在source目录下。\n因为每次md转化为html时都会清空public文件夹，包括放在该目录下的CNAME、README.md、favicon.ico等等文件，放在source目录下，转化时会一起拿过去的。\nCNAME文件内容； `www.misssfli.com`\n* 项目根目录：gitignore文件内容：\n```swift\n.DS_Store\nThumbs.db\ndb.json\n*.log\nnode_modules/\n```\n\n## 参考\n* [GitHub Pages + Hexo搭建博客](http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more)\n* [如何搭建一个独立博客——简明Github Pages与Hexo教程](https://www.jianshu.com/p/05289a4bc8b2)\n* [使用hexo+github搭建免费个人博客详细教程](http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html)\n* [搭建个人博客-hexo+github详细完整步骤](https://www.jianshu.com/p/189fd945f38f)","source":"_posts/github-hexo-next-01.md","raw":"\n---\nlayout: pages\ntitle: GitHub+Hexo（NexT主题）搭建博客\ndate: 2018-05-23 15:39:04\ncategories:\n- Hexo\ntags:\n- Github\n- Hexo\n- NexT\n---\n\n由于曾经搭建过，但是不小心删掉了本地电脑上的源码，而 github 上也只有生成后的html页面代码，导致了没法继续发布新文章。并且那会儿倒腾的有些久，断断续续的弄得，也没写博文记录。现在重新搭建一次，并且记录一下。\n<!-- more -->\n\n## 准备工作\n\n### 域名\n\n我的域名：www.missfli.com ，不愿意花钱就跳过此步骤。\n去[godaddy](https://sg.godaddy.com/zh/)购买域名，英文，中文的话选择新加坡或台湾香港都行，基本都能懂。购买的教程，可以参考[此文](https://www.jianshu.com/p/05289a4bc8b2)的 **购买域名** 步骤。\n\n### 环境技术\n\n[GitHub Pages](https://pages.github.com/) 用到了github，那就来个github桌面版，图形化界面，好用，你要喜欢命令模式也行。 \n[Hexo](https://hexo.io/zh-cn/) 的安装前提就是得有 Node.js 和 Git 。\n这里，我们要区分清楚git与github。git是一个版本控制的工具，而github有点类似于远程仓库，用于存放用git管理的各种项目。\n下面提供相关的官方版本地址，安装教程去网上搜一下就很多。\n\n* Node 官方版本安装：https://nodejs.org/en/\n* Git 官方版本安装：https://git-scm.com/download/win\n* Github桌面版安装：https://desktop.github.com/\n\n### Git 配置\n\n当安装完Git应该做的第一件事情就是设置用户名称和邮件地址。这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改：\n\n```swift\n$ git config --global user.name \"username\"\n$ git config --global user.email \"username@example.com\"\n```\n\n对于user.email，因为在GitHub的commits信息上是可见的，所以如果你不想让人知道你的email，可以Keeping your email address private:\n\n1. 在GitHub右上方点击你的头像，选择”Settings”；\n1. 在右边的”Personal settings”侧边栏选择”Emails”；\n1. 选择”Keep my email address private”。\n\n这样，你就可以使用如下格式的email进行配置：\n`$ git config --global user.email \"username@users.noreply.github.com\"`\n\n## Github 配置\n\n### 创建仓库 new repository\n\n在自己的GitHub账号下创建一个新的仓库，命名为username.github.io（username 是你的账号名)。\n\n在这里，要知道，GitHub Pages有两种类型：User/Organization Pages 和 Project Pages，而我所使用的是User Pages。\n简单来说，User Pages 与 Project Pages的区别是：\n\n1. User Pages 是用来展示用户的，而 Project Pages 是用来展示项目的。\n1. 用于存放 User Pages 的仓库必须使用username.github.io的命名规则，而 Project Pages 则没有特殊的要求。\n1. User Pages 将使用仓库的 master 分支，而 Project Pages 将使用 gh-pages 分支。\n1. User Pages 通过 http(s)://username.github.io 进行访问，而 Projects Pages通过 http(s)://username.github.io/projectname 进行访问。\n\n另外注意：\n\n* 注册的邮箱一定要验证，否则不会成功；\n* 仓库名字必须是：username.github.io，其中username是你的用户名；\n* 仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；\n\n**创建仓库** 借用别人的图：\n![new-repository.png](https://upload-images.jianshu.io/upload_images/1464420-ec89ff7605fb8739.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 创建分支\n相关命令可参考[此文](https://www.jianshu.com/p/7ebb0286444f)。\n创建新代码仓库时，默认是 master 分支，但是这里需要2个分支，一个存储博客网站源码，一个存储HTML静态网页代码。我的是 gh-dev 分支存放源码，master 分支存放HTML静态网页代码。步骤如下()：\n```swift\n#进入项目目录\n#创建新分支并切换到该分支 gh-dev\n$ git checkout -b gh-dev\n```\n\n然后登陆 github , 将 username.github.io 项目的默认分支 master 修改成 gh-dev 即可。切换分支可以查看源码和生成后的HTML静态文件代码（发布代码）。\n![github修改默认分支.png](https://upload-images.jianshu.io/upload_images/1464420-d8046f94fe889429.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### Github 绑定域名\n\n如果你没购买域名，就用github提供的默认的 xxx.github.io 来访问，可忽略此步骤。\n具体的绑定步骤，参考此文[Github 域名绑定](https://www.jianshu.com/p/be3ca7841484)\n\n\n## 配置SSH key\n\n为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。\n\n1. 检查电脑是否已经有SSH KEYS。\n`$ ls -al ~/.ssh`\n默认情况下，public keys的文件名是以下的格式之一：id_dsa.pub、id_ecdsa.pub、id_ed25519.pub、id_rsa.pub。因此，如果列出的文件有public和private钥匙对（例如id_ras.pub和id_rsa），证明已存在SSH keys。如果提示：No such file or directory 说明你是第一次使用git。\n\n2. 如果没有SSH KEY，则生成新的SSH KEY。\n`ssh-keygen -t rsa -C \"your_email@example.com\"`\n然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到`.ssh\\id_rsa.pub`文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -> SSH and GPG keys -> New SSH key：\n\n![image](http://upload-images.jianshu.io/upload_images/1464420-c0db2cf48e955749.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n将刚复制的内容粘贴到key那里，title随便填，保存。\n\n3. 测试是否成功\n`$ ssh -T git@github.com`\n\n如果提示`Are you sure you want to continue connecting (yes/no)?`，输入yes，然后会看到：\n\n> Hi liuxianan! You've successfully authenticated, but GitHub does not provide shell access.\n\n看到这个信息说明SSH已配置成功！\n\n此时你还需要配置：\n\n```swift\n$ git config --global user.name \"liuxianan\"// 你的github用户名，非昵称\n$ git config --global user.email  \"xxx@qq.com\"// 填写你的github注册邮箱\n```\n具体这个配置是干嘛的我没仔细深究。\n\n以上的配置流程，我是用的别人的，给你看个我运行的命令截图：\n![ssh-key.png](https://upload-images.jianshu.io/upload_images/1464420-f9ad654379dc006f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 安装Hexo\n\n[Hexo](https://hexo.io/zh-cn/) 官网有详细步骤。\n\n注意事项：\n1. 很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；\n1. hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；\n1. hexo有2种_config.yml文件，一个是根目录下的全局的_config.yml，一个是各个theme下的，在配置文件中修改时，冒号后面必须有一个空格，否则可能会出问题；\n\n### Hexo 创建项目\n\n打开你 Git Bash ，进入到你项目所在目录：\n\n```swift\n#Hexo 的安装\n$ npm install hexo-cli -g\n#查看版本，确认是否安装成功\n$ hexo -version \n#建站\n$ hexo init <project-name>\n$ cd <project-name>\n$ npm install\n#生成静态页面（markdown文件转化为html文件）\n$ hexo generate\n#网站预览（默认的主题风格landscape）\n$ hexo server\n```\n\n## NexT 安装\n\n你要是愿意用自带的 langscape 主题，可忽略此步骤。\n[NexT ](http://theme-next.iissnan.com/) 官网也有详细的步骤，文档也很详细，按照文档一步一步的设置一些基本和常用功能。\n网址：http://theme-next.iissnan.com/getting-started.html\n\n### 安装 NexT\n\n* 下载主题\n在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：\n```swift\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n* 启用主题\n打开站点配置文件_config.yml\n`theme: next`\n* 验证主题\n验证相关配置是否正确：\n`hexo s --debug`\n提示：\nINFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.\n此时即可使用浏览器访问 http://localhost:4000，检查站点是否正确运行。\n\n### NexT 主题设定\n\n* 选择风格 Scheme\n* 设置 界面语言\n* 设置 菜单\n* 设置 侧边栏\n* 设置 头像\n* 设置 作者昵称\n* 设置 站点描述\n\n### NexT 集成常用的第三方服务\n\n* 百度统计\n* 阅读次数统计（LeanCloud）\n* Algolia 搜索\n\n### 其他的设置和三方插件服务引入\n\n其他的设置和三方插件服务引入，官方没有或遇到了一些坑，后面再单独写博文记录。\n\n## 常用hexo命令\n\n常见命令：\n\n```swift\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #部署到GitHub\nhexo help  # 查看帮助\nhexo version  #查看Hexo的版本\n```\n\n缩写：\n\n```swift\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n组合命令：\n\n```swift\nhexo s -g #生成并本地预览\nhexo d -g #生成并上传\n```\n\n## 发布到 github\n\n将上面hexo新建的项目里的所有文件复制到 username.github.io(从 github 上的 username.github.io 项目的 gh-dev 分支上 clone 下来项目)里，\n\n首先，ssh key肯定要配置好。\n其次，配置_config.yml中有关deploy的部分。\n默认生成的_config.yml：\n\n```swift\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type:\n```\n\n修改后的_config.yml：\n\n```swift\ndeploy:\n  type: git\n  #对应仓库的SSH地址（可以在GitHub对应的仓库中复制）\n  repo: git@github.com:woaiwojia321314/woaiwojia321314.github.io.git \n  #（分支：User Pages为master，Project Pages为gh-pages）\n  branch: master \n```\n\n为了能够使Hexo部署到GitHub上，需要安装一个插件：\n`$ npm install hexo-deployer-git --save`\n\n然后，本地预览博客正常后，用git命令或github桌面端提交源码到 gh-dev 分支；用hexo deploy命令发布生成后的HTML代码到 master 分支上。\n执行下列指令即可完成部署：\n\n```swift\n$ hexo generate\n$ hexo deploy\n```\n之后，可以通过在浏览器键入：username.github.io进行浏览，开心吧~\n\n## 部署与管理\n\n### 我的博客搭建流程\n\n1. 创建仓库：`woaiwojia321314.github.io` ；\n1. 创建两个分支：master 与 gh-dev ；\n1. 设置 gh-dev 为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；\n1. clone项目：github 桌面端或使用`git clone git@github.com:woaiwojia321314/woaiwojia321314.github.io.git`拷贝仓库；\n1. 在本地 `woaiwojia321314.github.io` 文件夹下通过 Git bash 依次执行 npm install hexo-cli、hexo init、npm install 和 npm install hexo-deployer- git（此时当前分支应显示为 gh-dev ）;\n1. 修改 _config.yml 中的 deploy 参数，分支应为 master , 这样就能保证发布代码发布到 master 分支上；\n1. 依次执行git add .、git commit -m “…”、git push origin hexo提交网站相关的文件，或者用 github 桌面端提交项目源码；\n执行hexo generate -d生成网站并部署到GitHub上。（git命令提交或github桌面端提交源码到 gh-dev ; hexo deploy 命令提交生成HTML文件到 master 分支）\n这样一来，在 GitHub 上的 `woaiwojia321314.github.io` 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美( •̀ ω •́ )y！\n\n### 我的博客管理流程\n\n#### 日常修改\n\n在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理：\n\n1. 依次执行 git add .、git commit -m “…”、git push origin hexo指令将改动推送到GitHub（此时当前分支应为 gh-dev ）；\n1. 然后才执行hexo generate -d发布网站到 master 分支上。\n虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的（例如突然死机要重装了，悲催….的情况，调转顺序就有问题了）。\n\n#### 本地资料丢失\n\n当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：\n\n1. clone项目：github桌面端 或 使用 `git clone git@github.com:woaiwojia321314/woaiwojia321314.github.io.git` 拷贝仓库（默认分支为 gh-dev）；\n1. 在本地新拷贝的 woaiwojia321314.github.io 文件夹下通过 Git bash 依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git（记得，不需要hexo init这条指令）。\n\n\n## 保留CNAME、README.md等文件\n\n* CNAME、README.md、favicon.ico等文件放在source目录下。\n因为每次md转化为html时都会清空public文件夹，包括放在该目录下的CNAME、README.md、favicon.ico等等文件，放在source目录下，转化时会一起拿过去的。\nCNAME文件内容； `www.misssfli.com`\n* 项目根目录：gitignore文件内容：\n```swift\n.DS_Store\nThumbs.db\ndb.json\n*.log\nnode_modules/\n```\n\n## 参考\n* [GitHub Pages + Hexo搭建博客](http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more)\n* [如何搭建一个独立博客——简明Github Pages与Hexo教程](https://www.jianshu.com/p/05289a4bc8b2)\n* [使用hexo+github搭建免费个人博客详细教程](http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html)\n* [搭建个人博客-hexo+github详细完整步骤](https://www.jianshu.com/p/189fd945f38f)","slug":"github-hexo-next-01","published":1,"updated":"2018-05-24T02:42:59.342Z","comments":1,"photos":[],"link":"","_id":"cji0ejm1d0005g4l110i02b1k","content":"<p>由于曾经搭建过，但是不小心删掉了本地电脑上的源码，而 github 上也只有生成后的html页面代码，导致了没法继续发布新文章。并且那会儿倒腾的有些久，断断续续的弄得，也没写博文记录。现在重新搭建一次，并且记录一下。<br><a id=\"more\"></a></p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><h3 id=\"域名\"><a href=\"#域名\" class=\"headerlink\" title=\"域名\"></a>域名</h3><p>我的域名：<a href=\"http://www.missfli.com\" target=\"_blank\" rel=\"noopener\">www.missfli.com</a> ，不愿意花钱就跳过此步骤。<br>去<a href=\"https://sg.godaddy.com/zh/\" target=\"_blank\" rel=\"noopener\">godaddy</a>购买域名，英文，中文的话选择新加坡或台湾香港都行，基本都能懂。购买的教程，可以参考<a href=\"https://www.jianshu.com/p/05289a4bc8b2\" target=\"_blank\" rel=\"noopener\">此文</a>的 <strong>购买域名</strong> 步骤。</p>\n<h3 id=\"环境技术\"><a href=\"#环境技术\" class=\"headerlink\" title=\"环境技术\"></a>环境技术</h3><p><a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Pages</a> 用到了github，那就来个github桌面版，图形化界面，好用，你要喜欢命令模式也行。<br><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a> 的安装前提就是得有 Node.js 和 Git 。<br>这里，我们要区分清楚git与github。git是一个版本控制的工具，而github有点类似于远程仓库，用于存放用git管理的各种项目。<br>下面提供相关的官方版本地址，安装教程去网上搜一下就很多。</p>\n<ul>\n<li>Node 官方版本安装：<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/en/</a></li>\n<li>Git 官方版本安装：<a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/download/win</a></li>\n<li>Github桌面版安装：<a href=\"https://desktop.github.com/\" target=\"_blank\" rel=\"noopener\">https://desktop.github.com/</a></li>\n</ul>\n<h3 id=\"Git-配置\"><a href=\"#Git-配置\" class=\"headerlink\" title=\"Git 配置\"></a>Git 配置</h3><p>当安装完Git应该做的第一件事情就是设置用户名称和邮件地址。这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name <span class=\"string\">\"username\"</span></span><br><span class=\"line\">$ git config --global user.email <span class=\"string\">\"username@example.com\"</span></span><br></pre></td></tr></table></figure>\n<p>对于user.email，因为在GitHub的commits信息上是可见的，所以如果你不想让人知道你的email，可以Keeping your email address private:</p>\n<ol>\n<li>在GitHub右上方点击你的头像，选择”Settings”；</li>\n<li>在右边的”Personal settings”侧边栏选择”Emails”；</li>\n<li>选择”Keep my email address private”。</li>\n</ol>\n<p>这样，你就可以使用如下格式的email进行配置：<br><code>$ git config --global user.email &quot;username@users.noreply.github.com&quot;</code></p>\n<h2 id=\"Github-配置\"><a href=\"#Github-配置\" class=\"headerlink\" title=\"Github 配置\"></a>Github 配置</h2><h3 id=\"创建仓库-new-repository\"><a href=\"#创建仓库-new-repository\" class=\"headerlink\" title=\"创建仓库 new repository\"></a>创建仓库 new repository</h3><p>在自己的GitHub账号下创建一个新的仓库，命名为username.github.io（username 是你的账号名)。</p>\n<p>在这里，要知道，GitHub Pages有两种类型：User/Organization Pages 和 Project Pages，而我所使用的是User Pages。<br>简单来说，User Pages 与 Project Pages的区别是：</p>\n<ol>\n<li>User Pages 是用来展示用户的，而 Project Pages 是用来展示项目的。</li>\n<li>用于存放 User Pages 的仓库必须使用username.github.io的命名规则，而 Project Pages 则没有特殊的要求。</li>\n<li>User Pages 将使用仓库的 master 分支，而 Project Pages 将使用 gh-pages 分支。</li>\n<li>User Pages 通过 http(s)://username.github.io 进行访问，而 Projects Pages通过 http(s)://username.github.io/projectname 进行访问。</li>\n</ol>\n<p>另外注意：</p>\n<ul>\n<li>注册的邮箱一定要验证，否则不会成功；</li>\n<li>仓库名字必须是：username.github.io，其中username是你的用户名；</li>\n<li>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；</li>\n</ul>\n<p><strong>创建仓库</strong> 借用别人的图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-ec89ff7605fb8739.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"new-repository.png\"></p>\n<h3 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h3><p>相关命令可参考<a href=\"https://www.jianshu.com/p/7ebb0286444f\" target=\"_blank\" rel=\"noopener\">此文</a>。<br>创建新代码仓库时，默认是 master 分支，但是这里需要2个分支，一个存储博客网站源码，一个存储HTML静态网页代码。我的是 gh-dev 分支存放源码，master 分支存放HTML静态网页代码。步骤如下()：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#进入项目目录</span><br><span class=\"line\">#创建新分支并切换到该分支 gh-dev</span><br><span class=\"line\">$ git checkout -b gh-dev</span><br></pre></td></tr></table></figure></p>\n<p>然后登陆 github , 将 username.github.io 项目的默认分支 master 修改成 gh-dev 即可。切换分支可以查看源码和生成后的HTML静态文件代码（发布代码）。<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-d8046f94fe889429.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"github修改默认分支.png\"></p>\n<h3 id=\"Github-绑定域名\"><a href=\"#Github-绑定域名\" class=\"headerlink\" title=\"Github 绑定域名\"></a>Github 绑定域名</h3><p>如果你没购买域名，就用github提供的默认的 xxx.github.io 来访问，可忽略此步骤。<br>具体的绑定步骤，参考此文<a href=\"https://www.jianshu.com/p/be3ca7841484\" target=\"_blank\" rel=\"noopener\">Github 域名绑定</a></p>\n<h2 id=\"配置SSH-key\"><a href=\"#配置SSH-key\" class=\"headerlink\" title=\"配置SSH key\"></a>配置SSH key</h2><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p>\n<ol>\n<li><p>检查电脑是否已经有SSH KEYS。<br><code>$ ls -al ~/.ssh</code><br>默认情况下，public keys的文件名是以下的格式之一：id_dsa.pub、id_ecdsa.pub、id_ed25519.pub、id_rsa.pub。因此，如果列出的文件有public和private钥匙对（例如id_ras.pub和id_rsa），证明已存在SSH keys。如果提示：No such file or directory 说明你是第一次使用git。</p>\n</li>\n<li><p>如果没有SSH KEY，则生成新的SSH KEY。<br><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code><br>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p>\n</li>\n</ol>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-c0db2cf48e955749.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>将刚复制的内容粘贴到key那里，title随便填，保存。</p>\n<ol start=\"3\">\n<li>测试是否成功<br><code>$ ssh -T git@github.com</code></li>\n</ol>\n<p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p>\n<blockquote>\n<p>Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access.</p>\n</blockquote>\n<p>看到这个信息说明SSH已配置成功！</p>\n<p>此时你还需要配置：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name <span class=\"string\">\"liuxianan\"</span><span class=\"comment\">// 你的github用户名，非昵称</span></span><br><span class=\"line\">$ git config --global user.email  <span class=\"string\">\"xxx@qq.com\"</span><span class=\"comment\">// 填写你的github注册邮箱</span></span><br></pre></td></tr></table></figure>\n<p>具体这个配置是干嘛的我没仔细深究。</p>\n<p>以上的配置流程，我是用的别人的，给你看个我运行的命令截图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-f9ad654379dc006f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ssh-key.png\"></p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a> 官网有详细步骤。</p>\n<p>注意事项：</p>\n<ol>\n<li>很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；</li>\n<li>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</li>\n<li>hexo有2种_config.yml文件，一个是根目录下的全局的_config.yml，一个是各个theme下的，在配置文件中修改时，冒号后面必须有一个空格，否则可能会出问题；</li>\n</ol>\n<h3 id=\"Hexo-创建项目\"><a href=\"#Hexo-创建项目\" class=\"headerlink\" title=\"Hexo 创建项目\"></a>Hexo 创建项目</h3><p>打开你 Git Bash ，进入到你项目所在目录：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">Hexo</span> 的安装</span><br><span class=\"line\">$ npm install hexo-cli -g</span><br><span class=\"line\">#查看版本，确认是否安装成功</span><br><span class=\"line\">$ hexo -version </span><br><span class=\"line\">#建站</span><br><span class=\"line\">$ hexo <span class=\"keyword\">init</span> &lt;project-name&gt;</span><br><span class=\"line\">$ cd &lt;project-name&gt;</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">#生成静态页面（markdown文件转化为html文件）</span><br><span class=\"line\">$ hexo generate</span><br><span class=\"line\">#网站预览（默认的主题风格landscape）</span><br><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<h2 id=\"NexT-安装\"><a href=\"#NexT-安装\" class=\"headerlink\" title=\"NexT 安装\"></a>NexT 安装</h2><p>你要是愿意用自带的 langscape 主题，可忽略此步骤。<br><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">NexT </a> 官网也有详细的步骤，文档也很详细，按照文档一步一步的设置一些基本和常用功能。<br>网址：<a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">http://theme-next.iissnan.com/getting-started.html</a></p>\n<h3 id=\"安装-NexT\"><a href=\"#安装-NexT\" class=\"headerlink\" title=\"安装 NexT\"></a>安装 NexT</h3><ul>\n<li><p>下载主题<br>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd your-hexo-site</span><br><span class=\"line\">$ git clone https:<span class=\"comment\">//github.com/iissnan/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启用主题<br>打开站点配置文件_config.yml<br><code>theme: next</code></p>\n</li>\n<li>验证主题<br>验证相关配置是否正确：<br><code>hexo s --debug</code><br>提示：<br>INFO  Hexo is running at <a href=\"http://0.0.0.0:4000/\" target=\"_blank\" rel=\"noopener\">http://0.0.0.0:4000/</a>. Press Ctrl+C to stop.<br>此时即可使用浏览器访问 <a href=\"http://localhost:4000，检查站点是否正确运行。\" target=\"_blank\" rel=\"noopener\">http://localhost:4000，检查站点是否正确运行。</a></li>\n</ul>\n<h3 id=\"NexT-主题设定\"><a href=\"#NexT-主题设定\" class=\"headerlink\" title=\"NexT 主题设定\"></a>NexT 主题设定</h3><ul>\n<li>选择风格 Scheme</li>\n<li>设置 界面语言</li>\n<li>设置 菜单</li>\n<li>设置 侧边栏</li>\n<li>设置 头像</li>\n<li>设置 作者昵称</li>\n<li>设置 站点描述</li>\n</ul>\n<h3 id=\"NexT-集成常用的第三方服务\"><a href=\"#NexT-集成常用的第三方服务\" class=\"headerlink\" title=\"NexT 集成常用的第三方服务\"></a>NexT 集成常用的第三方服务</h3><ul>\n<li>百度统计</li>\n<li>阅读次数统计（LeanCloud）</li>\n<li>Algolia 搜索</li>\n</ul>\n<h3 id=\"其他的设置和三方插件服务引入\"><a href=\"#其他的设置和三方插件服务引入\" class=\"headerlink\" title=\"其他的设置和三方插件服务引入\"></a>其他的设置和三方插件服务引入</h3><p>其他的设置和三方插件服务引入，官方没有或遇到了一些坑，后面再单独写博文记录。</p>\n<h2 id=\"常用hexo命令\"><a href=\"#常用hexo命令\" class=\"headerlink\" title=\"常用hexo命令\"></a>常用hexo命令</h2><p>常见命令：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"postName\"</span> #新建文章</span><br><span class=\"line\">hexo new page <span class=\"string\">\"pageName\"</span> #新建页面</span><br><span class=\"line\">hexo generate #生成静态页面至<span class=\"keyword\">public</span>目录</span><br><span class=\"line\">hexo server #开启预览访问端口（默认端口<span class=\"number\">4000</span>，'ctrl + <span class=\"built_in\">c</span>'关闭server）</span><br><span class=\"line\">hexo deploy #部署到<span class=\"type\">GitHub</span></span><br><span class=\"line\">hexo help  # 查看帮助</span><br><span class=\"line\">hexo version  #查看<span class=\"type\">Hexo</span>的版本</span><br></pre></td></tr></table></figure>\n<p>缩写：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n == hexo new</span><br><span class=\"line\">hexo g == hexo generate</span><br><span class=\"line\">hexo s == hexo server</span><br><span class=\"line\">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>\n<p>组合命令：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s -g #生成并本地预览</span><br><span class=\"line\">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure>\n<h2 id=\"发布到-github\"><a href=\"#发布到-github\" class=\"headerlink\" title=\"发布到 github\"></a>发布到 github</h2><p>将上面hexo新建的项目里的所有文件复制到 username.github.io(从 github 上的 username.github.io 项目的 gh-dev 分支上 clone 下来项目)里，</p>\n<p>首先，ssh key肯定要配置好。<br>其次，配置_config.yml中有关deploy的部分。<br>默认生成的_config.yml：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"type\">Deployment</span></span><br><span class=\"line\">## <span class=\"type\">Docs</span>: http:<span class=\"comment\">//hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type:</span><br></pre></td></tr></table></figure>\n<p>修改后的_config.yml：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  #对应仓库的<span class=\"type\">SSH</span>地址（可以在<span class=\"type\">GitHub</span>对应的仓库中复制）</span><br><span class=\"line\">  repo: git@github.com:woaiwojia321314/woaiwojia321314.github.io.git </span><br><span class=\"line\">  #（分支：<span class=\"type\">User</span> <span class=\"type\">Pages</span>为master，<span class=\"type\">Project</span> <span class=\"type\">Pages</span>为gh-pages）</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>为了能够使Hexo部署到GitHub上，需要安装一个插件：<br><code>$ npm install hexo-deployer-git --save</code></p>\n<p>然后，本地预览博客正常后，用git命令或github桌面端提交源码到 gh-dev 分支；用hexo deploy命令发布生成后的HTML代码到 master 分支上。<br>执行下列指令即可完成部署：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>之后，可以通过在浏览器键入：username.github.io进行浏览，开心吧~</p>\n<h2 id=\"部署与管理\"><a href=\"#部署与管理\" class=\"headerlink\" title=\"部署与管理\"></a>部署与管理</h2><h3 id=\"我的博客搭建流程\"><a href=\"#我的博客搭建流程\" class=\"headerlink\" title=\"我的博客搭建流程\"></a>我的博客搭建流程</h3><ol>\n<li>创建仓库：<code>woaiwojia321314.github.io</code> ；</li>\n<li>创建两个分支：master 与 gh-dev ；</li>\n<li>设置 gh-dev 为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；</li>\n<li>clone项目：github 桌面端或使用<code>git clone git@github.com:woaiwojia321314/woaiwojia321314.github.io.git</code>拷贝仓库；</li>\n<li>在本地 <code>woaiwojia321314.github.io</code> 文件夹下通过 Git bash 依次执行 npm install hexo-cli、hexo init、npm install 和 npm install hexo-deployer- git（此时当前分支应显示为 gh-dev ）;</li>\n<li>修改 _config.yml 中的 deploy 参数，分支应为 master , 这样就能保证发布代码发布到 master 分支上；</li>\n<li>依次执行git add .、git commit -m “…”、git push origin hexo提交网站相关的文件，或者用 github 桌面端提交项目源码；<br>执行hexo generate -d生成网站并部署到GitHub上。（git命令提交或github桌面端提交源码到 gh-dev ; hexo deploy 命令提交生成HTML文件到 master 分支）<br>这样一来，在 GitHub 上的 <code>woaiwojia321314.github.io</code> 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美( •̀ ω •́ )y！</li>\n</ol>\n<h3 id=\"我的博客管理流程\"><a href=\"#我的博客管理流程\" class=\"headerlink\" title=\"我的博客管理流程\"></a>我的博客管理流程</h3><h4 id=\"日常修改\"><a href=\"#日常修改\" class=\"headerlink\" title=\"日常修改\"></a>日常修改</h4><p>在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理：</p>\n<ol>\n<li>依次执行 git add .、git commit -m “…”、git push origin hexo指令将改动推送到GitHub（此时当前分支应为 gh-dev ）；</li>\n<li>然后才执行hexo generate -d发布网站到 master 分支上。<br>虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的（例如突然死机要重装了，悲催….的情况，调转顺序就有问题了）。</li>\n</ol>\n<h4 id=\"本地资料丢失\"><a href=\"#本地资料丢失\" class=\"headerlink\" title=\"本地资料丢失\"></a>本地资料丢失</h4><p>当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：</p>\n<ol>\n<li>clone项目：github桌面端 或 使用 <code>git clone git@github.com:woaiwojia321314/woaiwojia321314.github.io.git</code> 拷贝仓库（默认分支为 gh-dev）；</li>\n<li>在本地新拷贝的 woaiwojia321314.github.io 文件夹下通过 Git bash 依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git（记得，不需要hexo init这条指令）。</li>\n</ol>\n<h2 id=\"保留CNAME、README-md等文件\"><a href=\"#保留CNAME、README-md等文件\" class=\"headerlink\" title=\"保留CNAME、README.md等文件\"></a>保留CNAME、README.md等文件</h2><ul>\n<li>CNAME、README.md、favicon.ico等文件放在source目录下。<br>因为每次md转化为html时都会清空public文件夹，包括放在该目录下的CNAME、README.md、favicon.ico等等文件，放在source目录下，转化时会一起拿过去的。<br>CNAME文件内容； <code>www.misssfli.com</code></li>\n<li>项目根目录：gitignore文件内容：<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"type\">DS_Store</span></span><br><span class=\"line\"><span class=\"type\">Thumbs</span>.db</span><br><span class=\"line\">db.json</span><br><span class=\"line\">*.log</span><br><span class=\"line\">node_modules/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more\" target=\"_blank\" rel=\"noopener\">GitHub Pages + Hexo搭建博客</a></li>\n<li><a href=\"https://www.jianshu.com/p/05289a4bc8b2\" target=\"_blank\" rel=\"noopener\">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>\n<li><a href=\"http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html\" target=\"_blank\" rel=\"noopener\">使用hexo+github搭建免费个人博客详细教程</a></li>\n<li><a href=\"https://www.jianshu.com/p/189fd945f38f\" target=\"_blank\" rel=\"noopener\">搭建个人博客-hexo+github详细完整步骤</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>由于曾经搭建过，但是不小心删掉了本地电脑上的源码，而 github 上也只有生成后的html页面代码，导致了没法继续发布新文章。并且那会儿倒腾的有些久，断断续续的弄得，也没写博文记录。现在重新搭建一次，并且记录一下。<br>","more":"</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><h3 id=\"域名\"><a href=\"#域名\" class=\"headerlink\" title=\"域名\"></a>域名</h3><p>我的域名：<a href=\"http://www.missfli.com\" target=\"_blank\" rel=\"noopener\">www.missfli.com</a> ，不愿意花钱就跳过此步骤。<br>去<a href=\"https://sg.godaddy.com/zh/\" target=\"_blank\" rel=\"noopener\">godaddy</a>购买域名，英文，中文的话选择新加坡或台湾香港都行，基本都能懂。购买的教程，可以参考<a href=\"https://www.jianshu.com/p/05289a4bc8b2\" target=\"_blank\" rel=\"noopener\">此文</a>的 <strong>购买域名</strong> 步骤。</p>\n<h3 id=\"环境技术\"><a href=\"#环境技术\" class=\"headerlink\" title=\"环境技术\"></a>环境技术</h3><p><a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Pages</a> 用到了github，那就来个github桌面版，图形化界面，好用，你要喜欢命令模式也行。<br><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a> 的安装前提就是得有 Node.js 和 Git 。<br>这里，我们要区分清楚git与github。git是一个版本控制的工具，而github有点类似于远程仓库，用于存放用git管理的各种项目。<br>下面提供相关的官方版本地址，安装教程去网上搜一下就很多。</p>\n<ul>\n<li>Node 官方版本安装：<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/en/</a></li>\n<li>Git 官方版本安装：<a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/download/win</a></li>\n<li>Github桌面版安装：<a href=\"https://desktop.github.com/\" target=\"_blank\" rel=\"noopener\">https://desktop.github.com/</a></li>\n</ul>\n<h3 id=\"Git-配置\"><a href=\"#Git-配置\" class=\"headerlink\" title=\"Git 配置\"></a>Git 配置</h3><p>当安装完Git应该做的第一件事情就是设置用户名称和邮件地址。这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name <span class=\"string\">\"username\"</span></span><br><span class=\"line\">$ git config --global user.email <span class=\"string\">\"username@example.com\"</span></span><br></pre></td></tr></table></figure>\n<p>对于user.email，因为在GitHub的commits信息上是可见的，所以如果你不想让人知道你的email，可以Keeping your email address private:</p>\n<ol>\n<li>在GitHub右上方点击你的头像，选择”Settings”；</li>\n<li>在右边的”Personal settings”侧边栏选择”Emails”；</li>\n<li>选择”Keep my email address private”。</li>\n</ol>\n<p>这样，你就可以使用如下格式的email进行配置：<br><code>$ git config --global user.email &quot;username@users.noreply.github.com&quot;</code></p>\n<h2 id=\"Github-配置\"><a href=\"#Github-配置\" class=\"headerlink\" title=\"Github 配置\"></a>Github 配置</h2><h3 id=\"创建仓库-new-repository\"><a href=\"#创建仓库-new-repository\" class=\"headerlink\" title=\"创建仓库 new repository\"></a>创建仓库 new repository</h3><p>在自己的GitHub账号下创建一个新的仓库，命名为username.github.io（username 是你的账号名)。</p>\n<p>在这里，要知道，GitHub Pages有两种类型：User/Organization Pages 和 Project Pages，而我所使用的是User Pages。<br>简单来说，User Pages 与 Project Pages的区别是：</p>\n<ol>\n<li>User Pages 是用来展示用户的，而 Project Pages 是用来展示项目的。</li>\n<li>用于存放 User Pages 的仓库必须使用username.github.io的命名规则，而 Project Pages 则没有特殊的要求。</li>\n<li>User Pages 将使用仓库的 master 分支，而 Project Pages 将使用 gh-pages 分支。</li>\n<li>User Pages 通过 http(s)://username.github.io 进行访问，而 Projects Pages通过 http(s)://username.github.io/projectname 进行访问。</li>\n</ol>\n<p>另外注意：</p>\n<ul>\n<li>注册的邮箱一定要验证，否则不会成功；</li>\n<li>仓库名字必须是：username.github.io，其中username是你的用户名；</li>\n<li>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；</li>\n</ul>\n<p><strong>创建仓库</strong> 借用别人的图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-ec89ff7605fb8739.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"new-repository.png\"></p>\n<h3 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h3><p>相关命令可参考<a href=\"https://www.jianshu.com/p/7ebb0286444f\" target=\"_blank\" rel=\"noopener\">此文</a>。<br>创建新代码仓库时，默认是 master 分支，但是这里需要2个分支，一个存储博客网站源码，一个存储HTML静态网页代码。我的是 gh-dev 分支存放源码，master 分支存放HTML静态网页代码。步骤如下()：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#进入项目目录</span><br><span class=\"line\">#创建新分支并切换到该分支 gh-dev</span><br><span class=\"line\">$ git checkout -b gh-dev</span><br></pre></td></tr></table></figure></p>\n<p>然后登陆 github , 将 username.github.io 项目的默认分支 master 修改成 gh-dev 即可。切换分支可以查看源码和生成后的HTML静态文件代码（发布代码）。<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-d8046f94fe889429.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"github修改默认分支.png\"></p>\n<h3 id=\"Github-绑定域名\"><a href=\"#Github-绑定域名\" class=\"headerlink\" title=\"Github 绑定域名\"></a>Github 绑定域名</h3><p>如果你没购买域名，就用github提供的默认的 xxx.github.io 来访问，可忽略此步骤。<br>具体的绑定步骤，参考此文<a href=\"https://www.jianshu.com/p/be3ca7841484\" target=\"_blank\" rel=\"noopener\">Github 域名绑定</a></p>\n<h2 id=\"配置SSH-key\"><a href=\"#配置SSH-key\" class=\"headerlink\" title=\"配置SSH key\"></a>配置SSH key</h2><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p>\n<ol>\n<li><p>检查电脑是否已经有SSH KEYS。<br><code>$ ls -al ~/.ssh</code><br>默认情况下，public keys的文件名是以下的格式之一：id_dsa.pub、id_ecdsa.pub、id_ed25519.pub、id_rsa.pub。因此，如果列出的文件有public和private钥匙对（例如id_ras.pub和id_rsa），证明已存在SSH keys。如果提示：No such file or directory 说明你是第一次使用git。</p>\n</li>\n<li><p>如果没有SSH KEY，则生成新的SSH KEY。<br><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code><br>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p>\n</li>\n</ol>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-c0db2cf48e955749.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>将刚复制的内容粘贴到key那里，title随便填，保存。</p>\n<ol start=\"3\">\n<li>测试是否成功<br><code>$ ssh -T git@github.com</code></li>\n</ol>\n<p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p>\n<blockquote>\n<p>Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access.</p>\n</blockquote>\n<p>看到这个信息说明SSH已配置成功！</p>\n<p>此时你还需要配置：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name <span class=\"string\">\"liuxianan\"</span><span class=\"comment\">// 你的github用户名，非昵称</span></span><br><span class=\"line\">$ git config --global user.email  <span class=\"string\">\"xxx@qq.com\"</span><span class=\"comment\">// 填写你的github注册邮箱</span></span><br></pre></td></tr></table></figure>\n<p>具体这个配置是干嘛的我没仔细深究。</p>\n<p>以上的配置流程，我是用的别人的，给你看个我运行的命令截图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-f9ad654379dc006f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ssh-key.png\"></p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a> 官网有详细步骤。</p>\n<p>注意事项：</p>\n<ol>\n<li>很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；</li>\n<li>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</li>\n<li>hexo有2种_config.yml文件，一个是根目录下的全局的_config.yml，一个是各个theme下的，在配置文件中修改时，冒号后面必须有一个空格，否则可能会出问题；</li>\n</ol>\n<h3 id=\"Hexo-创建项目\"><a href=\"#Hexo-创建项目\" class=\"headerlink\" title=\"Hexo 创建项目\"></a>Hexo 创建项目</h3><p>打开你 Git Bash ，进入到你项目所在目录：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">Hexo</span> 的安装</span><br><span class=\"line\">$ npm install hexo-cli -g</span><br><span class=\"line\">#查看版本，确认是否安装成功</span><br><span class=\"line\">$ hexo -version </span><br><span class=\"line\">#建站</span><br><span class=\"line\">$ hexo <span class=\"keyword\">init</span> &lt;project-name&gt;</span><br><span class=\"line\">$ cd &lt;project-name&gt;</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">#生成静态页面（markdown文件转化为html文件）</span><br><span class=\"line\">$ hexo generate</span><br><span class=\"line\">#网站预览（默认的主题风格landscape）</span><br><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<h2 id=\"NexT-安装\"><a href=\"#NexT-安装\" class=\"headerlink\" title=\"NexT 安装\"></a>NexT 安装</h2><p>你要是愿意用自带的 langscape 主题，可忽略此步骤。<br><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">NexT </a> 官网也有详细的步骤，文档也很详细，按照文档一步一步的设置一些基本和常用功能。<br>网址：<a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">http://theme-next.iissnan.com/getting-started.html</a></p>\n<h3 id=\"安装-NexT\"><a href=\"#安装-NexT\" class=\"headerlink\" title=\"安装 NexT\"></a>安装 NexT</h3><ul>\n<li><p>下载主题<br>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd your-hexo-site</span><br><span class=\"line\">$ git clone https:<span class=\"comment\">//github.com/iissnan/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启用主题<br>打开站点配置文件_config.yml<br><code>theme: next</code></p>\n</li>\n<li>验证主题<br>验证相关配置是否正确：<br><code>hexo s --debug</code><br>提示：<br>INFO  Hexo is running at <a href=\"http://0.0.0.0:4000/\" target=\"_blank\" rel=\"noopener\">http://0.0.0.0:4000/</a>. Press Ctrl+C to stop.<br>此时即可使用浏览器访问 <a href=\"http://localhost:4000，检查站点是否正确运行。\" target=\"_blank\" rel=\"noopener\">http://localhost:4000，检查站点是否正确运行。</a></li>\n</ul>\n<h3 id=\"NexT-主题设定\"><a href=\"#NexT-主题设定\" class=\"headerlink\" title=\"NexT 主题设定\"></a>NexT 主题设定</h3><ul>\n<li>选择风格 Scheme</li>\n<li>设置 界面语言</li>\n<li>设置 菜单</li>\n<li>设置 侧边栏</li>\n<li>设置 头像</li>\n<li>设置 作者昵称</li>\n<li>设置 站点描述</li>\n</ul>\n<h3 id=\"NexT-集成常用的第三方服务\"><a href=\"#NexT-集成常用的第三方服务\" class=\"headerlink\" title=\"NexT 集成常用的第三方服务\"></a>NexT 集成常用的第三方服务</h3><ul>\n<li>百度统计</li>\n<li>阅读次数统计（LeanCloud）</li>\n<li>Algolia 搜索</li>\n</ul>\n<h3 id=\"其他的设置和三方插件服务引入\"><a href=\"#其他的设置和三方插件服务引入\" class=\"headerlink\" title=\"其他的设置和三方插件服务引入\"></a>其他的设置和三方插件服务引入</h3><p>其他的设置和三方插件服务引入，官方没有或遇到了一些坑，后面再单独写博文记录。</p>\n<h2 id=\"常用hexo命令\"><a href=\"#常用hexo命令\" class=\"headerlink\" title=\"常用hexo命令\"></a>常用hexo命令</h2><p>常见命令：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"postName\"</span> #新建文章</span><br><span class=\"line\">hexo new page <span class=\"string\">\"pageName\"</span> #新建页面</span><br><span class=\"line\">hexo generate #生成静态页面至<span class=\"keyword\">public</span>目录</span><br><span class=\"line\">hexo server #开启预览访问端口（默认端口<span class=\"number\">4000</span>，'ctrl + <span class=\"built_in\">c</span>'关闭server）</span><br><span class=\"line\">hexo deploy #部署到<span class=\"type\">GitHub</span></span><br><span class=\"line\">hexo help  # 查看帮助</span><br><span class=\"line\">hexo version  #查看<span class=\"type\">Hexo</span>的版本</span><br></pre></td></tr></table></figure>\n<p>缩写：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n == hexo new</span><br><span class=\"line\">hexo g == hexo generate</span><br><span class=\"line\">hexo s == hexo server</span><br><span class=\"line\">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>\n<p>组合命令：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s -g #生成并本地预览</span><br><span class=\"line\">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure>\n<h2 id=\"发布到-github\"><a href=\"#发布到-github\" class=\"headerlink\" title=\"发布到 github\"></a>发布到 github</h2><p>将上面hexo新建的项目里的所有文件复制到 username.github.io(从 github 上的 username.github.io 项目的 gh-dev 分支上 clone 下来项目)里，</p>\n<p>首先，ssh key肯定要配置好。<br>其次，配置_config.yml中有关deploy的部分。<br>默认生成的_config.yml：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"type\">Deployment</span></span><br><span class=\"line\">## <span class=\"type\">Docs</span>: http:<span class=\"comment\">//hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type:</span><br></pre></td></tr></table></figure>\n<p>修改后的_config.yml：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  #对应仓库的<span class=\"type\">SSH</span>地址（可以在<span class=\"type\">GitHub</span>对应的仓库中复制）</span><br><span class=\"line\">  repo: git@github.com:woaiwojia321314/woaiwojia321314.github.io.git </span><br><span class=\"line\">  #（分支：<span class=\"type\">User</span> <span class=\"type\">Pages</span>为master，<span class=\"type\">Project</span> <span class=\"type\">Pages</span>为gh-pages）</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>为了能够使Hexo部署到GitHub上，需要安装一个插件：<br><code>$ npm install hexo-deployer-git --save</code></p>\n<p>然后，本地预览博客正常后，用git命令或github桌面端提交源码到 gh-dev 分支；用hexo deploy命令发布生成后的HTML代码到 master 分支上。<br>执行下列指令即可完成部署：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>之后，可以通过在浏览器键入：username.github.io进行浏览，开心吧~</p>\n<h2 id=\"部署与管理\"><a href=\"#部署与管理\" class=\"headerlink\" title=\"部署与管理\"></a>部署与管理</h2><h3 id=\"我的博客搭建流程\"><a href=\"#我的博客搭建流程\" class=\"headerlink\" title=\"我的博客搭建流程\"></a>我的博客搭建流程</h3><ol>\n<li>创建仓库：<code>woaiwojia321314.github.io</code> ；</li>\n<li>创建两个分支：master 与 gh-dev ；</li>\n<li>设置 gh-dev 为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；</li>\n<li>clone项目：github 桌面端或使用<code>git clone git@github.com:woaiwojia321314/woaiwojia321314.github.io.git</code>拷贝仓库；</li>\n<li>在本地 <code>woaiwojia321314.github.io</code> 文件夹下通过 Git bash 依次执行 npm install hexo-cli、hexo init、npm install 和 npm install hexo-deployer- git（此时当前分支应显示为 gh-dev ）;</li>\n<li>修改 _config.yml 中的 deploy 参数，分支应为 master , 这样就能保证发布代码发布到 master 分支上；</li>\n<li>依次执行git add .、git commit -m “…”、git push origin hexo提交网站相关的文件，或者用 github 桌面端提交项目源码；<br>执行hexo generate -d生成网站并部署到GitHub上。（git命令提交或github桌面端提交源码到 gh-dev ; hexo deploy 命令提交生成HTML文件到 master 分支）<br>这样一来，在 GitHub 上的 <code>woaiwojia321314.github.io</code> 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美( •̀ ω •́ )y！</li>\n</ol>\n<h3 id=\"我的博客管理流程\"><a href=\"#我的博客管理流程\" class=\"headerlink\" title=\"我的博客管理流程\"></a>我的博客管理流程</h3><h4 id=\"日常修改\"><a href=\"#日常修改\" class=\"headerlink\" title=\"日常修改\"></a>日常修改</h4><p>在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理：</p>\n<ol>\n<li>依次执行 git add .、git commit -m “…”、git push origin hexo指令将改动推送到GitHub（此时当前分支应为 gh-dev ）；</li>\n<li>然后才执行hexo generate -d发布网站到 master 分支上。<br>虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的（例如突然死机要重装了，悲催….的情况，调转顺序就有问题了）。</li>\n</ol>\n<h4 id=\"本地资料丢失\"><a href=\"#本地资料丢失\" class=\"headerlink\" title=\"本地资料丢失\"></a>本地资料丢失</h4><p>当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：</p>\n<ol>\n<li>clone项目：github桌面端 或 使用 <code>git clone git@github.com:woaiwojia321314/woaiwojia321314.github.io.git</code> 拷贝仓库（默认分支为 gh-dev）；</li>\n<li>在本地新拷贝的 woaiwojia321314.github.io 文件夹下通过 Git bash 依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git（记得，不需要hexo init这条指令）。</li>\n</ol>\n<h2 id=\"保留CNAME、README-md等文件\"><a href=\"#保留CNAME、README-md等文件\" class=\"headerlink\" title=\"保留CNAME、README.md等文件\"></a>保留CNAME、README.md等文件</h2><ul>\n<li>CNAME、README.md、favicon.ico等文件放在source目录下。<br>因为每次md转化为html时都会清空public文件夹，包括放在该目录下的CNAME、README.md、favicon.ico等等文件，放在source目录下，转化时会一起拿过去的。<br>CNAME文件内容； <code>www.misssfli.com</code></li>\n<li>项目根目录：gitignore文件内容：<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"type\">DS_Store</span></span><br><span class=\"line\"><span class=\"type\">Thumbs</span>.db</span><br><span class=\"line\">db.json</span><br><span class=\"line\">*.log</span><br><span class=\"line\">node_modules/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more\" target=\"_blank\" rel=\"noopener\">GitHub Pages + Hexo搭建博客</a></li>\n<li><a href=\"https://www.jianshu.com/p/05289a4bc8b2\" target=\"_blank\" rel=\"noopener\">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>\n<li><a href=\"http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html\" target=\"_blank\" rel=\"noopener\">使用hexo+github搭建免费个人博客详细教程</a></li>\n<li><a href=\"https://www.jianshu.com/p/189fd945f38f\" target=\"_blank\" rel=\"noopener\">搭建个人博客-hexo+github详细完整步骤</a></li>\n</ul>"},{"layout":"pages","title":"Hexo NexT主题添加点击爱心效果","date":"2018-05-27T04:00:00.000Z","_content":"\n非原创，文章出处：https://asdfv1929.github.io/2018/01/26/click-love/ 。\n给NexT主题内添加页面点击出现爱心的效果\n<!-- more -->\n\n## 创建js文件\n在`/themes/next/source/js/src`下新建文件 clicklove.js ，接着把该[链接](http://7u2ss1.com1.z0.glb.clouddn.com/love.js)下的代码拷贝粘贴到 clicklove.js 文件中。\n代码如下：\n```swift\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n\n## 修改_layout.swig\n在`\\themes\\next\\layout\\_layout.swig`文件末尾添加：\n```swift\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/src/clicklove.js\"></script>\n```","source":"_posts/github-hexo-next-02.md","raw":"---\nlayout: pages\ntitle: Hexo NexT主题添加点击爱心效果\ndate: 2018-05-27 12:00:00\ncategories:\n- Hexo\ntags:\n- Hexo\n- NexT\n---\n\n非原创，文章出处：https://asdfv1929.github.io/2018/01/26/click-love/ 。\n给NexT主题内添加页面点击出现爱心的效果\n<!-- more -->\n\n## 创建js文件\n在`/themes/next/source/js/src`下新建文件 clicklove.js ，接着把该[链接](http://7u2ss1.com1.z0.glb.clouddn.com/love.js)下的代码拷贝粘贴到 clicklove.js 文件中。\n代码如下：\n```swift\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n\n## 修改_layout.swig\n在`\\themes\\next\\layout\\_layout.swig`文件末尾添加：\n```swift\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/src/clicklove.js\"></script>\n```","slug":"github-hexo-next-02","published":1,"updated":"2018-05-27T04:26:41.336Z","comments":1,"photos":[],"link":"","_id":"cji0ejm1h0006g4l11mukt0w5","content":"<p>非原创，文章出处：<a href=\"https://asdfv1929.github.io/2018/01/26/click-love/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/01/26/click-love/</a> 。<br>给NexT主题内添加页面点击出现爱心的效果<br><a id=\"more\"></a></p>\n<h2 id=\"创建js文件\"><a href=\"#创建js文件\" class=\"headerlink\" title=\"创建js文件\"></a>创建js文件</h2><p>在<code>/themes/next/source/js/src</code>下新建文件 clicklove.js ，接着把该<a href=\"http://7u2ss1.com1.z0.glb.clouddn.com/love.js\" target=\"_blank\" rel=\"noopener\">链接</a>下的代码拷贝粘贴到 clicklove.js 文件中。<br>代码如下：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;<span class=\"built_in\">c</span>(<span class=\"string\">\".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;\"</span>),o(),r()&#125;function r()&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> e=<span class=\"number\">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class=\"number\">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class=\"number\">1</span>)):(d[e].y--,d[e].scale+=.<span class=\"number\">004</span>,d[e].alpha-=.<span class=\"number\">013</span>,d[e].el.style.cssText=<span class=\"string\">\"left:\"</span>+d[e].x+<span class=\"string\">\"px;top:\"</span>+d[e].y+<span class=\"string\">\"px;opacity:\"</span>+d[e].alpha+<span class=\"string\">\";transform:scale(\"</span>+d[e].scale+<span class=\"string\">\",\"</span>+d[e].scale+<span class=\"string\">\") rotate(45deg);background:\"</span>+d[e].color+<span class=\"string\">\";z-index:99999\"</span>);requestAnimationFrame(r)&#125;function o()&#123;<span class=\"keyword\">var</span> t=<span class=\"string\">\"function\"</span>==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">\"div\"</span>);a.className=<span class=\"string\">\"heart\"</span>,d.push(&#123;el:a,x:e.clientX-<span class=\"number\">5</span>,y:e.clientY-<span class=\"number\">5</span>,scale:<span class=\"number\">1</span>,alpha:<span class=\"number\">1</span>,color:s()&#125;),t.body.appendChild(a)&#125;function <span class=\"built_in\">c</span>(e)&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">\"style\"</span>);a.type=<span class=\"string\">\"text/css\"</span>;<span class=\"keyword\">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class=\"keyword\">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class=\"string\">\"head\"</span>)[<span class=\"number\">0</span>].appendChild(a)&#125;function s()&#123;<span class=\"keyword\">return</span><span class=\"string\">\"rgb(\"</span>+~~(<span class=\"number\">255</span>*<span class=\"type\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"type\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"type\">Math</span>.random())+<span class=\"string\">\")\"</span>&#125;<span class=\"keyword\">var</span> d=[];e.requestAnimationFrame=function()&#123;<span class=\"keyword\">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/<span class=\"number\">60</span>)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"修改-layout-swig\"><a href=\"#修改-layout-swig\" class=\"headerlink\" title=\"修改_layout.swig\"></a>修改_layout.swig</h2><p>在<code>\\themes\\next\\layout\\_layout.swig</code>文件末尾添加：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"/js/src/clicklove.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>非原创，文章出处：<a href=\"https://asdfv1929.github.io/2018/01/26/click-love/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/01/26/click-love/</a> 。<br>给NexT主题内添加页面点击出现爱心的效果<br>","more":"</p>\n<h2 id=\"创建js文件\"><a href=\"#创建js文件\" class=\"headerlink\" title=\"创建js文件\"></a>创建js文件</h2><p>在<code>/themes/next/source/js/src</code>下新建文件 clicklove.js ，接着把该<a href=\"http://7u2ss1.com1.z0.glb.clouddn.com/love.js\" target=\"_blank\" rel=\"noopener\">链接</a>下的代码拷贝粘贴到 clicklove.js 文件中。<br>代码如下：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;<span class=\"built_in\">c</span>(<span class=\"string\">\".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;\"</span>),o(),r()&#125;function r()&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> e=<span class=\"number\">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class=\"number\">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class=\"number\">1</span>)):(d[e].y--,d[e].scale+=.<span class=\"number\">004</span>,d[e].alpha-=.<span class=\"number\">013</span>,d[e].el.style.cssText=<span class=\"string\">\"left:\"</span>+d[e].x+<span class=\"string\">\"px;top:\"</span>+d[e].y+<span class=\"string\">\"px;opacity:\"</span>+d[e].alpha+<span class=\"string\">\";transform:scale(\"</span>+d[e].scale+<span class=\"string\">\",\"</span>+d[e].scale+<span class=\"string\">\") rotate(45deg);background:\"</span>+d[e].color+<span class=\"string\">\";z-index:99999\"</span>);requestAnimationFrame(r)&#125;function o()&#123;<span class=\"keyword\">var</span> t=<span class=\"string\">\"function\"</span>==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">\"div\"</span>);a.className=<span class=\"string\">\"heart\"</span>,d.push(&#123;el:a,x:e.clientX-<span class=\"number\">5</span>,y:e.clientY-<span class=\"number\">5</span>,scale:<span class=\"number\">1</span>,alpha:<span class=\"number\">1</span>,color:s()&#125;),t.body.appendChild(a)&#125;function <span class=\"built_in\">c</span>(e)&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">\"style\"</span>);a.type=<span class=\"string\">\"text/css\"</span>;<span class=\"keyword\">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class=\"keyword\">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class=\"string\">\"head\"</span>)[<span class=\"number\">0</span>].appendChild(a)&#125;function s()&#123;<span class=\"keyword\">return</span><span class=\"string\">\"rgb(\"</span>+~~(<span class=\"number\">255</span>*<span class=\"type\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"type\">Math</span>.random())+<span class=\"string\">\",\"</span>+~~(<span class=\"number\">255</span>*<span class=\"type\">Math</span>.random())+<span class=\"string\">\")\"</span>&#125;<span class=\"keyword\">var</span> d=[];e.requestAnimationFrame=function()&#123;<span class=\"keyword\">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/<span class=\"number\">60</span>)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"修改-layout-swig\"><a href=\"#修改-layout-swig\" class=\"headerlink\" title=\"修改_layout.swig\"></a>修改_layout.swig</h2><p>在<code>\\themes\\next\\layout\\_layout.swig</code>文件末尾添加：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"/js/src/clicklove.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>"},{"layout":"pages","title":"Github 域名绑定","date":"2018-05-23T12:38:08.000Z","_content":"\n利用 Github pages 搭建静态网页项目时，Github 提个一个和用户名有关的免费域名：username.github.io 。当然如果你不满意，而自己又有个常见格式的域名（.com，.cn等等），那么绑定在一起呢。我是去[godaddy](https://sg.godaddy.com/zh/)购买的域名，据说域名服务商解析比较慢，所以采用了国内的[DNSPod](https://www.dnspod.cn/)\n来做域名解析，然后把域名的NS服务器指向 DNSPod。\n<!-- more -->\n\n## 获得域名 Godaddy \n首先你要注册一个域名，域名注册可以去去[godaddy](https://sg.godaddy.com/zh/)， 也可以去国内的阿里云，万维网等等。我是去 godaddy 购买的域名（www.missfli.com）。可以参考[此文](https://www.jianshu.com/p/05289a4bc8b2)的购买域名步骤。\n\n绑定域名分2种情况：带www和不带www的。\n域名解析配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录。\n所以，你就有：购买的域名，github 提供的免费域名，和 github 免费域名IP。\n\n## 在 DNSPod 上添加域名\n登录进 DNSPod 的控制界面：\n**域名解析 -->添加域名-->输入域名-->确定。**\n这样就添加了一个域名到 DNSPod 了。\n*（注意：输入域名时，不要带www）*\n![3.png](https://upload-images.jianshu.io/upload_images/1464420-5bf2b3e12531a1f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n添加好之后，需要为域名设置各种参数，如A记录，NS地址等。\n点击刚才添加的这个域名，进入域名设置界面。在这里，你可以看到DNSPOD已经为你提供了2个NS（Name Server）地址，你需要把这2个地址，在GoDaddy后台控制面板中进行设置（后面会讲）。\n![4.png](https://upload-images.jianshu.io/upload_images/1464420-34c5262413c2694f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## DNSPod 设置域名参数\n然后将 github 提供的域名和 IP 添加进来，注意看它的规则介绍。\n域名配置最常见有2种方式，CNAME 和 A 记录，CNAME 填写域名，A记录填写 IP ，由于不带 www 方式只能采用A记录，所以必须先 ping 一下`你的用户名.github.io`的IP，将A记录指向你ping出来的IP，将 CNAME 指向`你的用户名.github.io`，这样可以保证无论是否添加www都可以访问，如下：\n![5.png](https://upload-images.jianshu.io/upload_images/1464420-05e8cbfd8c10ddef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好。\n\n## Godaddy 配置\n由于配置了有些久了，截图没有了，就用别人的了。\n由于你的域名是在GoDaddy上注册的，也就是说，GoDaddy是该域名的托管商。因此，需要到GoDaddy的控制面板，指定域名的NS服务器。\n既然我们打算使用DNSPOD来解析域名，因此，在GoDaddy控制面板就需要把域名的NS设置为DNSPOD提供的地址。在上面第二步中，DNSPOD已经提供了2个NS地址，我们只需要把这2个地址添加到GoDaddy域名NS即可。\n\n进入GoDaddy域名控制面板（登录后，在“My Account”模块下面），目光移向“Nameservers”区域，在该区域有一个“Set Nameservers”链接。这里就是设置域名NS的入口了，如图片五所示。\n\n点击“Set Nameservers”链接，GoDaddy会弹出一个Nameservers设置界面，如图片六所示。在这个设置界面，选择“I have specific nameservers for my domains”单选按钮，在下面的文本框中，输入DNSPOD所提供的2个NS地址，设置好之后，点击【OK】，大功告成！\n\n这个时候，你只需要泡上一杯咖啡，等待10-15分钟，域名解析就能够生效啦！\n![6.png](https://upload-images.jianshu.io/upload_images/1464420-0dab1206da30d31d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n配置完后，查看域名相关信息：\n![2.png](https://upload-images.jianshu.io/upload_images/1464420-765af381a2df0a61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 总结\n大致步骤：\n* Godaddy上购买域名：www.missfli.com 。\n* github 上的 `woaiwojia321314.github.io` 域名和该域名的  IP，并在该 `xxx.github.io`项目库的根目录，新建个CNAME文件，里面添加上购买的域名 www.missfli.com  。\n* DNSPod 上配置：添加购买域名(www.missfli.com)，然后添加`woaiwojia321314.github.io`和该域名IP。\n* Godaddy 上配置：DNSPOD提供的2个NS地址配置到 Godaddy 上。\n\n\n#### 参考\n* [怎样将Godaddy域名解析到DNSPOD](https://jingyan.baidu.com/article/39810a23c5a3a3b636fda699.html)\n* [github怎么绑定自己的域名？](https://www.zhihu.com/question/31377141)\n\n\n","source":"_posts/github-addon-domain.md","raw":"---\nlayout: pages\ntitle: Github 域名绑定\ndate: 2018-05-23 20:38:08\ntags:\n- Github\n- Godaddy\n- DNSPod\n- 域名\n---\n\n利用 Github pages 搭建静态网页项目时，Github 提个一个和用户名有关的免费域名：username.github.io 。当然如果你不满意，而自己又有个常见格式的域名（.com，.cn等等），那么绑定在一起呢。我是去[godaddy](https://sg.godaddy.com/zh/)购买的域名，据说域名服务商解析比较慢，所以采用了国内的[DNSPod](https://www.dnspod.cn/)\n来做域名解析，然后把域名的NS服务器指向 DNSPod。\n<!-- more -->\n\n## 获得域名 Godaddy \n首先你要注册一个域名，域名注册可以去去[godaddy](https://sg.godaddy.com/zh/)， 也可以去国内的阿里云，万维网等等。我是去 godaddy 购买的域名（www.missfli.com）。可以参考[此文](https://www.jianshu.com/p/05289a4bc8b2)的购买域名步骤。\n\n绑定域名分2种情况：带www和不带www的。\n域名解析配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录。\n所以，你就有：购买的域名，github 提供的免费域名，和 github 免费域名IP。\n\n## 在 DNSPod 上添加域名\n登录进 DNSPod 的控制界面：\n**域名解析 -->添加域名-->输入域名-->确定。**\n这样就添加了一个域名到 DNSPod 了。\n*（注意：输入域名时，不要带www）*\n![3.png](https://upload-images.jianshu.io/upload_images/1464420-5bf2b3e12531a1f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n添加好之后，需要为域名设置各种参数，如A记录，NS地址等。\n点击刚才添加的这个域名，进入域名设置界面。在这里，你可以看到DNSPOD已经为你提供了2个NS（Name Server）地址，你需要把这2个地址，在GoDaddy后台控制面板中进行设置（后面会讲）。\n![4.png](https://upload-images.jianshu.io/upload_images/1464420-34c5262413c2694f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## DNSPod 设置域名参数\n然后将 github 提供的域名和 IP 添加进来，注意看它的规则介绍。\n域名配置最常见有2种方式，CNAME 和 A 记录，CNAME 填写域名，A记录填写 IP ，由于不带 www 方式只能采用A记录，所以必须先 ping 一下`你的用户名.github.io`的IP，将A记录指向你ping出来的IP，将 CNAME 指向`你的用户名.github.io`，这样可以保证无论是否添加www都可以访问，如下：\n![5.png](https://upload-images.jianshu.io/upload_images/1464420-05e8cbfd8c10ddef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好。\n\n## Godaddy 配置\n由于配置了有些久了，截图没有了，就用别人的了。\n由于你的域名是在GoDaddy上注册的，也就是说，GoDaddy是该域名的托管商。因此，需要到GoDaddy的控制面板，指定域名的NS服务器。\n既然我们打算使用DNSPOD来解析域名，因此，在GoDaddy控制面板就需要把域名的NS设置为DNSPOD提供的地址。在上面第二步中，DNSPOD已经提供了2个NS地址，我们只需要把这2个地址添加到GoDaddy域名NS即可。\n\n进入GoDaddy域名控制面板（登录后，在“My Account”模块下面），目光移向“Nameservers”区域，在该区域有一个“Set Nameservers”链接。这里就是设置域名NS的入口了，如图片五所示。\n\n点击“Set Nameservers”链接，GoDaddy会弹出一个Nameservers设置界面，如图片六所示。在这个设置界面，选择“I have specific nameservers for my domains”单选按钮，在下面的文本框中，输入DNSPOD所提供的2个NS地址，设置好之后，点击【OK】，大功告成！\n\n这个时候，你只需要泡上一杯咖啡，等待10-15分钟，域名解析就能够生效啦！\n![6.png](https://upload-images.jianshu.io/upload_images/1464420-0dab1206da30d31d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n配置完后，查看域名相关信息：\n![2.png](https://upload-images.jianshu.io/upload_images/1464420-765af381a2df0a61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 总结\n大致步骤：\n* Godaddy上购买域名：www.missfli.com 。\n* github 上的 `woaiwojia321314.github.io` 域名和该域名的  IP，并在该 `xxx.github.io`项目库的根目录，新建个CNAME文件，里面添加上购买的域名 www.missfli.com  。\n* DNSPod 上配置：添加购买域名(www.missfli.com)，然后添加`woaiwojia321314.github.io`和该域名IP。\n* Godaddy 上配置：DNSPOD提供的2个NS地址配置到 Godaddy 上。\n\n\n#### 参考\n* [怎样将Godaddy域名解析到DNSPOD](https://jingyan.baidu.com/article/39810a23c5a3a3b636fda699.html)\n* [github怎么绑定自己的域名？](https://www.zhihu.com/question/31377141)\n\n\n","slug":"github-addon-domain","published":1,"updated":"2018-05-29T09:01:33.794Z","comments":1,"photos":[],"link":"","_id":"cji0ejm1o000ag4l10m2w15aq","content":"<p>利用 Github pages 搭建静态网页项目时，Github 提个一个和用户名有关的免费域名：username.github.io 。当然如果你不满意，而自己又有个常见格式的域名（.com，.cn等等），那么绑定在一起呢。我是去<a href=\"https://sg.godaddy.com/zh/\" target=\"_blank\" rel=\"noopener\">godaddy</a>购买的域名，据说域名服务商解析比较慢，所以采用了国内的<a href=\"https://www.dnspod.cn/\" target=\"_blank\" rel=\"noopener\">DNSPod</a><br>来做域名解析，然后把域名的NS服务器指向 DNSPod。<br><a id=\"more\"></a></p>\n<h2 id=\"获得域名-Godaddy\"><a href=\"#获得域名-Godaddy\" class=\"headerlink\" title=\"获得域名 Godaddy\"></a>获得域名 Godaddy</h2><p>首先你要注册一个域名，域名注册可以去去<a href=\"https://sg.godaddy.com/zh/\" target=\"_blank\" rel=\"noopener\">godaddy</a>， 也可以去国内的阿里云，万维网等等。我是去 godaddy 购买的域名（<a href=\"http://www.missfli.com）。可以参考[此文](https://www.jianshu.com/p/05289a4bc8b2)的购买域名步骤。\" target=\"_blank\" rel=\"noopener\">www.missfli.com）。可以参考[此文](https://www.jianshu.com/p/05289a4bc8b2)的购买域名步骤。</a></p>\n<p>绑定域名分2种情况：带www和不带www的。<br>域名解析配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录。<br>所以，你就有：购买的域名，github 提供的免费域名，和 github 免费域名IP。</p>\n<h2 id=\"在-DNSPod-上添加域名\"><a href=\"#在-DNSPod-上添加域名\" class=\"headerlink\" title=\"在 DNSPod 上添加域名\"></a>在 DNSPod 上添加域名</h2><p>登录进 DNSPod 的控制界面：<br><strong>域名解析 –&gt;添加域名–&gt;输入域名–&gt;确定。</strong><br>这样就添加了一个域名到 DNSPod 了。<br><em>（注意：输入域名时，不要带www）</em><br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-5bf2b3e12531a1f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"3.png\"></p>\n<p>添加好之后，需要为域名设置各种参数，如A记录，NS地址等。<br>点击刚才添加的这个域名，进入域名设置界面。在这里，你可以看到DNSPOD已经为你提供了2个NS（Name Server）地址，你需要把这2个地址，在GoDaddy后台控制面板中进行设置（后面会讲）。<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-34c5262413c2694f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"4.png\"></p>\n<h2 id=\"DNSPod-设置域名参数\"><a href=\"#DNSPod-设置域名参数\" class=\"headerlink\" title=\"DNSPod 设置域名参数\"></a>DNSPod 设置域名参数</h2><p>然后将 github 提供的域名和 IP 添加进来，注意看它的规则介绍。<br>域名配置最常见有2种方式，CNAME 和 A 记录，CNAME 填写域名，A记录填写 IP ，由于不带 www 方式只能采用A记录，所以必须先 ping 一下<code>你的用户名.github.io</code>的IP，将A记录指向你ping出来的IP，将 CNAME 指向<code>你的用户名.github.io</code>，这样可以保证无论是否添加www都可以访问，如下：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-05e8cbfd8c10ddef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"5.png\"></p>\n<p>然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好。</p>\n<h2 id=\"Godaddy-配置\"><a href=\"#Godaddy-配置\" class=\"headerlink\" title=\"Godaddy 配置\"></a>Godaddy 配置</h2><p>由于配置了有些久了，截图没有了，就用别人的了。<br>由于你的域名是在GoDaddy上注册的，也就是说，GoDaddy是该域名的托管商。因此，需要到GoDaddy的控制面板，指定域名的NS服务器。<br>既然我们打算使用DNSPOD来解析域名，因此，在GoDaddy控制面板就需要把域名的NS设置为DNSPOD提供的地址。在上面第二步中，DNSPOD已经提供了2个NS地址，我们只需要把这2个地址添加到GoDaddy域名NS即可。</p>\n<p>进入GoDaddy域名控制面板（登录后，在“My Account”模块下面），目光移向“Nameservers”区域，在该区域有一个“Set Nameservers”链接。这里就是设置域名NS的入口了，如图片五所示。</p>\n<p>点击“Set Nameservers”链接，GoDaddy会弹出一个Nameservers设置界面，如图片六所示。在这个设置界面，选择“I have specific nameservers for my domains”单选按钮，在下面的文本框中，输入DNSPOD所提供的2个NS地址，设置好之后，点击【OK】，大功告成！</p>\n<p>这个时候，你只需要泡上一杯咖啡，等待10-15分钟，域名解析就能够生效啦！<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-0dab1206da30d31d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"6.png\"><br>配置完后，查看域名相关信息：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-765af381a2df0a61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"2.png\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>大致步骤：</p>\n<ul>\n<li>Godaddy上购买域名：<a href=\"http://www.missfli.com\" target=\"_blank\" rel=\"noopener\">www.missfli.com</a> 。</li>\n<li>github 上的 <code>woaiwojia321314.github.io</code> 域名和该域名的  IP，并在该 <code>xxx.github.io</code>项目库的根目录，新建个CNAME文件，里面添加上购买的域名 <a href=\"http://www.missfli.com\" target=\"_blank\" rel=\"noopener\">www.missfli.com</a>  。</li>\n<li>DNSPod 上配置：添加购买域名(<a href=\"http://www.missfli.com)，然后添加`woaiwojia321314.github.io`和该域名IP。\" target=\"_blank\" rel=\"noopener\">www.missfli.com)，然后添加`woaiwojia321314.github.io`和该域名IP。</a></li>\n<li>Godaddy 上配置：DNSPOD提供的2个NS地址配置到 Godaddy 上。</li>\n</ul>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://jingyan.baidu.com/article/39810a23c5a3a3b636fda699.html\" target=\"_blank\" rel=\"noopener\">怎样将Godaddy域名解析到DNSPOD</a></li>\n<li><a href=\"https://www.zhihu.com/question/31377141\" target=\"_blank\" rel=\"noopener\">github怎么绑定自己的域名？</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>利用 Github pages 搭建静态网页项目时，Github 提个一个和用户名有关的免费域名：username.github.io 。当然如果你不满意，而自己又有个常见格式的域名（.com，.cn等等），那么绑定在一起呢。我是去<a href=\"https://sg.godaddy.com/zh/\" target=\"_blank\" rel=\"noopener\">godaddy</a>购买的域名，据说域名服务商解析比较慢，所以采用了国内的<a href=\"https://www.dnspod.cn/\" target=\"_blank\" rel=\"noopener\">DNSPod</a><br>来做域名解析，然后把域名的NS服务器指向 DNSPod。<br>","more":"</p>\n<h2 id=\"获得域名-Godaddy\"><a href=\"#获得域名-Godaddy\" class=\"headerlink\" title=\"获得域名 Godaddy\"></a>获得域名 Godaddy</h2><p>首先你要注册一个域名，域名注册可以去去<a href=\"https://sg.godaddy.com/zh/\" target=\"_blank\" rel=\"noopener\">godaddy</a>， 也可以去国内的阿里云，万维网等等。我是去 godaddy 购买的域名（<a href=\"http://www.missfli.com）。可以参考[此文](https://www.jianshu.com/p/05289a4bc8b2)的购买域名步骤。\" target=\"_blank\" rel=\"noopener\">www.missfli.com）。可以参考[此文](https://www.jianshu.com/p/05289a4bc8b2)的购买域名步骤。</a></p>\n<p>绑定域名分2种情况：带www和不带www的。<br>域名解析配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录。<br>所以，你就有：购买的域名，github 提供的免费域名，和 github 免费域名IP。</p>\n<h2 id=\"在-DNSPod-上添加域名\"><a href=\"#在-DNSPod-上添加域名\" class=\"headerlink\" title=\"在 DNSPod 上添加域名\"></a>在 DNSPod 上添加域名</h2><p>登录进 DNSPod 的控制界面：<br><strong>域名解析 –&gt;添加域名–&gt;输入域名–&gt;确定。</strong><br>这样就添加了一个域名到 DNSPod 了。<br><em>（注意：输入域名时，不要带www）</em><br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-5bf2b3e12531a1f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"3.png\"></p>\n<p>添加好之后，需要为域名设置各种参数，如A记录，NS地址等。<br>点击刚才添加的这个域名，进入域名设置界面。在这里，你可以看到DNSPOD已经为你提供了2个NS（Name Server）地址，你需要把这2个地址，在GoDaddy后台控制面板中进行设置（后面会讲）。<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-34c5262413c2694f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"4.png\"></p>\n<h2 id=\"DNSPod-设置域名参数\"><a href=\"#DNSPod-设置域名参数\" class=\"headerlink\" title=\"DNSPod 设置域名参数\"></a>DNSPod 设置域名参数</h2><p>然后将 github 提供的域名和 IP 添加进来，注意看它的规则介绍。<br>域名配置最常见有2种方式，CNAME 和 A 记录，CNAME 填写域名，A记录填写 IP ，由于不带 www 方式只能采用A记录，所以必须先 ping 一下<code>你的用户名.github.io</code>的IP，将A记录指向你ping出来的IP，将 CNAME 指向<code>你的用户名.github.io</code>，这样可以保证无论是否添加www都可以访问，如下：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-05e8cbfd8c10ddef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"5.png\"></p>\n<p>然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好。</p>\n<h2 id=\"Godaddy-配置\"><a href=\"#Godaddy-配置\" class=\"headerlink\" title=\"Godaddy 配置\"></a>Godaddy 配置</h2><p>由于配置了有些久了，截图没有了，就用别人的了。<br>由于你的域名是在GoDaddy上注册的，也就是说，GoDaddy是该域名的托管商。因此，需要到GoDaddy的控制面板，指定域名的NS服务器。<br>既然我们打算使用DNSPOD来解析域名，因此，在GoDaddy控制面板就需要把域名的NS设置为DNSPOD提供的地址。在上面第二步中，DNSPOD已经提供了2个NS地址，我们只需要把这2个地址添加到GoDaddy域名NS即可。</p>\n<p>进入GoDaddy域名控制面板（登录后，在“My Account”模块下面），目光移向“Nameservers”区域，在该区域有一个“Set Nameservers”链接。这里就是设置域名NS的入口了，如图片五所示。</p>\n<p>点击“Set Nameservers”链接，GoDaddy会弹出一个Nameservers设置界面，如图片六所示。在这个设置界面，选择“I have specific nameservers for my domains”单选按钮，在下面的文本框中，输入DNSPOD所提供的2个NS地址，设置好之后，点击【OK】，大功告成！</p>\n<p>这个时候，你只需要泡上一杯咖啡，等待10-15分钟，域名解析就能够生效啦！<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-0dab1206da30d31d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"6.png\"><br>配置完后，查看域名相关信息：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-765af381a2df0a61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"2.png\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>大致步骤：</p>\n<ul>\n<li>Godaddy上购买域名：<a href=\"http://www.missfli.com\" target=\"_blank\" rel=\"noopener\">www.missfli.com</a> 。</li>\n<li>github 上的 <code>woaiwojia321314.github.io</code> 域名和该域名的  IP，并在该 <code>xxx.github.io</code>项目库的根目录，新建个CNAME文件，里面添加上购买的域名 <a href=\"http://www.missfli.com\" target=\"_blank\" rel=\"noopener\">www.missfli.com</a>  。</li>\n<li>DNSPod 上配置：添加购买域名(<a href=\"http://www.missfli.com)，然后添加`woaiwojia321314.github.io`和该域名IP。\" target=\"_blank\" rel=\"noopener\">www.missfli.com)，然后添加`woaiwojia321314.github.io`和该域名IP。</a></li>\n<li>Godaddy 上配置：DNSPOD提供的2个NS地址配置到 Godaddy 上。</li>\n</ul>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://jingyan.baidu.com/article/39810a23c5a3a3b636fda699.html\" target=\"_blank\" rel=\"noopener\">怎样将Godaddy域名解析到DNSPOD</a></li>\n<li><a href=\"https://www.zhihu.com/question/31377141\" target=\"_blank\" rel=\"noopener\">github怎么绑定自己的域名？</a></li>\n</ul>"},{"layout":"pages","title":"Hexo NexT：在文章中嵌入 CodePen或 jsFiddle","date":"2018-05-28T16:30:00.000Z","_content":"建议直接去[博客网站原文](http://www.missfli.com/2018/05/29/github-hexo-next-04.html)看效果，因为简书的markdown不支持此语法的。\n搞 IT 技术的人，写博客有时候需要在博文中展示一些实施的 demo 代码效果，这就涉及到需要在博文中嵌入 CodePen 或 jsFiddle，jsFiddle 有个国内版 [jsrun](http://jsrun.net)，我就做了上面两种尝试，也就不讲其他的了。至于这两款需要翻墙，对于搞 IT 技术的你不算事儿吧。\n\n提一句：需要拿出来做嵌入用的代码，你去你的 demo 页面找`Embed `，中文版的好像叫`嵌入`，里面有下面的嵌入代码的语法需要的参数。\n<!-- more -->\n\n## 在文章中嵌入 CodePen\n去 [Hexo 官方插件页](https://hexo.io/plugins/)搜索`codepen`，然后找到`hexo-codepen`，点过去。\n或者直接[点击此处](https://github.com/maliMirkec/hexo-tag-codepen)。\n里面有文档和示例，大致讲解一下。\n\n### 1.安装\nnpm 安装：\n`$ npm install hexo-codepen --save`\n或 yarn 安装：\n`$ yarn add hexo-codepen`\n\n### 2.用法\n语法结构：\n```swift\n{% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %}\n```\ndeme 链接：\n\n`https://codepen.io/CiTA/pen/bgjKKE`\n\n在 CodePen 里面 Embed 出来的html代码：\n```swift\n<p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bgjKKE\" data-default-tab=\"css,result\" data-user=\"CiTA\" data-embed-version=\"2\" data-pen-title=\"CSS sidebar toggle\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE/\">CSS sidebar toggle</a> by Silvestar Bistrović (<a href=\"https://codepen.io/CiTA\">@CiTA</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n```\n\n参数对应关系：\n\n| 字段  | 值  |\n|:----|:----:|\n| userId  | CiTA |\n| slugHash | bgjKKE |\n| theme | dark |\n| defaultTab | css,result |\n| height | 265 |\n| width | 默认为：100%，此值应根据您的博客主题进行调整 |\n\n示例效果：\n```swift\n#替换参数后的语法：(*设置宽高时不要用%，会导致编译错误*)\n{% codepen CiTA bgjKKE dark [css,result [265]] %}\n```\n运行后的：\n{% codepen CiTA bgjKKE dark [css,result [265]] %}\n\n当然也可以直接嵌入源码（CodePen 中 Embed 出来的代码支持3种格式：WordPress Shortcode、iFrame、HTML） ，也能看到效果，只是这个会带有源码，体验不太好。\n效果如下：\n<p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bgjKKE\" data-default-tab=\"css,result\" data-user=\"CiTA\" data-embed-version=\"2\" data-pen-title=\"CSS sidebar toggle\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE/\">CSS sidebar toggle</a> by Silvestar Bistrović (<a href=\"https://codepen.io/CiTA\">@CiTA</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n## 在文章中嵌入 jsFiddle\n这个就省掉了安装依赖包的步骤了，本来官网也提供了语法，只是没有具体的示例，网上找了半天没资料。就自己参考 CodePen 的方式做了一个逆向推理出来的。\n### 用法\n语法结构（[官网](https://hexo.io/zh-cn/docs/tag-plugins.html#jsFiddle)也就只提供了这个）：(*设置宽高时不要用%，会导致编译错误*)\n```swift\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\ndemo 链接：\n\n`http://jsfiddle.net/AntBody/138zf8kk/?utm_source=website&utm_medium=embed&utm_campaign=138zf8kk`\n\n在文章中嵌入 jsfiddle 。\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n\n然后页面转化后，在浏览器里面开启调试控制台，看到如下图：\n![1111.png](https://upload-images.jianshu.io/upload_images/1464420-cb26867760f7368c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n然后逆推，设置如下：\n```swift\n{% jsfiddle AntBody/138zf8kk js,html,css,result light %}\n```\n运行效果：\n{% jsfiddle AntBody/138zf8kk js,html,css,result light %}\n\n这些参数怎么对应过去的呢？看下图：\n![222.png](https://upload-images.jianshu.io/upload_images/1464420-8199fb368e1040b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n当然同样的，因为 jsfiddle 的Embed code 支持两种方式，也可以引入 iFarme 源码进来，因为本来 Hexo 的语法本来就是编译成 iframe 形式的。\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/AntBody/138zf8kk/embedded/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n另外说明一点，jsfiddle 的 demo 例子代码你得找到 `Emebed`才能看到相关需要的参数，如果找不到，可能就不知道怎么设置了。\n比如 Element UI 的随便一个例子： `https://jsfiddle.net/api/post/library/pure/`，不知道是不是因为没注册账号的原因引起的。（由于我一直用的codepen，就没去捉摸具体原因了。）\n\n## 总结\n\n1. codepen 嵌入\n\n  * 安装：`$ npm install hexo-codepen --save`\n\n  * 使用语法结构：\n\n  ```swift\n  {% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %}\n  ```\n\n  * 找到对应参数，对应过去就行。\n\n2. jsfiddle 嵌入\n\n  * 使用语法结构：\n\n  ```swift\n  {% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n  ```\n\n  * 找到对应参数，对应过去就行。\n\n3. 至于其他的像 dabbet、jsrun、jsbin、runjs 等等就自己去尝试了。\n另外，由于 hexo 解析后都是 iframe 的结果形式，故而可以直接引入 iframe 的代码也行，只是效果体验会差些，毕竟连源码也显示出来了。至于，其他的 js 嵌入或 html+js 嵌入就自己去尝试了。codepen 里面尝试了一下，跟 iframe 引入方式效果一样。","source":"_posts/github-hexo-next-04.md","raw":"---\nlayout: pages\ntitle: Hexo NexT：在文章中嵌入 CodePen或 jsFiddle\ndate: 2018-05-29 00:30:00\ncategories:\n- Hexo\ntags:\n- Hexo\n- CodePen\n- jsFiddle\n---\n建议直接去[博客网站原文](http://www.missfli.com/2018/05/29/github-hexo-next-04.html)看效果，因为简书的markdown不支持此语法的。\n搞 IT 技术的人，写博客有时候需要在博文中展示一些实施的 demo 代码效果，这就涉及到需要在博文中嵌入 CodePen 或 jsFiddle，jsFiddle 有个国内版 [jsrun](http://jsrun.net)，我就做了上面两种尝试，也就不讲其他的了。至于这两款需要翻墙，对于搞 IT 技术的你不算事儿吧。\n\n提一句：需要拿出来做嵌入用的代码，你去你的 demo 页面找`Embed `，中文版的好像叫`嵌入`，里面有下面的嵌入代码的语法需要的参数。\n<!-- more -->\n\n## 在文章中嵌入 CodePen\n去 [Hexo 官方插件页](https://hexo.io/plugins/)搜索`codepen`，然后找到`hexo-codepen`，点过去。\n或者直接[点击此处](https://github.com/maliMirkec/hexo-tag-codepen)。\n里面有文档和示例，大致讲解一下。\n\n### 1.安装\nnpm 安装：\n`$ npm install hexo-codepen --save`\n或 yarn 安装：\n`$ yarn add hexo-codepen`\n\n### 2.用法\n语法结构：\n```swift\n{% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %}\n```\ndeme 链接：\n\n`https://codepen.io/CiTA/pen/bgjKKE`\n\n在 CodePen 里面 Embed 出来的html代码：\n```swift\n<p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bgjKKE\" data-default-tab=\"css,result\" data-user=\"CiTA\" data-embed-version=\"2\" data-pen-title=\"CSS sidebar toggle\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE/\">CSS sidebar toggle</a> by Silvestar Bistrović (<a href=\"https://codepen.io/CiTA\">@CiTA</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n```\n\n参数对应关系：\n\n| 字段  | 值  |\n|:----|:----:|\n| userId  | CiTA |\n| slugHash | bgjKKE |\n| theme | dark |\n| defaultTab | css,result |\n| height | 265 |\n| width | 默认为：100%，此值应根据您的博客主题进行调整 |\n\n示例效果：\n```swift\n#替换参数后的语法：(*设置宽高时不要用%，会导致编译错误*)\n{% codepen CiTA bgjKKE dark [css,result [265]] %}\n```\n运行后的：\n{% codepen CiTA bgjKKE dark [css,result [265]] %}\n\n当然也可以直接嵌入源码（CodePen 中 Embed 出来的代码支持3种格式：WordPress Shortcode、iFrame、HTML） ，也能看到效果，只是这个会带有源码，体验不太好。\n效果如下：\n<p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bgjKKE\" data-default-tab=\"css,result\" data-user=\"CiTA\" data-embed-version=\"2\" data-pen-title=\"CSS sidebar toggle\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE/\">CSS sidebar toggle</a> by Silvestar Bistrović (<a href=\"https://codepen.io/CiTA\">@CiTA</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n## 在文章中嵌入 jsFiddle\n这个就省掉了安装依赖包的步骤了，本来官网也提供了语法，只是没有具体的示例，网上找了半天没资料。就自己参考 CodePen 的方式做了一个逆向推理出来的。\n### 用法\n语法结构（[官网](https://hexo.io/zh-cn/docs/tag-plugins.html#jsFiddle)也就只提供了这个）：(*设置宽高时不要用%，会导致编译错误*)\n```swift\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\ndemo 链接：\n\n`http://jsfiddle.net/AntBody/138zf8kk/?utm_source=website&utm_medium=embed&utm_campaign=138zf8kk`\n\n在文章中嵌入 jsfiddle 。\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n\n然后页面转化后，在浏览器里面开启调试控制台，看到如下图：\n![1111.png](https://upload-images.jianshu.io/upload_images/1464420-cb26867760f7368c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n然后逆推，设置如下：\n```swift\n{% jsfiddle AntBody/138zf8kk js,html,css,result light %}\n```\n运行效果：\n{% jsfiddle AntBody/138zf8kk js,html,css,result light %}\n\n这些参数怎么对应过去的呢？看下图：\n![222.png](https://upload-images.jianshu.io/upload_images/1464420-8199fb368e1040b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n当然同样的，因为 jsfiddle 的Embed code 支持两种方式，也可以引入 iFarme 源码进来，因为本来 Hexo 的语法本来就是编译成 iframe 形式的。\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/AntBody/138zf8kk/embedded/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n另外说明一点，jsfiddle 的 demo 例子代码你得找到 `Emebed`才能看到相关需要的参数，如果找不到，可能就不知道怎么设置了。\n比如 Element UI 的随便一个例子： `https://jsfiddle.net/api/post/library/pure/`，不知道是不是因为没注册账号的原因引起的。（由于我一直用的codepen，就没去捉摸具体原因了。）\n\n## 总结\n\n1. codepen 嵌入\n\n  * 安装：`$ npm install hexo-codepen --save`\n\n  * 使用语法结构：\n\n  ```swift\n  {% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %}\n  ```\n\n  * 找到对应参数，对应过去就行。\n\n2. jsfiddle 嵌入\n\n  * 使用语法结构：\n\n  ```swift\n  {% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n  ```\n\n  * 找到对应参数，对应过去就行。\n\n3. 至于其他的像 dabbet、jsrun、jsbin、runjs 等等就自己去尝试了。\n另外，由于 hexo 解析后都是 iframe 的结果形式，故而可以直接引入 iframe 的代码也行，只是效果体验会差些，毕竟连源码也显示出来了。至于，其他的 js 嵌入或 html+js 嵌入就自己去尝试了。codepen 里面尝试了一下，跟 iframe 引入方式效果一样。","slug":"github-hexo-next-04","published":1,"updated":"2018-05-29T01:46:43.561Z","comments":1,"photos":[],"link":"","_id":"cji0ejm1t000bg4l1u0czom7y","content":"<p>建议直接去<a href=\"http://www.missfli.com/2018/05/29/github-hexo-next-04.html\" target=\"_blank\" rel=\"noopener\">博客网站原文</a>看效果，因为简书的markdown不支持此语法的。<br>搞 IT 技术的人，写博客有时候需要在博文中展示一些实施的 demo 代码效果，这就涉及到需要在博文中嵌入 CodePen 或 jsFiddle，jsFiddle 有个国内版 <a href=\"http://jsrun.net\" target=\"_blank\" rel=\"noopener\">jsrun</a>，我就做了上面两种尝试，也就不讲其他的了。至于这两款需要翻墙，对于搞 IT 技术的你不算事儿吧。</p>\n<p>提一句：需要拿出来做嵌入用的代码，你去你的 demo 页面找<code>Embed</code>，中文版的好像叫<code>嵌入</code>，里面有下面的嵌入代码的语法需要的参数。<br><a id=\"more\"></a></p>\n<h2 id=\"在文章中嵌入-CodePen\"><a href=\"#在文章中嵌入-CodePen\" class=\"headerlink\" title=\"在文章中嵌入 CodePen\"></a>在文章中嵌入 CodePen</h2><p>去 <a href=\"https://hexo.io/plugins/\" target=\"_blank\" rel=\"noopener\">Hexo 官方插件页</a>搜索<code>codepen</code>，然后找到<code>hexo-codepen</code>，点过去。<br>或者直接<a href=\"https://github.com/maliMirkec/hexo-tag-codepen\" target=\"_blank\" rel=\"noopener\">点击此处</a>。<br>里面有文档和示例，大致讲解一下。</p>\n<h3 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h3><p>npm 安装：<br><code>$ npm install hexo-codepen --save</code><br>或 yarn 安装：<br><code>$ yarn add hexo-codepen</code></p>\n<h3 id=\"2-用法\"><a href=\"#2-用法\" class=\"headerlink\" title=\"2.用法\"></a>2.用法</h3><p>语法结构：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>deme 链接：</p>\n<p><code>https://codepen.io/CiTA/pen/bgjKKE</code></p>\n<p>在 CodePen 里面 Embed 出来的html代码：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p data-height=<span class=\"string\">\"265\"</span> data-theme-id=<span class=\"string\">\"dark\"</span> data-slug-hash=<span class=\"string\">\"bgjKKE\"</span> data-<span class=\"keyword\">default</span>-tab=<span class=\"string\">\"css,result\"</span> data-user=<span class=\"string\">\"CiTA\"</span> data-embed-version=<span class=\"string\">\"2\"</span> data-pen-title=<span class=\"string\">\"CSS sidebar toggle\"</span> <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">codepen</span>\"&gt;<span class=\"title\">See</span> <span class=\"title\">the</span> <span class=\"title\">Pen</span> &lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=\"<span class=\"title\">https</span>://<span class=\"title\">codepen</span>.<span class=\"title\">io</span>/<span class=\"title\">CiTA</span>/<span class=\"title\">pen</span>/<span class=\"title\">bgjKKE</span>/\"&gt;<span class=\"title\">CSS</span> <span class=\"title\">sidebar</span> <span class=\"title\">toggle</span>&lt;/<span class=\"title\">a</span>&gt; <span class=\"title\">by</span> <span class=\"title\">Silvestar</span> <span class=\"title\">Bistrović</span> (&lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=\"<span class=\"title\">https</span>://<span class=\"title\">codepen</span>.<span class=\"title\">io</span>/<span class=\"title\">CiTA</span>\"&gt;@<span class=\"title\">CiTA</span>&lt;/<span class=\"title\">a</span>&gt;) <span class=\"title\">on</span> &lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=\"<span class=\"title\">https</span>://<span class=\"title\">codepen</span>.<span class=\"title\">io</span>\"&gt;<span class=\"title\">CodePen</span>&lt;/<span class=\"title\">a</span>&gt;.&lt;/<span class=\"title\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">script</span> <span class=\"title\">async</span> <span class=\"title\">src</span>=\"<span class=\"title\">https</span>://<span class=\"title\">production</span>-<span class=\"title\">assets</span>.<span class=\"title\">codepen</span>.<span class=\"title\">io</span>/<span class=\"title\">assets</span>/<span class=\"title\">embed</span>/<span class=\"title\">ei</span>.<span class=\"title\">js</span>\"&gt;&lt;/<span class=\"title\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>参数对应关系：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段</th>\n<th style=\"text-align:center\">值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">userId</td>\n<td style=\"text-align:center\">CiTA</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">slugHash</td>\n<td style=\"text-align:center\">bgjKKE</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">theme</td>\n<td style=\"text-align:center\">dark</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">defaultTab</td>\n<td style=\"text-align:center\">css,result</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">height</td>\n<td style=\"text-align:center\">265</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">width</td>\n<td style=\"text-align:center\">默认为：100%，此值应根据您的博客主题进行调整</td>\n</tr>\n</tbody>\n</table>\n<p>示例效果：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#替换参数后的语法：(*设置宽高时不要用%，会导致编译错误*)</span><br><span class=\"line\">&#123;% codepen <span class=\"type\">CiTA</span> bgjKKE dark [css,result [<span class=\"number\">265</span>]] %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行后的：<br><iframe id=\"cp_embed_bgjKKE\" src=\"//codepen.io/CiTA/embed/bgjKKE?height=[265]]&theme-id=dark&slug-hash=bgjKKE&default-tab=[css,result\" scrolling=\"no\" frameborder=\"no\" height=\"[265]]\" allowtransparency=\"true\" allowfullscreen=\"true\" class=\"cp_embed_iframe\" style=\"width: 100%; overflow: hidden;\"></iframe></p>\n<p>当然也可以直接嵌入源码（CodePen 中 Embed 出来的代码支持3种格式：WordPress Shortcode、iFrame、HTML） ，也能看到效果，只是这个会带有源码，体验不太好。<br>效果如下：</p>\n<p></p><p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bgjKKE\" data-default-tab=\"css,result\" data-user=\"CiTA\" data-embed-version=\"2\" data-pen-title=\"CSS sidebar toggle\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE/\" target=\"_blank\" rel=\"noopener\">CSS sidebar toggle</a> by Silvestar Bistrović (<a href=\"https://codepen.io/CiTA\" target=\"_blank\" rel=\"noopener\">@CiTA</a>) on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.</p><p></p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n<h2 id=\"在文章中嵌入-jsFiddle\"><a href=\"#在文章中嵌入-jsFiddle\" class=\"headerlink\" title=\"在文章中嵌入 jsFiddle\"></a>在文章中嵌入 jsFiddle</h2><p>这个就省掉了安装依赖包的步骤了，本来官网也提供了语法，只是没有具体的示例，网上找了半天没资料。就自己参考 CodePen 的方式做了一个逆向推理出来的。</p>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>语法结构（<a href=\"https://hexo.io/zh-cn/docs/tag-plugins.html#jsFiddle\" target=\"_blank\" rel=\"noopener\">官网</a>也就只提供了这个）：(<em>设置宽高时不要用%，会导致编译错误</em>)<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>demo 链接：</p>\n<p><code>http://jsfiddle.net/AntBody/138zf8kk/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=138zf8kk</code></p>\n<p>在文章中嵌入 jsfiddle 。<br><iframe scrolling=\"no\" width=\"[width]\" height=\"[height]\" src=\"//jsfiddle.net/shorttag/embedded/[tabs]/[skin]\" frameborder=\"0\" allowfullscreen></iframe></p>\n<p>然后页面转化后，在浏览器里面开启调试控制台，看到如下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-cb26867760f7368c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1111.png\"></p>\n<p>然后逆推，设置如下：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle <span class=\"type\">AntBody</span>/138zf8kk js,html,css,result light %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行效果：<br><iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/AntBody/138zf8kk/embedded/js,html,css,result/light\" frameborder=\"0\" allowfullscreen></iframe></p>\n<p>这些参数怎么对应过去的呢？看下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-8199fb368e1040b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"222.png\"></p>\n<p>当然同样的，因为 jsfiddle 的Embed code 支持两种方式，也可以引入 iFarme 源码进来，因为本来 Hexo 的语法本来就是编译成 iframe 形式的。</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/AntBody/138zf8kk/embedded/\" allowpaymentrequest=\"\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>另外说明一点，jsfiddle 的 demo 例子代码你得找到 <code>Emebed</code>才能看到相关需要的参数，如果找不到，可能就不知道怎么设置了。<br>比如 Element UI 的随便一个例子： <code>https://jsfiddle.net/api/post/library/pure/</code>，不知道是不是因为没注册账号的原因引起的。（由于我一直用的codepen，就没去捉摸具体原因了。）</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ol>\n<li><p>codepen 嵌入</p>\n<ul>\n<li><p>安装：<code>$ npm install hexo-codepen --save</code></p>\n</li>\n<li><p>使用语法结构：</p>\n</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>找到对应参数，对应过去就行。</li>\n</ul>\n</li>\n<li><p>jsfiddle 嵌入</p>\n<ul>\n<li>使用语法结构：</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>找到对应参数，对应过去就行。</li>\n</ul>\n</li>\n<li><p>至于其他的像 dabbet、jsrun、jsbin、runjs 等等就自己去尝试了。<br>另外，由于 hexo 解析后都是 iframe 的结果形式，故而可以直接引入 iframe 的代码也行，只是效果体验会差些，毕竟连源码也显示出来了。至于，其他的 js 嵌入或 html+js 嵌入就自己去尝试了。codepen 里面尝试了一下，跟 iframe 引入方式效果一样。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>建议直接去<a href=\"http://www.missfli.com/2018/05/29/github-hexo-next-04.html\" target=\"_blank\" rel=\"noopener\">博客网站原文</a>看效果，因为简书的markdown不支持此语法的。<br>搞 IT 技术的人，写博客有时候需要在博文中展示一些实施的 demo 代码效果，这就涉及到需要在博文中嵌入 CodePen 或 jsFiddle，jsFiddle 有个国内版 <a href=\"http://jsrun.net\" target=\"_blank\" rel=\"noopener\">jsrun</a>，我就做了上面两种尝试，也就不讲其他的了。至于这两款需要翻墙，对于搞 IT 技术的你不算事儿吧。</p>\n<p>提一句：需要拿出来做嵌入用的代码，你去你的 demo 页面找<code>Embed</code>，中文版的好像叫<code>嵌入</code>，里面有下面的嵌入代码的语法需要的参数。<br>","more":"</p>\n<h2 id=\"在文章中嵌入-CodePen\"><a href=\"#在文章中嵌入-CodePen\" class=\"headerlink\" title=\"在文章中嵌入 CodePen\"></a>在文章中嵌入 CodePen</h2><p>去 <a href=\"https://hexo.io/plugins/\" target=\"_blank\" rel=\"noopener\">Hexo 官方插件页</a>搜索<code>codepen</code>，然后找到<code>hexo-codepen</code>，点过去。<br>或者直接<a href=\"https://github.com/maliMirkec/hexo-tag-codepen\" target=\"_blank\" rel=\"noopener\">点击此处</a>。<br>里面有文档和示例，大致讲解一下。</p>\n<h3 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h3><p>npm 安装：<br><code>$ npm install hexo-codepen --save</code><br>或 yarn 安装：<br><code>$ yarn add hexo-codepen</code></p>\n<h3 id=\"2-用法\"><a href=\"#2-用法\" class=\"headerlink\" title=\"2.用法\"></a>2.用法</h3><p>语法结构：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>deme 链接：</p>\n<p><code>https://codepen.io/CiTA/pen/bgjKKE</code></p>\n<p>在 CodePen 里面 Embed 出来的html代码：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p data-height=<span class=\"string\">\"265\"</span> data-theme-id=<span class=\"string\">\"dark\"</span> data-slug-hash=<span class=\"string\">\"bgjKKE\"</span> data-<span class=\"keyword\">default</span>-tab=<span class=\"string\">\"css,result\"</span> data-user=<span class=\"string\">\"CiTA\"</span> data-embed-version=<span class=\"string\">\"2\"</span> data-pen-title=<span class=\"string\">\"CSS sidebar toggle\"</span> <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">codepen</span>\"&gt;<span class=\"title\">See</span> <span class=\"title\">the</span> <span class=\"title\">Pen</span> &lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=\"<span class=\"title\">https</span>://<span class=\"title\">codepen</span>.<span class=\"title\">io</span>/<span class=\"title\">CiTA</span>/<span class=\"title\">pen</span>/<span class=\"title\">bgjKKE</span>/\"&gt;<span class=\"title\">CSS</span> <span class=\"title\">sidebar</span> <span class=\"title\">toggle</span>&lt;/<span class=\"title\">a</span>&gt; <span class=\"title\">by</span> <span class=\"title\">Silvestar</span> <span class=\"title\">Bistrović</span> (&lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=\"<span class=\"title\">https</span>://<span class=\"title\">codepen</span>.<span class=\"title\">io</span>/<span class=\"title\">CiTA</span>\"&gt;@<span class=\"title\">CiTA</span>&lt;/<span class=\"title\">a</span>&gt;) <span class=\"title\">on</span> &lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=\"<span class=\"title\">https</span>://<span class=\"title\">codepen</span>.<span class=\"title\">io</span>\"&gt;<span class=\"title\">CodePen</span>&lt;/<span class=\"title\">a</span>&gt;.&lt;/<span class=\"title\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">script</span> <span class=\"title\">async</span> <span class=\"title\">src</span>=\"<span class=\"title\">https</span>://<span class=\"title\">production</span>-<span class=\"title\">assets</span>.<span class=\"title\">codepen</span>.<span class=\"title\">io</span>/<span class=\"title\">assets</span>/<span class=\"title\">embed</span>/<span class=\"title\">ei</span>.<span class=\"title\">js</span>\"&gt;&lt;/<span class=\"title\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>参数对应关系：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段</th>\n<th style=\"text-align:center\">值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">userId</td>\n<td style=\"text-align:center\">CiTA</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">slugHash</td>\n<td style=\"text-align:center\">bgjKKE</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">theme</td>\n<td style=\"text-align:center\">dark</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">defaultTab</td>\n<td style=\"text-align:center\">css,result</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">height</td>\n<td style=\"text-align:center\">265</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">width</td>\n<td style=\"text-align:center\">默认为：100%，此值应根据您的博客主题进行调整</td>\n</tr>\n</tbody>\n</table>\n<p>示例效果：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#替换参数后的语法：(*设置宽高时不要用%，会导致编译错误*)</span><br><span class=\"line\">&#123;% codepen <span class=\"type\">CiTA</span> bgjKKE dark [css,result [<span class=\"number\">265</span>]] %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行后的：<br><iframe id=\"cp_embed_bgjKKE\" src=\"//codepen.io/CiTA/embed/bgjKKE?height=[265]]&theme-id=dark&slug-hash=bgjKKE&default-tab=[css,result\" scrolling=\"no\" frameborder=\"no\" height=\"[265]]\" allowtransparency=\"true\" allowfullscreen=\"true\" class=\"cp_embed_iframe\" style=\"width: 100%; overflow: hidden;\"></iframe></p>\n<p>当然也可以直接嵌入源码（CodePen 中 Embed 出来的代码支持3种格式：WordPress Shortcode、iFrame、HTML） ，也能看到效果，只是这个会带有源码，体验不太好。<br>效果如下：</p>\n<p></p><p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bgjKKE\" data-default-tab=\"css,result\" data-user=\"CiTA\" data-embed-version=\"2\" data-pen-title=\"CSS sidebar toggle\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE/\" target=\"_blank\" rel=\"noopener\">CSS sidebar toggle</a> by Silvestar Bistrović (<a href=\"https://codepen.io/CiTA\" target=\"_blank\" rel=\"noopener\">@CiTA</a>) on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.</p><p></p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n<h2 id=\"在文章中嵌入-jsFiddle\"><a href=\"#在文章中嵌入-jsFiddle\" class=\"headerlink\" title=\"在文章中嵌入 jsFiddle\"></a>在文章中嵌入 jsFiddle</h2><p>这个就省掉了安装依赖包的步骤了，本来官网也提供了语法，只是没有具体的示例，网上找了半天没资料。就自己参考 CodePen 的方式做了一个逆向推理出来的。</p>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>语法结构（<a href=\"https://hexo.io/zh-cn/docs/tag-plugins.html#jsFiddle\" target=\"_blank\" rel=\"noopener\">官网</a>也就只提供了这个）：(<em>设置宽高时不要用%，会导致编译错误</em>)<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>demo 链接：</p>\n<p><code>http://jsfiddle.net/AntBody/138zf8kk/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=138zf8kk</code></p>\n<p>在文章中嵌入 jsfiddle 。<br><iframe scrolling=\"no\" width=\"[width]\" height=\"[height]\" src=\"//jsfiddle.net/shorttag/embedded/[tabs]/[skin]\" frameborder=\"0\" allowfullscreen></iframe></p>\n<p>然后页面转化后，在浏览器里面开启调试控制台，看到如下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-cb26867760f7368c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1111.png\"></p>\n<p>然后逆推，设置如下：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle <span class=\"type\">AntBody</span>/138zf8kk js,html,css,result light %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行效果：<br><iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/AntBody/138zf8kk/embedded/js,html,css,result/light\" frameborder=\"0\" allowfullscreen></iframe></p>\n<p>这些参数怎么对应过去的呢？看下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-8199fb368e1040b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"222.png\"></p>\n<p>当然同样的，因为 jsfiddle 的Embed code 支持两种方式，也可以引入 iFarme 源码进来，因为本来 Hexo 的语法本来就是编译成 iframe 形式的。</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/AntBody/138zf8kk/embedded/\" allowpaymentrequest=\"\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>另外说明一点，jsfiddle 的 demo 例子代码你得找到 <code>Emebed</code>才能看到相关需要的参数，如果找不到，可能就不知道怎么设置了。<br>比如 Element UI 的随便一个例子： <code>https://jsfiddle.net/api/post/library/pure/</code>，不知道是不是因为没注册账号的原因引起的。（由于我一直用的codepen，就没去捉摸具体原因了。）</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ol>\n<li><p>codepen 嵌入</p>\n<ul>\n<li><p>安装：<code>$ npm install hexo-codepen --save</code></p>\n</li>\n<li><p>使用语法结构：</p>\n</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>找到对应参数，对应过去就行。</li>\n</ul>\n</li>\n<li><p>jsfiddle 嵌入</p>\n<ul>\n<li>使用语法结构：</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>找到对应参数，对应过去就行。</li>\n</ul>\n</li>\n<li><p>至于其他的像 dabbet、jsrun、jsbin、runjs 等等就自己去尝试了。<br>另外，由于 hexo 解析后都是 iframe 的结果形式，故而可以直接引入 iframe 的代码也行，只是效果体验会差些，毕竟连源码也显示出来了。至于，其他的 js 嵌入或 html+js 嵌入就自己去尝试了。codepen 里面尝试了一下，跟 iframe 引入方式效果一样。</p>\n</li>\n</ol>"},{"layout":"pages","title":"Hexo NexT主题中添加网页音乐播放器功能","date":"2018-05-27T04:15:00.000Z","_content":"\n非原创，文章出处：https://asdfv1929.github.io/2018/05/26/next-add-music/ 。\n为博客添加网页音乐播放器功能\n<!-- more -->\n\n## download\n点击访问 Aplayer 源码：[GitHub Aplayer](https://github.com/MoePlayer/APlayer)。下载到本地，解压后将`dist`文件夹复制到`themes\\next\\source`文件夹下。\n\n## music.js\n新建`themes\\next\\source\\dist\\music.js`文件，添加内容：\n```swift\nconst ap = new APlayer({\n    container: document.getElementById('aplayer'),\n    fixed: true,\n    autoplay: false,\n    audio: [\n      {\n        name: \"PDD洪荒之力\",\n        artist: '徐梦圆',\n        url: 'http://up.mcyt.net/?down/39868.mp3',\n        cover: 'http://oeff2vktt.bkt.clouddn.com/image/84.jpg',\n      },\n      {\n        name: '9420',\n        artist: '麦小兜',\n        url: 'http://up.mcyt.net/?down/45967.mp3',\n        cover: 'http://oeff2vktt.bkt.clouddn.com/image/8.jpg',\n      },\n      {\n        name: '风筝误',\n        artist: '刘珂矣',\n        url: 'http://up.mcyt.net/?down/46644.mp3',\n        cover: 'http://oeff2vktt.bkt.clouddn.com/image/96.jpg',\n      }\n    ]\n});\n```\n\n源码中对应的参数解释，这边都有： [Aplayer 中文文档](https://aplayer.js.org/#/zh-Hans/)\n\naudio 对应的便是音频文件，所以音乐播放器需要播放的音乐是需要自己进行相关信息（如歌曲链接、歌词、封面等）的配置。这里放一个mp3音乐外链网站：http://up.mcyt.net/ ，搜索对应的音乐，然后复制 url 和右击封面图片链接粘贴到对应的位置上就行了。\n\n*注：由于该外链网站没有歌词链接，我这边没有进行配置，所以播放器在播放音乐时点击歌词是没有显示的。*\n\n## _layout.swig\n打开`themes\\next\\layout\\_layout.swig`文件，将\n```swift\n<link rel=\"stylesheet\" href=\"/dist/APlayer.min.css\">\n<div id=\"aplayer\"></div>\n<script type=\"text/javascript\" src=\"/dist/APlayer.min.js\"></script>\n<script type=\"text/javascript\" src=\"/dist/music.js\"></script>\n```\n添加到`<body itemscope ...>`后面就行，即在`<body></body>`里面。\n\n重新生成，访问页面，就能看到左下角的音乐播放器了。","source":"_posts/github-hexo-next-03.md","raw":"---\nlayout: pages\ntitle: Hexo NexT主题中添加网页音乐播放器功能\ndate: 2018-05-27 12:15:00\ncategories:\n- Hexo\ntags:\n- Hexo\n- NexT\n- Web Music\n- Aplayer\n---\n\n非原创，文章出处：https://asdfv1929.github.io/2018/05/26/next-add-music/ 。\n为博客添加网页音乐播放器功能\n<!-- more -->\n\n## download\n点击访问 Aplayer 源码：[GitHub Aplayer](https://github.com/MoePlayer/APlayer)。下载到本地，解压后将`dist`文件夹复制到`themes\\next\\source`文件夹下。\n\n## music.js\n新建`themes\\next\\source\\dist\\music.js`文件，添加内容：\n```swift\nconst ap = new APlayer({\n    container: document.getElementById('aplayer'),\n    fixed: true,\n    autoplay: false,\n    audio: [\n      {\n        name: \"PDD洪荒之力\",\n        artist: '徐梦圆',\n        url: 'http://up.mcyt.net/?down/39868.mp3',\n        cover: 'http://oeff2vktt.bkt.clouddn.com/image/84.jpg',\n      },\n      {\n        name: '9420',\n        artist: '麦小兜',\n        url: 'http://up.mcyt.net/?down/45967.mp3',\n        cover: 'http://oeff2vktt.bkt.clouddn.com/image/8.jpg',\n      },\n      {\n        name: '风筝误',\n        artist: '刘珂矣',\n        url: 'http://up.mcyt.net/?down/46644.mp3',\n        cover: 'http://oeff2vktt.bkt.clouddn.com/image/96.jpg',\n      }\n    ]\n});\n```\n\n源码中对应的参数解释，这边都有： [Aplayer 中文文档](https://aplayer.js.org/#/zh-Hans/)\n\naudio 对应的便是音频文件，所以音乐播放器需要播放的音乐是需要自己进行相关信息（如歌曲链接、歌词、封面等）的配置。这里放一个mp3音乐外链网站：http://up.mcyt.net/ ，搜索对应的音乐，然后复制 url 和右击封面图片链接粘贴到对应的位置上就行了。\n\n*注：由于该外链网站没有歌词链接，我这边没有进行配置，所以播放器在播放音乐时点击歌词是没有显示的。*\n\n## _layout.swig\n打开`themes\\next\\layout\\_layout.swig`文件，将\n```swift\n<link rel=\"stylesheet\" href=\"/dist/APlayer.min.css\">\n<div id=\"aplayer\"></div>\n<script type=\"text/javascript\" src=\"/dist/APlayer.min.js\"></script>\n<script type=\"text/javascript\" src=\"/dist/music.js\"></script>\n```\n添加到`<body itemscope ...>`后面就行，即在`<body></body>`里面。\n\n重新生成，访问页面，就能看到左下角的音乐播放器了。","slug":"github-hexo-next-03","published":1,"updated":"2018-05-27T04:19:47.742Z","comments":1,"photos":[],"link":"","_id":"cji0ejm20000fg4l1ecya4srm","content":"<p>非原创，文章出处：<a href=\"https://asdfv1929.github.io/2018/05/26/next-add-music/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/05/26/next-add-music/</a> 。<br>为博客添加网页音乐播放器功能<br><a id=\"more\"></a></p>\n<h2 id=\"download\"><a href=\"#download\" class=\"headerlink\" title=\"download\"></a>download</h2><p>点击访问 Aplayer 源码：<a href=\"https://github.com/MoePlayer/APlayer\" target=\"_blank\" rel=\"noopener\">GitHub Aplayer</a>。下载到本地，解压后将<code>dist</code>文件夹复制到<code>themes\\next\\source</code>文件夹下。</p>\n<h2 id=\"music-js\"><a href=\"#music-js\" class=\"headerlink\" title=\"music.js\"></a>music.js</h2><p>新建<code>themes\\next\\source\\dist\\music.js</code>文件，添加内容：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const ap = new <span class=\"type\">APlayer</span>(&#123;</span><br><span class=\"line\">    container: document.getElementById('aplayer'),</span><br><span class=\"line\">    fixed: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    autoplay: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    audio: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: <span class=\"string\">\"PDD洪荒之力\"</span>,</span><br><span class=\"line\">        artist: '徐梦圆',</span><br><span class=\"line\">        url: 'http:<span class=\"comment\">//up.mcyt.net/?down/39868.mp3',</span></span><br><span class=\"line\">        cover: 'http:<span class=\"comment\">//oeff2vktt.bkt.clouddn.com/image/84.jpg',</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: '<span class=\"number\">9420</span>',</span><br><span class=\"line\">        artist: '麦小兜',</span><br><span class=\"line\">        url: 'http:<span class=\"comment\">//up.mcyt.net/?down/45967.mp3',</span></span><br><span class=\"line\">        cover: 'http:<span class=\"comment\">//oeff2vktt.bkt.clouddn.com/image/8.jpg',</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: '风筝误',</span><br><span class=\"line\">        artist: '刘珂矣',</span><br><span class=\"line\">        url: 'http:<span class=\"comment\">//up.mcyt.net/?down/46644.mp3',</span></span><br><span class=\"line\">        cover: 'http:<span class=\"comment\">//oeff2vktt.bkt.clouddn.com/image/96.jpg',</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>源码中对应的参数解释，这边都有： <a href=\"https://aplayer.js.org/#/zh-Hans/\" target=\"_blank\" rel=\"noopener\">Aplayer 中文文档</a></p>\n<p>audio 对应的便是音频文件，所以音乐播放器需要播放的音乐是需要自己进行相关信息（如歌曲链接、歌词、封面等）的配置。这里放一个mp3音乐外链网站：<a href=\"http://up.mcyt.net/\" target=\"_blank\" rel=\"noopener\">http://up.mcyt.net/</a> ，搜索对应的音乐，然后复制 url 和右击封面图片链接粘贴到对应的位置上就行了。</p>\n<p><em>注：由于该外链网站没有歌词链接，我这边没有进行配置，所以播放器在播放音乐时点击歌词是没有显示的。</em></p>\n<h2 id=\"layout-swig\"><a href=\"#layout-swig\" class=\"headerlink\" title=\"_layout.swig\"></a>_layout.swig</h2><p>打开<code>themes\\next\\layout\\_layout.swig</code>文件，将<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"/dist/APlayer.min.css\"</span>&gt;</span><br><span class=\"line\">&lt;div id=<span class=\"string\">\"aplayer\"</span>&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"/dist/APlayer.min.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"/dist/music.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>添加到<code>&lt;body itemscope ...&gt;</code>后面就行，即在<code>&lt;body&gt;&lt;/body&gt;</code>里面。</p>\n<p>重新生成，访问页面，就能看到左下角的音乐播放器了。</p>\n","site":{"data":{}},"excerpt":"<p>非原创，文章出处：<a href=\"https://asdfv1929.github.io/2018/05/26/next-add-music/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/05/26/next-add-music/</a> 。<br>为博客添加网页音乐播放器功能<br>","more":"</p>\n<h2 id=\"download\"><a href=\"#download\" class=\"headerlink\" title=\"download\"></a>download</h2><p>点击访问 Aplayer 源码：<a href=\"https://github.com/MoePlayer/APlayer\" target=\"_blank\" rel=\"noopener\">GitHub Aplayer</a>。下载到本地，解压后将<code>dist</code>文件夹复制到<code>themes\\next\\source</code>文件夹下。</p>\n<h2 id=\"music-js\"><a href=\"#music-js\" class=\"headerlink\" title=\"music.js\"></a>music.js</h2><p>新建<code>themes\\next\\source\\dist\\music.js</code>文件，添加内容：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const ap = new <span class=\"type\">APlayer</span>(&#123;</span><br><span class=\"line\">    container: document.getElementById('aplayer'),</span><br><span class=\"line\">    fixed: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    autoplay: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    audio: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: <span class=\"string\">\"PDD洪荒之力\"</span>,</span><br><span class=\"line\">        artist: '徐梦圆',</span><br><span class=\"line\">        url: 'http:<span class=\"comment\">//up.mcyt.net/?down/39868.mp3',</span></span><br><span class=\"line\">        cover: 'http:<span class=\"comment\">//oeff2vktt.bkt.clouddn.com/image/84.jpg',</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: '<span class=\"number\">9420</span>',</span><br><span class=\"line\">        artist: '麦小兜',</span><br><span class=\"line\">        url: 'http:<span class=\"comment\">//up.mcyt.net/?down/45967.mp3',</span></span><br><span class=\"line\">        cover: 'http:<span class=\"comment\">//oeff2vktt.bkt.clouddn.com/image/8.jpg',</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: '风筝误',</span><br><span class=\"line\">        artist: '刘珂矣',</span><br><span class=\"line\">        url: 'http:<span class=\"comment\">//up.mcyt.net/?down/46644.mp3',</span></span><br><span class=\"line\">        cover: 'http:<span class=\"comment\">//oeff2vktt.bkt.clouddn.com/image/96.jpg',</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>源码中对应的参数解释，这边都有： <a href=\"https://aplayer.js.org/#/zh-Hans/\" target=\"_blank\" rel=\"noopener\">Aplayer 中文文档</a></p>\n<p>audio 对应的便是音频文件，所以音乐播放器需要播放的音乐是需要自己进行相关信息（如歌曲链接、歌词、封面等）的配置。这里放一个mp3音乐外链网站：<a href=\"http://up.mcyt.net/\" target=\"_blank\" rel=\"noopener\">http://up.mcyt.net/</a> ，搜索对应的音乐，然后复制 url 和右击封面图片链接粘贴到对应的位置上就行了。</p>\n<p><em>注：由于该外链网站没有歌词链接，我这边没有进行配置，所以播放器在播放音乐时点击歌词是没有显示的。</em></p>\n<h2 id=\"layout-swig\"><a href=\"#layout-swig\" class=\"headerlink\" title=\"_layout.swig\"></a>_layout.swig</h2><p>打开<code>themes\\next\\layout\\_layout.swig</code>文件，将<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"/dist/APlayer.min.css\"</span>&gt;</span><br><span class=\"line\">&lt;div id=<span class=\"string\">\"aplayer\"</span>&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"/dist/APlayer.min.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"/dist/music.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>添加到<code>&lt;body itemscope ...&gt;</code>后面就行，即在<code>&lt;body&gt;&lt;/body&gt;</code>里面。</p>\n<p>重新生成，访问页面，就能看到左下角的音乐播放器了。</p>"},{"layout":"pages","title":"Hexo NexT主题评论功能的筛选对比","date":"2018-05-28T16:30:00.000Z","_content":"个人站点评论系统的选择的确让人头疼，我在这上面也折腾了很长时间，蛮难选的。大致整理了一下，看下表，后续深入了解后再更新此文。\n\n<!-- more -->\n\n## 评论系统对比表\n\n| 名称 | 推荐星数 | 介绍 |\n|:----:|:----:|:----|\n| 多说  | 0 | 在2017年06月01日就关闭评论服务了 |\n| 网易云跟贴 | 0 | 2017年08月01日也停止服务了 |\n| 来必力 | 3 | 国外的，不能匿名评论，支持邮箱账号注册评论，据说容易出现乱码。 |\n| DISQUS | 2 | 国外的，界面又丑，加载又慢。 |\n| 畅言 | 4 | 国内的，不能匿名评论，，需要手机号验证。需要你的备案号，不然你网站没法长时间使用畅言。据说灌水厉害，这个功能目前已经是出于失灵与半失灵的状态，官方估计也没怎么维护了。 |\n| 有言 | 3 | 国内的，支持匿名评论（默认关闭，需手动开启），但只是匿名，没有留联系方式的地方。 |\n| Facebook Comments | 3 | 国外的，个人网站很少见人用，不做评论。 |\n| HyperComments | 4 | 国外的，支持匿名评论，可以评论上传图片、影片等。功能还是比较强大，设置界面是英文，且没有中文支持。收费，只能免费试用14天。界面美观。 |\n| Valine | 3 | 国内的，不能匿名评论，但也不需要注册那么麻烦，简单风格。 |\n| gitment | 2 | 不推荐gitment因为作者弃坑了，一堆兼容问题没人修复，包括提交的pr都没合并。 |\n| gitalk | 3 | 支持Markdown。 基于 GitHub Issues 的评论系统 ，面向程序员，不能匿名评论，需博主初始化话题，用户需登录 github 账号评论。 |\n\n\n\n推荐星际评定不一定合理，自行搜集相关资料选择心仪的。我暂定的 Valine 。\n\n\n\n## 参考\n\n- [Hexo（NexT 主题）评论系统哪个好？](https://www.zhihu.com/question/267598518)\n- [Hexo-NexT主题添加评论功能（来必力、Hypercomments、畅言、友言） ](https://blog.csdn.net/qq_32454537/article/details/79482879)","source":"_posts/github-hexo-next-05.md","raw":"---\nlayout: pages\ntitle: Hexo NexT主题评论功能的筛选对比\ndate: 2018-05-29 00:30:00\ncategories:\n- Hexo\ntags:\n- Hexo\n- NexT\n---\n个人站点评论系统的选择的确让人头疼，我在这上面也折腾了很长时间，蛮难选的。大致整理了一下，看下表，后续深入了解后再更新此文。\n\n<!-- more -->\n\n## 评论系统对比表\n\n| 名称 | 推荐星数 | 介绍 |\n|:----:|:----:|:----|\n| 多说  | 0 | 在2017年06月01日就关闭评论服务了 |\n| 网易云跟贴 | 0 | 2017年08月01日也停止服务了 |\n| 来必力 | 3 | 国外的，不能匿名评论，支持邮箱账号注册评论，据说容易出现乱码。 |\n| DISQUS | 2 | 国外的，界面又丑，加载又慢。 |\n| 畅言 | 4 | 国内的，不能匿名评论，，需要手机号验证。需要你的备案号，不然你网站没法长时间使用畅言。据说灌水厉害，这个功能目前已经是出于失灵与半失灵的状态，官方估计也没怎么维护了。 |\n| 有言 | 3 | 国内的，支持匿名评论（默认关闭，需手动开启），但只是匿名，没有留联系方式的地方。 |\n| Facebook Comments | 3 | 国外的，个人网站很少见人用，不做评论。 |\n| HyperComments | 4 | 国外的，支持匿名评论，可以评论上传图片、影片等。功能还是比较强大，设置界面是英文，且没有中文支持。收费，只能免费试用14天。界面美观。 |\n| Valine | 3 | 国内的，不能匿名评论，但也不需要注册那么麻烦，简单风格。 |\n| gitment | 2 | 不推荐gitment因为作者弃坑了，一堆兼容问题没人修复，包括提交的pr都没合并。 |\n| gitalk | 3 | 支持Markdown。 基于 GitHub Issues 的评论系统 ，面向程序员，不能匿名评论，需博主初始化话题，用户需登录 github 账号评论。 |\n\n\n\n推荐星际评定不一定合理，自行搜集相关资料选择心仪的。我暂定的 Valine 。\n\n\n\n## 参考\n\n- [Hexo（NexT 主题）评论系统哪个好？](https://www.zhihu.com/question/267598518)\n- [Hexo-NexT主题添加评论功能（来必力、Hypercomments、畅言、友言） ](https://blog.csdn.net/qq_32454537/article/details/79482879)","slug":"github-hexo-next-05","published":1,"updated":"2018-05-29T06:21:22.841Z","comments":1,"photos":[],"link":"","_id":"cji0ejm29000hg4l1huvpqkh6","content":"<p>个人站点评论系统的选择的确让人头疼，我在这上面也折腾了很长时间，蛮难选的。大致整理了一下，看下表，后续深入了解后再更新此文。</p>\n<a id=\"more\"></a>\n<h2 id=\"评论系统对比表\"><a href=\"#评论系统对比表\" class=\"headerlink\" title=\"评论系统对比表\"></a>评论系统对比表</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">推荐星数</th>\n<th style=\"text-align:left\">介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">多说</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:left\">在2017年06月01日就关闭评论服务了</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">网易云跟贴</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:left\">2017年08月01日也停止服务了</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">来必力</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">国外的，不能匿名评论，支持邮箱账号注册评论，据说容易出现乱码。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DISQUS</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:left\">国外的，界面又丑，加载又慢。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">畅言</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:left\">国内的，不能匿名评论，，需要手机号验证。需要你的备案号，不然你网站没法长时间使用畅言。据说灌水厉害，这个功能目前已经是出于失灵与半失灵的状态，官方估计也没怎么维护了。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">有言</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">国内的，支持匿名评论（默认关闭，需手动开启），但只是匿名，没有留联系方式的地方。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Facebook Comments</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">国外的，个人网站很少见人用，不做评论。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">HyperComments</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:left\">国外的，支持匿名评论，可以评论上传图片、影片等。功能还是比较强大，设置界面是英文，且没有中文支持。收费，只能免费试用14天。界面美观。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Valine</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">国内的，不能匿名评论，但也不需要注册那么麻烦，简单风格。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">gitment</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:left\">不推荐gitment因为作者弃坑了，一堆兼容问题没人修复，包括提交的pr都没合并。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">gitalk</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">支持Markdown。 基于 GitHub Issues 的评论系统 ，面向程序员，不能匿名评论，需博主初始化话题，用户需登录 github 账号评论。</td>\n</tr>\n</tbody>\n</table>\n<p>推荐星际评定不一定合理，自行搜集相关资料选择心仪的。我暂定的 Valine 。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.zhihu.com/question/267598518\" target=\"_blank\" rel=\"noopener\">Hexo（NexT 主题）评论系统哪个好？</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32454537/article/details/79482879\" target=\"_blank\" rel=\"noopener\">Hexo-NexT主题添加评论功能（来必力、Hypercomments、畅言、友言） </a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>个人站点评论系统的选择的确让人头疼，我在这上面也折腾了很长时间，蛮难选的。大致整理了一下，看下表，后续深入了解后再更新此文。</p>","more":"<h2 id=\"评论系统对比表\"><a href=\"#评论系统对比表\" class=\"headerlink\" title=\"评论系统对比表\"></a>评论系统对比表</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">推荐星数</th>\n<th style=\"text-align:left\">介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">多说</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:left\">在2017年06月01日就关闭评论服务了</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">网易云跟贴</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:left\">2017年08月01日也停止服务了</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">来必力</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">国外的，不能匿名评论，支持邮箱账号注册评论，据说容易出现乱码。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DISQUS</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:left\">国外的，界面又丑，加载又慢。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">畅言</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:left\">国内的，不能匿名评论，，需要手机号验证。需要你的备案号，不然你网站没法长时间使用畅言。据说灌水厉害，这个功能目前已经是出于失灵与半失灵的状态，官方估计也没怎么维护了。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">有言</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">国内的，支持匿名评论（默认关闭，需手动开启），但只是匿名，没有留联系方式的地方。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Facebook Comments</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">国外的，个人网站很少见人用，不做评论。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">HyperComments</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:left\">国外的，支持匿名评论，可以评论上传图片、影片等。功能还是比较强大，设置界面是英文，且没有中文支持。收费，只能免费试用14天。界面美观。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Valine</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">国内的，不能匿名评论，但也不需要注册那么麻烦，简单风格。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">gitment</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:left\">不推荐gitment因为作者弃坑了，一堆兼容问题没人修复，包括提交的pr都没合并。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">gitalk</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">支持Markdown。 基于 GitHub Issues 的评论系统 ，面向程序员，不能匿名评论，需博主初始化话题，用户需登录 github 账号评论。</td>\n</tr>\n</tbody>\n</table>\n<p>推荐星际评定不一定合理，自行搜集相关资料选择心仪的。我暂定的 Valine 。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.zhihu.com/question/267598518\" target=\"_blank\" rel=\"noopener\">Hexo（NexT 主题）评论系统哪个好？</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32454537/article/details/79482879\" target=\"_blank\" rel=\"noopener\">Hexo-NexT主题添加评论功能（来必力、Hypercomments、畅言、友言） </a></li>\n</ul>"},{"layout":"pages","title":"Hexo NexT主题中添加网页标题崩溃欺骗搞怪特效","date":"2018-05-29T06:45:00.000Z","_content":"文章出处： https://asdfv1929.github.io/2018/01/25/crash-cheat/  \n\n给网页title添加一些搞怪特效 ，提高页面体验。\n\n<!-- more -->\n\n## 创建js文件crash_cheat.js\n在`next\\source\\js\\src`文件夹下创建`crash_cheat.js`，添加代码：\n```swift\n<!--崩溃欺骗-->\n var OriginTitle = document.title;\n var titleTime;\n document.addEventListener('visibilitychange', function () {\n     if (document.hidden) {\n         $('[rel=\"icon\"]').attr('href', \"/img/TEP.ico\");\n         document.title = '╭(°A°`)╮ 页面崩溃啦 ~';\n         clearTimeout(titleTime);\n     }\n     else {\n         $('[rel=\"icon\"]').attr('href', \"/favicon.ico\");\n         document.title = '(ฅ>ω<*ฅ) 噫又好了~' + OriginTitle;\n         titleTime = setTimeout(function () {\n             document.title = OriginTitle;\n         }, 2000);\n     }\n });\n```\n\n## 引用\n在`next\\layout\\_layout.swig`文件中，添加引用（注：在 swig 末尾添加）：\n```swift\n<!--崩溃欺骗-->\n<script type=\"text/javascript\" src=\"/js/src/crash_cheat.js\"></script>\n```\n\n## 补充\n懂代码的会考虑横向和纵向的兼容性问题。\n我先贴个 visibilitychange 事件的桌面端和移动端兼容性图示，或者你直接点击[此处](https://developer.mozilla.org/zh-CN/docs/Web/Events/visibilitychange)过去查看。\n\n![visibilitychange-desktop.png](https://upload-images.jianshu.io/upload_images/1464420-e5867c52b131192b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![visibilitychange-mobile.png](https://upload-images.jianshu.io/upload_images/1464420-a2fe910eb1caae5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n至少得是ie10，所以你别考虑把 attachEvent 加入进来做 ie6,7,8 的兼容了。Android 不支持的，Safari 浏览器也不支持的。所以在这些设备上没看到效果，不要认为是你的代码问题。\n\n另外，visibilitychange 事件在浏览器tab页面切换时执行，故而不停的切换tab页面也会出现这种假效果。哪怕页面正常加载完成。","source":"_posts/github-hexo-next-06.md","raw":"---\nlayout: pages\ntitle: Hexo NexT主题中添加网页标题崩溃欺骗搞怪特效\ndate: 2018-05-29 14:45:00\ncategories:\n- Hexo\ntags:\n- Hexo\n- NexT\n---\n文章出处： https://asdfv1929.github.io/2018/01/25/crash-cheat/  \n\n给网页title添加一些搞怪特效 ，提高页面体验。\n\n<!-- more -->\n\n## 创建js文件crash_cheat.js\n在`next\\source\\js\\src`文件夹下创建`crash_cheat.js`，添加代码：\n```swift\n<!--崩溃欺骗-->\n var OriginTitle = document.title;\n var titleTime;\n document.addEventListener('visibilitychange', function () {\n     if (document.hidden) {\n         $('[rel=\"icon\"]').attr('href', \"/img/TEP.ico\");\n         document.title = '╭(°A°`)╮ 页面崩溃啦 ~';\n         clearTimeout(titleTime);\n     }\n     else {\n         $('[rel=\"icon\"]').attr('href', \"/favicon.ico\");\n         document.title = '(ฅ>ω<*ฅ) 噫又好了~' + OriginTitle;\n         titleTime = setTimeout(function () {\n             document.title = OriginTitle;\n         }, 2000);\n     }\n });\n```\n\n## 引用\n在`next\\layout\\_layout.swig`文件中，添加引用（注：在 swig 末尾添加）：\n```swift\n<!--崩溃欺骗-->\n<script type=\"text/javascript\" src=\"/js/src/crash_cheat.js\"></script>\n```\n\n## 补充\n懂代码的会考虑横向和纵向的兼容性问题。\n我先贴个 visibilitychange 事件的桌面端和移动端兼容性图示，或者你直接点击[此处](https://developer.mozilla.org/zh-CN/docs/Web/Events/visibilitychange)过去查看。\n\n![visibilitychange-desktop.png](https://upload-images.jianshu.io/upload_images/1464420-e5867c52b131192b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![visibilitychange-mobile.png](https://upload-images.jianshu.io/upload_images/1464420-a2fe910eb1caae5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n至少得是ie10，所以你别考虑把 attachEvent 加入进来做 ie6,7,8 的兼容了。Android 不支持的，Safari 浏览器也不支持的。所以在这些设备上没看到效果，不要认为是你的代码问题。\n\n另外，visibilitychange 事件在浏览器tab页面切换时执行，故而不停的切换tab页面也会出现这种假效果。哪怕页面正常加载完成。","slug":"github-hexo-next-06","published":1,"updated":"2018-05-29T06:46:58.909Z","comments":1,"photos":[],"link":"","_id":"cji0ejm2n000lg4l1b4subryi","content":"<p>文章出处： <a href=\"https://asdfv1929.github.io/2018/01/25/crash-cheat/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/01/25/crash-cheat/</a>  </p>\n<p>给网页title添加一些搞怪特效 ，提高页面体验。</p>\n<a id=\"more\"></a>\n<h2 id=\"创建js文件crash-cheat-js\"><a href=\"#创建js文件crash-cheat-js\" class=\"headerlink\" title=\"创建js文件crash_cheat.js\"></a>创建js文件crash_cheat.js</h2><p>在<code>next\\source\\js\\src</code>文件夹下创建<code>crash_cheat.js</code>，添加代码：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--崩溃欺骗--&gt;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> <span class=\"type\">OriginTitle</span> = document.title;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> titleTime;</span><br><span class=\"line\"> document.addEventListener('visibilitychange', function () &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (document.hidden) &#123;</span><br><span class=\"line\">         $('[rel=<span class=\"string\">\"icon\"</span>]').attr('href', <span class=\"string\">\"/img/TEP.ico\"</span>);</span><br><span class=\"line\">         document.title = '╭(°<span class=\"type\">A</span>°`)╮ 页面崩溃啦 ~';</span><br><span class=\"line\">         clearTimeout(titleTime);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         $('[rel=<span class=\"string\">\"icon\"</span>]').attr('href', <span class=\"string\">\"/favicon.ico\"</span>);</span><br><span class=\"line\">         document.title = '(ฅ&gt;ω&lt;*ฅ) 噫又好了~' + <span class=\"type\">OriginTitle</span>;</span><br><span class=\"line\">         titleTime = setTimeout(function () &#123;</span><br><span class=\"line\">             document.title = <span class=\"type\">OriginTitle</span>;</span><br><span class=\"line\">         &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>在<code>next\\layout\\_layout.swig</code>文件中，添加引用（注：在 swig 末尾添加）：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--崩溃欺骗--&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"/js/src/crash_cheat.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>懂代码的会考虑横向和纵向的兼容性问题。<br>我先贴个 visibilitychange 事件的桌面端和移动端兼容性图示，或者你直接点击<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Events/visibilitychange\" target=\"_blank\" rel=\"noopener\">此处</a>过去查看。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-e5867c52b131192b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"visibilitychange-desktop.png\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-a2fe910eb1caae5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"visibilitychange-mobile.png\"></p>\n<p>至少得是ie10，所以你别考虑把 attachEvent 加入进来做 ie6,7,8 的兼容了。Android 不支持的，Safari 浏览器也不支持的。所以在这些设备上没看到效果，不要认为是你的代码问题。</p>\n<p>另外，visibilitychange 事件在浏览器tab页面切换时执行，故而不停的切换tab页面也会出现这种假效果。哪怕页面正常加载完成。</p>\n","site":{"data":{}},"excerpt":"<p>文章出处： <a href=\"https://asdfv1929.github.io/2018/01/25/crash-cheat/\" target=\"_blank\" rel=\"noopener\">https://asdfv1929.github.io/2018/01/25/crash-cheat/</a>  </p>\n<p>给网页title添加一些搞怪特效 ，提高页面体验。</p>","more":"<h2 id=\"创建js文件crash-cheat-js\"><a href=\"#创建js文件crash-cheat-js\" class=\"headerlink\" title=\"创建js文件crash_cheat.js\"></a>创建js文件crash_cheat.js</h2><p>在<code>next\\source\\js\\src</code>文件夹下创建<code>crash_cheat.js</code>，添加代码：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--崩溃欺骗--&gt;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> <span class=\"type\">OriginTitle</span> = document.title;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> titleTime;</span><br><span class=\"line\"> document.addEventListener('visibilitychange', function () &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (document.hidden) &#123;</span><br><span class=\"line\">         $('[rel=<span class=\"string\">\"icon\"</span>]').attr('href', <span class=\"string\">\"/img/TEP.ico\"</span>);</span><br><span class=\"line\">         document.title = '╭(°<span class=\"type\">A</span>°`)╮ 页面崩溃啦 ~';</span><br><span class=\"line\">         clearTimeout(titleTime);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         $('[rel=<span class=\"string\">\"icon\"</span>]').attr('href', <span class=\"string\">\"/favicon.ico\"</span>);</span><br><span class=\"line\">         document.title = '(ฅ&gt;ω&lt;*ฅ) 噫又好了~' + <span class=\"type\">OriginTitle</span>;</span><br><span class=\"line\">         titleTime = setTimeout(function () &#123;</span><br><span class=\"line\">             document.title = <span class=\"type\">OriginTitle</span>;</span><br><span class=\"line\">         &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>在<code>next\\layout\\_layout.swig</code>文件中，添加引用（注：在 swig 末尾添加）：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--崩溃欺骗--&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"/js/src/crash_cheat.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>懂代码的会考虑横向和纵向的兼容性问题。<br>我先贴个 visibilitychange 事件的桌面端和移动端兼容性图示，或者你直接点击<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Events/visibilitychange\" target=\"_blank\" rel=\"noopener\">此处</a>过去查看。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-e5867c52b131192b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"visibilitychange-desktop.png\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-a2fe910eb1caae5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"visibilitychange-mobile.png\"></p>\n<p>至少得是ie10，所以你别考虑把 attachEvent 加入进来做 ie6,7,8 的兼容了。Android 不支持的，Safari 浏览器也不支持的。所以在这些设备上没看到效果，不要认为是你的代码问题。</p>\n<p>另外，visibilitychange 事件在浏览器tab页面切换时执行，故而不停的切换tab页面也会出现这种假效果。哪怕页面正常加载完成。</p>"},{"layout":"pages","title":"Github 创建分支","date":"2018-05-24T02:23:00.000Z","_content":"\n[文章出处](https://blog.csdn.net/top_code/article/details/51931916)    \ngit 管理分钟的相关命令。\n\n<!-- more -->\n\n## clone 项目代码库\n\nclone Github 上的Repository，如下：\n`git clone git@github.com:xxx/xxxx.git`\n\n## 管理分支\n\n### 查看分支\n* 查看本地分支\n使用 git branch命令，如下：\n```swift\n$ git branch\n* master\n```\n*标识的是你当前所在的分支。\n\n* 查看远程分支：`git branch -r`\n* 查看所有分支：`git branch -a`\n\n### 本地创建新的分支\n命令：`git branch [branch name]`\n栗子：`git branch gh-dev`\n\n### 切换到新分支\n命令：`git checkout [branch name]`\n栗子：\n```swift\nRicky@DESKTOP-1QPASTR MINGW64 /f/Git_Studio/design-patterns (master)\n$ git checkout gh-dev\nSwitched to branch 'gh-dev'\n\nRicky@DESKTOP-1QPASTR MINGW64 /f/Git_Studio/design-patterns (gh-dev)\n```\n### 创建+切换分支\n创建分支的同时切换到该分支上：`git checkout -b [branch name]`\ngit checkout -b [branch name] 的效果相当于以下两步操作：\n```swift\ngit branch [branch name]\ngit checkout [branch name]\n```\n### 将新分支推送到github\n命令：`git push origin [branch name]`\n例如：`git push origin gh-dev`\n\n### 删除本地分支\n命令：`git branch -d [branch name]`\n例如：`git branch -d gh-dev`\n\n### 删除github远程分支\n命令：`git push origin :[branch name]`\n分支名前的冒号代表删除。 \n例如：`git push origin :gh-dev`\n\n","source":"_posts/github-new-branch.md","raw":"---\nlayout: pages\ntitle: Github 创建分支\ndate: 2018-05-24 10:23:00\ncategories:\n- Git\ntags:\n- Git\n- Github\n---\n\n[文章出处](https://blog.csdn.net/top_code/article/details/51931916)    \ngit 管理分钟的相关命令。\n\n<!-- more -->\n\n## clone 项目代码库\n\nclone Github 上的Repository，如下：\n`git clone git@github.com:xxx/xxxx.git`\n\n## 管理分支\n\n### 查看分支\n* 查看本地分支\n使用 git branch命令，如下：\n```swift\n$ git branch\n* master\n```\n*标识的是你当前所在的分支。\n\n* 查看远程分支：`git branch -r`\n* 查看所有分支：`git branch -a`\n\n### 本地创建新的分支\n命令：`git branch [branch name]`\n栗子：`git branch gh-dev`\n\n### 切换到新分支\n命令：`git checkout [branch name]`\n栗子：\n```swift\nRicky@DESKTOP-1QPASTR MINGW64 /f/Git_Studio/design-patterns (master)\n$ git checkout gh-dev\nSwitched to branch 'gh-dev'\n\nRicky@DESKTOP-1QPASTR MINGW64 /f/Git_Studio/design-patterns (gh-dev)\n```\n### 创建+切换分支\n创建分支的同时切换到该分支上：`git checkout -b [branch name]`\ngit checkout -b [branch name] 的效果相当于以下两步操作：\n```swift\ngit branch [branch name]\ngit checkout [branch name]\n```\n### 将新分支推送到github\n命令：`git push origin [branch name]`\n例如：`git push origin gh-dev`\n\n### 删除本地分支\n命令：`git branch -d [branch name]`\n例如：`git branch -d gh-dev`\n\n### 删除github远程分支\n命令：`git push origin :[branch name]`\n分支名前的冒号代表删除。 \n例如：`git push origin :gh-dev`\n\n","slug":"github-new-branch","published":1,"updated":"2018-05-29T09:37:56.524Z","comments":1,"photos":[],"link":"","_id":"cji0ejm2t000ng4l1cx2ekalu","content":"<p><a href=\"https://blog.csdn.net/top_code/article/details/51931916\" target=\"_blank\" rel=\"noopener\">文章出处</a><br>git 管理分钟的相关命令。</p>\n<a id=\"more\"></a>\n<h2 id=\"clone-项目代码库\"><a href=\"#clone-项目代码库\" class=\"headerlink\" title=\"clone 项目代码库\"></a>clone 项目代码库</h2><p>clone Github 上的Repository，如下：<br><code>git clone git@github.com:xxx/xxxx.git</code></p>\n<h2 id=\"管理分支\"><a href=\"#管理分支\" class=\"headerlink\" title=\"管理分支\"></a>管理分支</h2><h3 id=\"查看分支\"><a href=\"#查看分支\" class=\"headerlink\" title=\"查看分支\"></a>查看分支</h3><ul>\n<li>查看本地分支<br>使用 git branch命令，如下：<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch</span><br><span class=\"line\">* master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>*标识的是你当前所在的分支。</p>\n<ul>\n<li>查看远程分支：<code>git branch -r</code></li>\n<li>查看所有分支：<code>git branch -a</code></li>\n</ul>\n<h3 id=\"本地创建新的分支\"><a href=\"#本地创建新的分支\" class=\"headerlink\" title=\"本地创建新的分支\"></a>本地创建新的分支</h3><p>命令：<code>git branch [branch name]</code><br>栗子：<code>git branch gh-dev</code></p>\n<h3 id=\"切换到新分支\"><a href=\"#切换到新分支\" class=\"headerlink\" title=\"切换到新分支\"></a>切换到新分支</h3><p>命令：<code>git checkout [branch name]</code><br>栗子：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Ricky</span>@<span class=\"type\">DESKTOP</span>-1QPASTR <span class=\"type\">MINGW64</span> /f/<span class=\"type\">Git_Studio</span>/design-patterns (master)</span><br><span class=\"line\">$ git checkout gh-dev</span><br><span class=\"line\"><span class=\"type\">Switched</span> to branch 'gh-dev'</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">Ricky</span>@<span class=\"type\">DESKTOP</span>-1QPASTR <span class=\"type\">MINGW64</span> /f/<span class=\"type\">Git_Studio</span>/design-patterns (gh-dev)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"创建-切换分支\"><a href=\"#创建-切换分支\" class=\"headerlink\" title=\"创建+切换分支\"></a>创建+切换分支</h3><p>创建分支的同时切换到该分支上：<code>git checkout -b [branch name]</code><br>git checkout -b [branch name] 的效果相当于以下两步操作：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch [branch name]</span><br><span class=\"line\">git checkout [branch name]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"将新分支推送到github\"><a href=\"#将新分支推送到github\" class=\"headerlink\" title=\"将新分支推送到github\"></a>将新分支推送到github</h3><p>命令：<code>git push origin [branch name]</code><br>例如：<code>git push origin gh-dev</code></p>\n<h3 id=\"删除本地分支\"><a href=\"#删除本地分支\" class=\"headerlink\" title=\"删除本地分支\"></a>删除本地分支</h3><p>命令：<code>git branch -d [branch name]</code><br>例如：<code>git branch -d gh-dev</code></p>\n<h3 id=\"删除github远程分支\"><a href=\"#删除github远程分支\" class=\"headerlink\" title=\"删除github远程分支\"></a>删除github远程分支</h3><p>命令：<code>git push origin :[branch name]</code><br>分支名前的冒号代表删除。<br>例如：<code>git push origin :gh-dev</code></p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://blog.csdn.net/top_code/article/details/51931916\" target=\"_blank\" rel=\"noopener\">文章出处</a><br>git 管理分钟的相关命令。</p>","more":"<h2 id=\"clone-项目代码库\"><a href=\"#clone-项目代码库\" class=\"headerlink\" title=\"clone 项目代码库\"></a>clone 项目代码库</h2><p>clone Github 上的Repository，如下：<br><code>git clone git@github.com:xxx/xxxx.git</code></p>\n<h2 id=\"管理分支\"><a href=\"#管理分支\" class=\"headerlink\" title=\"管理分支\"></a>管理分支</h2><h3 id=\"查看分支\"><a href=\"#查看分支\" class=\"headerlink\" title=\"查看分支\"></a>查看分支</h3><ul>\n<li>查看本地分支<br>使用 git branch命令，如下：<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch</span><br><span class=\"line\">* master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>*标识的是你当前所在的分支。</p>\n<ul>\n<li>查看远程分支：<code>git branch -r</code></li>\n<li>查看所有分支：<code>git branch -a</code></li>\n</ul>\n<h3 id=\"本地创建新的分支\"><a href=\"#本地创建新的分支\" class=\"headerlink\" title=\"本地创建新的分支\"></a>本地创建新的分支</h3><p>命令：<code>git branch [branch name]</code><br>栗子：<code>git branch gh-dev</code></p>\n<h3 id=\"切换到新分支\"><a href=\"#切换到新分支\" class=\"headerlink\" title=\"切换到新分支\"></a>切换到新分支</h3><p>命令：<code>git checkout [branch name]</code><br>栗子：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Ricky</span>@<span class=\"type\">DESKTOP</span>-1QPASTR <span class=\"type\">MINGW64</span> /f/<span class=\"type\">Git_Studio</span>/design-patterns (master)</span><br><span class=\"line\">$ git checkout gh-dev</span><br><span class=\"line\"><span class=\"type\">Switched</span> to branch 'gh-dev'</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">Ricky</span>@<span class=\"type\">DESKTOP</span>-1QPASTR <span class=\"type\">MINGW64</span> /f/<span class=\"type\">Git_Studio</span>/design-patterns (gh-dev)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"创建-切换分支\"><a href=\"#创建-切换分支\" class=\"headerlink\" title=\"创建+切换分支\"></a>创建+切换分支</h3><p>创建分支的同时切换到该分支上：<code>git checkout -b [branch name]</code><br>git checkout -b [branch name] 的效果相当于以下两步操作：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch [branch name]</span><br><span class=\"line\">git checkout [branch name]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"将新分支推送到github\"><a href=\"#将新分支推送到github\" class=\"headerlink\" title=\"将新分支推送到github\"></a>将新分支推送到github</h3><p>命令：<code>git push origin [branch name]</code><br>例如：<code>git push origin gh-dev</code></p>\n<h3 id=\"删除本地分支\"><a href=\"#删除本地分支\" class=\"headerlink\" title=\"删除本地分支\"></a>删除本地分支</h3><p>命令：<code>git branch -d [branch name]</code><br>例如：<code>git branch -d gh-dev</code></p>\n<h3 id=\"删除github远程分支\"><a href=\"#删除github远程分支\" class=\"headerlink\" title=\"删除github远程分支\"></a>删除github远程分支</h3><p>命令：<code>git push origin :[branch name]</code><br>分支名前的冒号代表删除。<br>例如：<code>git push origin :gh-dev</code></p>"},{"layout":"pages","title":"Hexo NexT主题中添加人体时钟 hone hone clock","date":"2018-05-29T08:10:00.000Z","_content":"\n给网站添加人体时钟 hone hone clock ，人体时钟是日本的出品，[点此处去](http://chabudai.org/blog/?p=59)。\n\n<!-- more -->\n\n## 创建 js 文件 hone_hone_clock.js\n在`next\\source\\js\\src`文件夹下创建`hone_hone_clock.js`，添加代码：\n```swift\n/*hone-hone-clock*/\n!function (e, t, a) { \n  /* code */\n  var initClock = function(){\n    var sHtml = '';\n    sHtml += '<div style=\"position: fixed;right: 10px;top: 20px;width: 160px;height: 70px;\">';\n    sHtml += '  <object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0\" width=\"160\" height=\"70\" id=\"honehoneclock\" align=\"middle\">';\n    sHtml += '    <param name=\"allowScriptAccess\" value=\"always\">';\n    sHtml += '    <param name=\"movie\" value=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\">';\n    sHtml += '    <param name=\"quality\" value=\"high\">';\n    sHtml += '    <param name=\"bgcolor\" value=\"#ffffff\">';\n    sHtml += '    <param name=\"wmode\" value=\"transparent\">';\n    sHtml += '    <embed wmode=\"transparent\" src=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\" quality=\"high\" bgcolor=\"#ffffff\" width=\"160\" height=\"70\" name=\"honehoneclock\" align=\"middle\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\">';\n    sHtml += '    </object>';\n    sHtml += '</div>';\n    \n    t = t || document;    \n    t.write(sHtml);\n  }\n  initClock();\n}(window, document);\n```\n\n## 引用\n在`next\\layout\\_layout.swig`文件中，添加引用（注：在 swig 末尾添加）：\n```swift\n<!--崩溃欺骗-->\n<script type=\"text/javascript\" src=\"/js/src/hone_hone_clock.js\"></script>\n```\n\n## 其他\n其实稍微懂点代码的可以自行封装 js ，然后按照一样的引入方式引入就行。\n\n你可以直接下载别人写好的 js 文件，然后引入你的项目。比如下面的：\n```swift\n<script charset=\"Shift_JIS\" src=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js\"></script>  \n<script charset=\"Shift_JIS\" src=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_wh.js\"></script>\n```\n\n或拿到人体时钟的[swf文件](http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf)，自行写代码封装也可以滴。\n\n我的百度网盘有swf文件：\n链接：https://pan.baidu.com/s/16cNNaaFDsi1G_3g8YKF7fA 密码：7yob\n","source":"_posts/github-hexo-next-07.md","raw":"---\nlayout: pages\ntitle: Hexo NexT主题中添加人体时钟 hone hone clock\ndate: 2018-05-29 16:10:00\ncategories:\n- Hexo\ntags:\n- Hexo\n- NexT\n---\n\n给网站添加人体时钟 hone hone clock ，人体时钟是日本的出品，[点此处去](http://chabudai.org/blog/?p=59)。\n\n<!-- more -->\n\n## 创建 js 文件 hone_hone_clock.js\n在`next\\source\\js\\src`文件夹下创建`hone_hone_clock.js`，添加代码：\n```swift\n/*hone-hone-clock*/\n!function (e, t, a) { \n  /* code */\n  var initClock = function(){\n    var sHtml = '';\n    sHtml += '<div style=\"position: fixed;right: 10px;top: 20px;width: 160px;height: 70px;\">';\n    sHtml += '  <object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0\" width=\"160\" height=\"70\" id=\"honehoneclock\" align=\"middle\">';\n    sHtml += '    <param name=\"allowScriptAccess\" value=\"always\">';\n    sHtml += '    <param name=\"movie\" value=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\">';\n    sHtml += '    <param name=\"quality\" value=\"high\">';\n    sHtml += '    <param name=\"bgcolor\" value=\"#ffffff\">';\n    sHtml += '    <param name=\"wmode\" value=\"transparent\">';\n    sHtml += '    <embed wmode=\"transparent\" src=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\" quality=\"high\" bgcolor=\"#ffffff\" width=\"160\" height=\"70\" name=\"honehoneclock\" align=\"middle\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\">';\n    sHtml += '    </object>';\n    sHtml += '</div>';\n    \n    t = t || document;    \n    t.write(sHtml);\n  }\n  initClock();\n}(window, document);\n```\n\n## 引用\n在`next\\layout\\_layout.swig`文件中，添加引用（注：在 swig 末尾添加）：\n```swift\n<!--崩溃欺骗-->\n<script type=\"text/javascript\" src=\"/js/src/hone_hone_clock.js\"></script>\n```\n\n## 其他\n其实稍微懂点代码的可以自行封装 js ，然后按照一样的引入方式引入就行。\n\n你可以直接下载别人写好的 js 文件，然后引入你的项目。比如下面的：\n```swift\n<script charset=\"Shift_JIS\" src=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js\"></script>  \n<script charset=\"Shift_JIS\" src=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_wh.js\"></script>\n```\n\n或拿到人体时钟的[swf文件](http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf)，自行写代码封装也可以滴。\n\n我的百度网盘有swf文件：\n链接：https://pan.baidu.com/s/16cNNaaFDsi1G_3g8YKF7fA 密码：7yob\n","slug":"github-hexo-next-07","published":1,"updated":"2018-05-29T08:02:51.961Z","comments":1,"photos":[],"link":"","_id":"cji0ejm30000rg4l1wda41w9z","content":"<p>给网站添加人体时钟 hone hone clock ，人体时钟是日本的出品，<a href=\"http://chabudai.org/blog/?p=59\" target=\"_blank\" rel=\"noopener\">点此处去</a>。</p>\n<a id=\"more\"></a>\n<h2 id=\"创建-js-文件-hone-hone-clock-js\"><a href=\"#创建-js-文件-hone-hone-clock-js\" class=\"headerlink\" title=\"创建 js 文件 hone_hone_clock.js\"></a>创建 js 文件 hone_hone_clock.js</h2><p>在<code>next\\source\\js\\src</code>文件夹下创建<code>hone_hone_clock.js</code>，添加代码：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*hone-hone-clock*/</span></span><br><span class=\"line\">!function (e, t, a) &#123; </span><br><span class=\"line\">  <span class=\"comment\">/* code */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> initClock = function()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sHtml = '';</span><br><span class=\"line\">    sHtml += '&lt;div style=<span class=\"string\">\"position: fixed;right: 10px;top: 20px;width: 160px;height: 70px;\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '  &lt;object classid=<span class=\"string\">\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\"</span> codebase=<span class=\"string\">\"http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0\"</span> width=<span class=\"string\">\"160\"</span> height=<span class=\"string\">\"70\"</span> id=<span class=\"string\">\"honehoneclock\"</span> align=<span class=\"string\">\"middle\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;param name=<span class=\"string\">\"allowScriptAccess\"</span> value=<span class=\"string\">\"always\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;param name=<span class=\"string\">\"movie\"</span> value=<span class=\"string\">\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;param name=<span class=\"string\">\"quality\"</span> value=<span class=\"string\">\"high\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;param name=<span class=\"string\">\"bgcolor\"</span> value=<span class=\"string\">\"#ffffff\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;param name=<span class=\"string\">\"wmode\"</span> value=<span class=\"string\">\"transparent\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;embed wmode=<span class=\"string\">\"transparent\"</span> src=<span class=\"string\">\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\"</span> quality=<span class=\"string\">\"high\"</span> bgcolor=<span class=\"string\">\"#ffffff\"</span> width=<span class=\"string\">\"160\"</span> height=<span class=\"string\">\"70\"</span> name=<span class=\"string\">\"honehoneclock\"</span> align=<span class=\"string\">\"middle\"</span> allowscriptaccess=<span class=\"string\">\"always\"</span> type=<span class=\"string\">\"application/x-shockwave-flash\"</span> pluginspage=<span class=\"string\">\"http://www.macromedia.com/go/getflashplayer\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;/object&gt;';</span><br><span class=\"line\">    sHtml += '&lt;/div&gt;';</span><br><span class=\"line\">    </span><br><span class=\"line\">    t = t || document;    </span><br><span class=\"line\">    t.write(sHtml);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  initClock();</span><br><span class=\"line\">&#125;(window, document);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>在<code>next\\layout\\_layout.swig</code>文件中，添加引用（注：在 swig 末尾添加）：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--崩溃欺骗--&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"/js/src/hone_hone_clock.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>其实稍微懂点代码的可以自行封装 js ，然后按照一样的引入方式引入就行。</p>\n<p>你可以直接下载别人写好的 js 文件，然后引入你的项目。比如下面的：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script charset=<span class=\"string\">\"Shift_JIS\"</span> src=<span class=\"string\">\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js\"</span>&gt;&lt;/script&gt;  </span><br><span class=\"line\">&lt;script charset=<span class=\"string\">\"Shift_JIS\"</span> src=<span class=\"string\">\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_wh.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>或拿到人体时钟的<a href=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\" target=\"_blank\" rel=\"noopener\">swf文件</a>，自行写代码封装也可以滴。</p>\n<p>我的百度网盘有swf文件：<br>链接：<a href=\"https://pan.baidu.com/s/16cNNaaFDsi1G_3g8YKF7fA\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/16cNNaaFDsi1G_3g8YKF7fA</a> 密码：7yob</p>\n","site":{"data":{}},"excerpt":"<p>给网站添加人体时钟 hone hone clock ，人体时钟是日本的出品，<a href=\"http://chabudai.org/blog/?p=59\" target=\"_blank\" rel=\"noopener\">点此处去</a>。</p>","more":"<h2 id=\"创建-js-文件-hone-hone-clock-js\"><a href=\"#创建-js-文件-hone-hone-clock-js\" class=\"headerlink\" title=\"创建 js 文件 hone_hone_clock.js\"></a>创建 js 文件 hone_hone_clock.js</h2><p>在<code>next\\source\\js\\src</code>文件夹下创建<code>hone_hone_clock.js</code>，添加代码：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*hone-hone-clock*/</span></span><br><span class=\"line\">!function (e, t, a) &#123; </span><br><span class=\"line\">  <span class=\"comment\">/* code */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> initClock = function()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sHtml = '';</span><br><span class=\"line\">    sHtml += '&lt;div style=<span class=\"string\">\"position: fixed;right: 10px;top: 20px;width: 160px;height: 70px;\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '  &lt;object classid=<span class=\"string\">\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\"</span> codebase=<span class=\"string\">\"http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0\"</span> width=<span class=\"string\">\"160\"</span> height=<span class=\"string\">\"70\"</span> id=<span class=\"string\">\"honehoneclock\"</span> align=<span class=\"string\">\"middle\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;param name=<span class=\"string\">\"allowScriptAccess\"</span> value=<span class=\"string\">\"always\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;param name=<span class=\"string\">\"movie\"</span> value=<span class=\"string\">\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;param name=<span class=\"string\">\"quality\"</span> value=<span class=\"string\">\"high\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;param name=<span class=\"string\">\"bgcolor\"</span> value=<span class=\"string\">\"#ffffff\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;param name=<span class=\"string\">\"wmode\"</span> value=<span class=\"string\">\"transparent\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;embed wmode=<span class=\"string\">\"transparent\"</span> src=<span class=\"string\">\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\"</span> quality=<span class=\"string\">\"high\"</span> bgcolor=<span class=\"string\">\"#ffffff\"</span> width=<span class=\"string\">\"160\"</span> height=<span class=\"string\">\"70\"</span> name=<span class=\"string\">\"honehoneclock\"</span> align=<span class=\"string\">\"middle\"</span> allowscriptaccess=<span class=\"string\">\"always\"</span> type=<span class=\"string\">\"application/x-shockwave-flash\"</span> pluginspage=<span class=\"string\">\"http://www.macromedia.com/go/getflashplayer\"</span>&gt;';</span><br><span class=\"line\">    sHtml += '    &lt;/object&gt;';</span><br><span class=\"line\">    sHtml += '&lt;/div&gt;';</span><br><span class=\"line\">    </span><br><span class=\"line\">    t = t || document;    </span><br><span class=\"line\">    t.write(sHtml);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  initClock();</span><br><span class=\"line\">&#125;(window, document);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>在<code>next\\layout\\_layout.swig</code>文件中，添加引用（注：在 swig 末尾添加）：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--崩溃欺骗--&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"/js/src/hone_hone_clock.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>其实稍微懂点代码的可以自行封装 js ，然后按照一样的引入方式引入就行。</p>\n<p>你可以直接下载别人写好的 js 文件，然后引入你的项目。比如下面的：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script charset=<span class=\"string\">\"Shift_JIS\"</span> src=<span class=\"string\">\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js\"</span>&gt;&lt;/script&gt;  </span><br><span class=\"line\">&lt;script charset=<span class=\"string\">\"Shift_JIS\"</span> src=<span class=\"string\">\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_wh.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>或拿到人体时钟的<a href=\"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf\" target=\"_blank\" rel=\"noopener\">swf文件</a>，自行写代码封装也可以滴。</p>\n<p>我的百度网盘有swf文件：<br>链接：<a href=\"https://pan.baidu.com/s/16cNNaaFDsi1G_3g8YKF7fA\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/16cNNaaFDsi1G_3g8YKF7fA</a> 密码：7yob</p>"},{"layout":"pages","title":"gulp 安装使用步骤","date":"2016-09-24T03:00:00.000Z","_content":"\n以 gulp-less 的使用为例讲解gulp的基本安装使用。\n<!-- more -->\n\n## 安装nodejs\n\n进入[nodejs官网](https://nodejs.org/en/)，点击硕大的绿色Download按钮，它会根据系统信息选择对应版本（.msi文件）。然后像安装QQ一样安装它就可以了（安装路径随意）。\n进入命令行模式，输入`node -v`命令，查看node版本号，有版本号表示安装完成；node里带有npm的，所以也能查看npm版本号（`npm -v`）\n\n## 全局安装gulp\n\n输入`npm install gulp -g`命令，然后用 `gulp -v`查看是否安装完成；\n![gulp-install-01.png](http://upload-images.jianshu.io/upload_images/1464420-36f34313d6f4704a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 新建package.json文件\n\n 进入你的本地项目（我的是testgulp），输入`npm init`命令，其中 name, version, description必填，其他无所谓，填完后保存，在testgulp项目下就会生成package.json文件；\n```swift\n{  \"name\": \"test\", //必填\n \"version\": \"1.0.0\",  //必填\n \"description\": \"This is for study gulp project !\",  //必填\n \"main\": \"index.js\", \n \"scripts\": {    \n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\" \n },  \n\"author\": \"fli\",  \n\"license\": \"ISC\"\n}\n```\n![gulp-install-02.jpg](http://upload-images.jianshu.io/upload_images/1464420-6eb22f459b0b100b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 项目内安装gulp\n\n 用`npm install gulp --save-dev`或 `npm install --save-dev gulp`命令（卸载的话将前面的命令中install换成uninstall即可）；安装完后，在package.json里能看到具体版本信息。\n\n![gulp-install-03.png](http://upload-images.jianshu.io/upload_images/1464420-c10cda7715e20176.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 项目内安装gulp插件\n\n命令格式：`npm install 插件名称 --save-dev`或`npm install --save-dev 插件名称`；\n\n![gulp-install-04.png](http://upload-images.jianshu.io/upload_images/1464420-198f327a97062c24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n安装完后，在package.json里能看到具体版本信息。此时的文件：\n```swift\n{  \n\"name\": \"test\", \n \"version\": \"1.0.0\",  \n \"description\": \"This is for study gulp project !\",  \n \"main\": \"index.js\", \n \"scripts\": {    \n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\" \n },  \n\"author\": \"fli\",  \n\"license\": \"ISC\",  \n\"devDependencies\": {    \n    \"gulp\": \"^3.9.1\",    \n    \"gulp-less\": \"^3.1.0\"  \n}\n}\n```\n\n## 新建gulpfile.js文件\n\n文件如下：\n```swift\n/*** Created by feili on 2016/9/24. */\n//导入工具包 require('node_modules里对应模块')\nvar gulp = require('gulp'), //本地安装gulp所用到的地方    \nless = require('gulp-less');//定义一个testLess任务（自定义任务名称）\ngulp.task('testLess', function () {    \n    gulp.src('less/index.less') //该任务针对的文件        \n    .pipe(less()) //该任务调用的模块        \n    .pipe(gulp.dest('css')); //将会在src/css下生成index.css\n});\n\ngulp.task('default',['testLess', 'elseTask']); //定义默认任务 elseTask为其他任务，该示例没有定义elseTask任务\n```\n\n## 通过命令提示符运行gulp任务\n\n`gulp default`或`gulp 任务名称`。\n\n![gulp-install-05.png](http://upload-images.jianshu.io/upload_images/1464420-e99dd2c98257b652.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","source":"_posts/gulp-install.md","raw":"---\nlayout: pages\ntitle: gulp 安装使用步骤\ndate: 2016-09-24 11:00:00\ncategories:\n- gulp\ntags:\n- gulp\n---\n\n以 gulp-less 的使用为例讲解gulp的基本安装使用。\n<!-- more -->\n\n## 安装nodejs\n\n进入[nodejs官网](https://nodejs.org/en/)，点击硕大的绿色Download按钮，它会根据系统信息选择对应版本（.msi文件）。然后像安装QQ一样安装它就可以了（安装路径随意）。\n进入命令行模式，输入`node -v`命令，查看node版本号，有版本号表示安装完成；node里带有npm的，所以也能查看npm版本号（`npm -v`）\n\n## 全局安装gulp\n\n输入`npm install gulp -g`命令，然后用 `gulp -v`查看是否安装完成；\n![gulp-install-01.png](http://upload-images.jianshu.io/upload_images/1464420-36f34313d6f4704a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 新建package.json文件\n\n 进入你的本地项目（我的是testgulp），输入`npm init`命令，其中 name, version, description必填，其他无所谓，填完后保存，在testgulp项目下就会生成package.json文件；\n```swift\n{  \"name\": \"test\", //必填\n \"version\": \"1.0.0\",  //必填\n \"description\": \"This is for study gulp project !\",  //必填\n \"main\": \"index.js\", \n \"scripts\": {    \n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\" \n },  \n\"author\": \"fli\",  \n\"license\": \"ISC\"\n}\n```\n![gulp-install-02.jpg](http://upload-images.jianshu.io/upload_images/1464420-6eb22f459b0b100b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 项目内安装gulp\n\n 用`npm install gulp --save-dev`或 `npm install --save-dev gulp`命令（卸载的话将前面的命令中install换成uninstall即可）；安装完后，在package.json里能看到具体版本信息。\n\n![gulp-install-03.png](http://upload-images.jianshu.io/upload_images/1464420-c10cda7715e20176.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 项目内安装gulp插件\n\n命令格式：`npm install 插件名称 --save-dev`或`npm install --save-dev 插件名称`；\n\n![gulp-install-04.png](http://upload-images.jianshu.io/upload_images/1464420-198f327a97062c24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n安装完后，在package.json里能看到具体版本信息。此时的文件：\n```swift\n{  \n\"name\": \"test\", \n \"version\": \"1.0.0\",  \n \"description\": \"This is for study gulp project !\",  \n \"main\": \"index.js\", \n \"scripts\": {    \n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\" \n },  \n\"author\": \"fli\",  \n\"license\": \"ISC\",  \n\"devDependencies\": {    \n    \"gulp\": \"^3.9.1\",    \n    \"gulp-less\": \"^3.1.0\"  \n}\n}\n```\n\n## 新建gulpfile.js文件\n\n文件如下：\n```swift\n/*** Created by feili on 2016/9/24. */\n//导入工具包 require('node_modules里对应模块')\nvar gulp = require('gulp'), //本地安装gulp所用到的地方    \nless = require('gulp-less');//定义一个testLess任务（自定义任务名称）\ngulp.task('testLess', function () {    \n    gulp.src('less/index.less') //该任务针对的文件        \n    .pipe(less()) //该任务调用的模块        \n    .pipe(gulp.dest('css')); //将会在src/css下生成index.css\n});\n\ngulp.task('default',['testLess', 'elseTask']); //定义默认任务 elseTask为其他任务，该示例没有定义elseTask任务\n```\n\n## 通过命令提示符运行gulp任务\n\n`gulp default`或`gulp 任务名称`。\n\n![gulp-install-05.png](http://upload-images.jianshu.io/upload_images/1464420-e99dd2c98257b652.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","slug":"gulp-install","published":1,"updated":"2018-05-30T01:23:18.199Z","comments":1,"photos":[],"link":"","_id":"cji0ejm34000tg4l1tistyzn5","content":"<p>以 gulp-less 的使用为例讲解gulp的基本安装使用。<br><a id=\"more\"></a></p>\n<h2 id=\"安装nodejs\"><a href=\"#安装nodejs\" class=\"headerlink\" title=\"安装nodejs\"></a>安装nodejs</h2><p>进入<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">nodejs官网</a>，点击硕大的绿色Download按钮，它会根据系统信息选择对应版本（.msi文件）。然后像安装QQ一样安装它就可以了（安装路径随意）。<br>进入命令行模式，输入<code>node -v</code>命令，查看node版本号，有版本号表示安装完成；node里带有npm的，所以也能查看npm版本号（<code>npm -v</code>）</p>\n<h2 id=\"全局安装gulp\"><a href=\"#全局安装gulp\" class=\"headerlink\" title=\"全局安装gulp\"></a>全局安装gulp</h2><p>输入<code>npm install gulp -g</code>命令，然后用 <code>gulp -v</code>查看是否安装完成；<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-36f34313d6f4704a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gulp-install-01.png\"></p>\n<h2 id=\"新建package-json文件\"><a href=\"#新建package-json文件\" class=\"headerlink\" title=\"新建package.json文件\"></a>新建package.json文件</h2><p> 进入你的本地项目（我的是testgulp），输入<code>npm init</code>命令，其中 name, version, description必填，其他无所谓，填完后保存，在testgulp项目下就会生成package.json文件；<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"test\"</span>, <span class=\"comment\">//必填</span></span><br><span class=\"line\"> <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,  <span class=\"comment\">//必填</span></span><br><span class=\"line\"> <span class=\"string\">\"description\"</span>: <span class=\"string\">\"This is for study gulp project !\"</span>,  <span class=\"comment\">//必填</span></span><br><span class=\"line\"> <span class=\"string\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>, </span><br><span class=\"line\"> <span class=\"string\">\"scripts\"</span>: &#123;    </span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span> </span><br><span class=\"line\"> &#125;,  </span><br><span class=\"line\"><span class=\"string\">\"author\"</span>: <span class=\"string\">\"fli\"</span>,  </span><br><span class=\"line\"><span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-6eb22f459b0b100b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gulp-install-02.jpg\"></p>\n<h2 id=\"项目内安装gulp\"><a href=\"#项目内安装gulp\" class=\"headerlink\" title=\"项目内安装gulp\"></a>项目内安装gulp</h2><p> 用<code>npm install gulp --save-dev</code>或 <code>npm install --save-dev gulp</code>命令（卸载的话将前面的命令中install换成uninstall即可）；安装完后，在package.json里能看到具体版本信息。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-c10cda7715e20176.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gulp-install-03.png\"></p>\n<h2 id=\"项目内安装gulp插件\"><a href=\"#项目内安装gulp插件\" class=\"headerlink\" title=\"项目内安装gulp插件\"></a>项目内安装gulp插件</h2><p>命令格式：<code>npm install 插件名称 --save-dev</code>或<code>npm install --save-dev 插件名称</code>；</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-198f327a97062c24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gulp-install-04.png\"></p>\n<p>安装完后，在package.json里能看到具体版本信息。此时的文件：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\"><span class=\"string\">\"name\"</span>: <span class=\"string\">\"test\"</span>, </span><br><span class=\"line\"> <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,  </span><br><span class=\"line\"> <span class=\"string\">\"description\"</span>: <span class=\"string\">\"This is for study gulp project !\"</span>,  </span><br><span class=\"line\"> <span class=\"string\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>, </span><br><span class=\"line\"> <span class=\"string\">\"scripts\"</span>: &#123;    </span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span> </span><br><span class=\"line\"> &#125;,  </span><br><span class=\"line\"><span class=\"string\">\"author\"</span>: <span class=\"string\">\"fli\"</span>,  </span><br><span class=\"line\"><span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span>,  </span><br><span class=\"line\"><span class=\"string\">\"devDependencies\"</span>: &#123;    </span><br><span class=\"line\">    <span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"^3.9.1\"</span>,    </span><br><span class=\"line\">    <span class=\"string\">\"gulp-less\"</span>: <span class=\"string\">\"^3.1.0\"</span>  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"新建gulpfile-js文件\"><a href=\"#新建gulpfile-js文件\" class=\"headerlink\" title=\"新建gulpfile.js文件\"></a>新建gulpfile.js文件</h2><p>文件如下：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*** Created by feili on 2016/9/24. */</span></span><br><span class=\"line\"><span class=\"comment\">//导入工具包 require('node_modules里对应模块')</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> gulp = require('gulp'), <span class=\"comment\">//本地安装gulp所用到的地方    </span></span><br><span class=\"line\">less = require('gulp-less');<span class=\"comment\">//定义一个testLess任务（自定义任务名称）</span></span><br><span class=\"line\">gulp.task('testLess', function () &#123;    </span><br><span class=\"line\">    gulp.src('less/index.less') <span class=\"comment\">//该任务针对的文件        </span></span><br><span class=\"line\">    .pipe(less()) <span class=\"comment\">//该任务调用的模块        </span></span><br><span class=\"line\">    .pipe(gulp.dest('css')); <span class=\"comment\">//将会在src/css下生成index.css</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task('<span class=\"keyword\">default</span>',['testLess', 'elseTask']); <span class=\"comment\">//定义默认任务 elseTask为其他任务，该示例没有定义elseTask任务</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"通过命令提示符运行gulp任务\"><a href=\"#通过命令提示符运行gulp任务\" class=\"headerlink\" title=\"通过命令提示符运行gulp任务\"></a>通过命令提示符运行gulp任务</h2><p><code>gulp default</code>或<code>gulp 任务名称</code>。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-e99dd2c98257b652.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gulp-install-05.png\"></p>\n","site":{"data":{}},"excerpt":"<p>以 gulp-less 的使用为例讲解gulp的基本安装使用。<br>","more":"</p>\n<h2 id=\"安装nodejs\"><a href=\"#安装nodejs\" class=\"headerlink\" title=\"安装nodejs\"></a>安装nodejs</h2><p>进入<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">nodejs官网</a>，点击硕大的绿色Download按钮，它会根据系统信息选择对应版本（.msi文件）。然后像安装QQ一样安装它就可以了（安装路径随意）。<br>进入命令行模式，输入<code>node -v</code>命令，查看node版本号，有版本号表示安装完成；node里带有npm的，所以也能查看npm版本号（<code>npm -v</code>）</p>\n<h2 id=\"全局安装gulp\"><a href=\"#全局安装gulp\" class=\"headerlink\" title=\"全局安装gulp\"></a>全局安装gulp</h2><p>输入<code>npm install gulp -g</code>命令，然后用 <code>gulp -v</code>查看是否安装完成；<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-36f34313d6f4704a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gulp-install-01.png\"></p>\n<h2 id=\"新建package-json文件\"><a href=\"#新建package-json文件\" class=\"headerlink\" title=\"新建package.json文件\"></a>新建package.json文件</h2><p> 进入你的本地项目（我的是testgulp），输入<code>npm init</code>命令，其中 name, version, description必填，其他无所谓，填完后保存，在testgulp项目下就会生成package.json文件；<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"test\"</span>, <span class=\"comment\">//必填</span></span><br><span class=\"line\"> <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,  <span class=\"comment\">//必填</span></span><br><span class=\"line\"> <span class=\"string\">\"description\"</span>: <span class=\"string\">\"This is for study gulp project !\"</span>,  <span class=\"comment\">//必填</span></span><br><span class=\"line\"> <span class=\"string\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>, </span><br><span class=\"line\"> <span class=\"string\">\"scripts\"</span>: &#123;    </span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span> </span><br><span class=\"line\"> &#125;,  </span><br><span class=\"line\"><span class=\"string\">\"author\"</span>: <span class=\"string\">\"fli\"</span>,  </span><br><span class=\"line\"><span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-6eb22f459b0b100b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gulp-install-02.jpg\"></p>\n<h2 id=\"项目内安装gulp\"><a href=\"#项目内安装gulp\" class=\"headerlink\" title=\"项目内安装gulp\"></a>项目内安装gulp</h2><p> 用<code>npm install gulp --save-dev</code>或 <code>npm install --save-dev gulp</code>命令（卸载的话将前面的命令中install换成uninstall即可）；安装完后，在package.json里能看到具体版本信息。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-c10cda7715e20176.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gulp-install-03.png\"></p>\n<h2 id=\"项目内安装gulp插件\"><a href=\"#项目内安装gulp插件\" class=\"headerlink\" title=\"项目内安装gulp插件\"></a>项目内安装gulp插件</h2><p>命令格式：<code>npm install 插件名称 --save-dev</code>或<code>npm install --save-dev 插件名称</code>；</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-198f327a97062c24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gulp-install-04.png\"></p>\n<p>安装完后，在package.json里能看到具体版本信息。此时的文件：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\"><span class=\"string\">\"name\"</span>: <span class=\"string\">\"test\"</span>, </span><br><span class=\"line\"> <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,  </span><br><span class=\"line\"> <span class=\"string\">\"description\"</span>: <span class=\"string\">\"This is for study gulp project !\"</span>,  </span><br><span class=\"line\"> <span class=\"string\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>, </span><br><span class=\"line\"> <span class=\"string\">\"scripts\"</span>: &#123;    </span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span> </span><br><span class=\"line\"> &#125;,  </span><br><span class=\"line\"><span class=\"string\">\"author\"</span>: <span class=\"string\">\"fli\"</span>,  </span><br><span class=\"line\"><span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span>,  </span><br><span class=\"line\"><span class=\"string\">\"devDependencies\"</span>: &#123;    </span><br><span class=\"line\">    <span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"^3.9.1\"</span>,    </span><br><span class=\"line\">    <span class=\"string\">\"gulp-less\"</span>: <span class=\"string\">\"^3.1.0\"</span>  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"新建gulpfile-js文件\"><a href=\"#新建gulpfile-js文件\" class=\"headerlink\" title=\"新建gulpfile.js文件\"></a>新建gulpfile.js文件</h2><p>文件如下：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*** Created by feili on 2016/9/24. */</span></span><br><span class=\"line\"><span class=\"comment\">//导入工具包 require('node_modules里对应模块')</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> gulp = require('gulp'), <span class=\"comment\">//本地安装gulp所用到的地方    </span></span><br><span class=\"line\">less = require('gulp-less');<span class=\"comment\">//定义一个testLess任务（自定义任务名称）</span></span><br><span class=\"line\">gulp.task('testLess', function () &#123;    </span><br><span class=\"line\">    gulp.src('less/index.less') <span class=\"comment\">//该任务针对的文件        </span></span><br><span class=\"line\">    .pipe(less()) <span class=\"comment\">//该任务调用的模块        </span></span><br><span class=\"line\">    .pipe(gulp.dest('css')); <span class=\"comment\">//将会在src/css下生成index.css</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task('<span class=\"keyword\">default</span>',['testLess', 'elseTask']); <span class=\"comment\">//定义默认任务 elseTask为其他任务，该示例没有定义elseTask任务</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"通过命令提示符运行gulp任务\"><a href=\"#通过命令提示符运行gulp任务\" class=\"headerlink\" title=\"通过命令提示符运行gulp任务\"></a>通过命令提示符运行gulp任务</h2><p><code>gulp default</code>或<code>gulp 任务名称</code>。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-e99dd2c98257b652.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gulp-install-05.png\"></p>"},{"layout":"pages","title":"js 获取客户端真实 IP","date":"2018-05-23T10:10:08.000Z","_content":"\njava获取客户端程序本身还有对应的对象来实现。而js却不行。搜罗了一些资料，发现比较全而好的前端获取客户端IP的方法基本都是通过三方接口。也就是调用别人写好的接口。用浏览器已有的控件ActiveXObject的控件方式，有一定的兼容性问题。\n<!-- more -->\n\n## 方法一：（所有的平台及浏览器）\n使用搜狐接口：\n```swift\n<script src=\"http://pv.sohu.com/cityjson?ie=utf-8\"></script>\n<script type=\"text/javascript\">\ndocument.write(returnCitySN[\"cip\"]+','+returnCitySN[\"cname\"])\n</script>\n```\n\n## 方法二：（所有的平台及浏览器）\n使用新浪接口：(我测试过，此方法好像不行。访问网站也不能访问了。)\n```swift\n<script type=\"text/javascript\" src=\"http://counter.sina.com.cn/ip/\" charset=\"gb2312\"></script>       <!--获取接口数据，注意charset -->\n<script type=\"text/javascript\">\ndocument.writeln(\"IP地址：\"+ILData[0]+\"<br />\");             //输出接口数据中的IP地址\ndocument.writeln(\"地址类型：\"+ILData[1]+\"<br />\");         //输出接口数据中的IP地址的类型\ndocument.writeln(\"地址类型：\"+ILData[2]+\"<br />\");         //输出接口数据中的IP地址的省市\ndocument.writeln(\"地址类型：\"+ILData[3]+\"<br />\");         //输出接口数据中的IP地址的\ndocument.writeln(\"地址类型：\"+ILData[4]+\"<br />\");         //输出接口数据中的IP地址的运营商\n</script>\n```\n\n## 方法三：\n个人Robert Hashemian写的：\n```swift\n<script language=\"JavaScript\" src=\"http://www.hashemian.com/js/visitorIP.js.php\"></script>\n<script language=\"JavaScript\">\n    VIH_BackColor = \"palegreen\";\n    VIH_ForeColor = \"navy\";\n    VIH_FontPix = \"16\";\n    VIH_DisplayFormat = \"You are visiting from:<br>IP Address: %%IP%%<br>Host: %%HOST%%\";\n    VIH_DisplayOnPage = \"yes\";\n</script>\n```\n\n## 方法四：（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）。\n利用ActiveXObject控件，ie浏览器里要开启此控件：\n```swift\n<script language=\"JavaScript\">\nfunction GetLocalIPAddr(){ var oSetting = null; var ip = null; try{ oSetting = new ActiveXObject(\"rcbdyctl.Setting\"); ip = oSetting.GetIPAddress; if (ip.length == 0){ return \"没有连接到Internet\"; } oSetting = null; }catch(e){ return ip; } return ip; } document.write(GetLocalIPAddr()+\"<br/>\")\n</script>\n```\n\n#### 参考\n* [JS获取客户端IP地址、MAC和主机名的7个方法汇总](http://www.jb51.net/article/52484.htm)\n* [js获取客户端外网ip的简单实例](http://www.jb51.net/article/43586.htm)\n","source":"_posts/ip-by-js.md","raw":"---\nlayout: pages\ntitle: js 获取客户端真实 IP\ndate: 2018-05-23 18:10:08\ntags:\n- IP\n- js\n---\n\njava获取客户端程序本身还有对应的对象来实现。而js却不行。搜罗了一些资料，发现比较全而好的前端获取客户端IP的方法基本都是通过三方接口。也就是调用别人写好的接口。用浏览器已有的控件ActiveXObject的控件方式，有一定的兼容性问题。\n<!-- more -->\n\n## 方法一：（所有的平台及浏览器）\n使用搜狐接口：\n```swift\n<script src=\"http://pv.sohu.com/cityjson?ie=utf-8\"></script>\n<script type=\"text/javascript\">\ndocument.write(returnCitySN[\"cip\"]+','+returnCitySN[\"cname\"])\n</script>\n```\n\n## 方法二：（所有的平台及浏览器）\n使用新浪接口：(我测试过，此方法好像不行。访问网站也不能访问了。)\n```swift\n<script type=\"text/javascript\" src=\"http://counter.sina.com.cn/ip/\" charset=\"gb2312\"></script>       <!--获取接口数据，注意charset -->\n<script type=\"text/javascript\">\ndocument.writeln(\"IP地址：\"+ILData[0]+\"<br />\");             //输出接口数据中的IP地址\ndocument.writeln(\"地址类型：\"+ILData[1]+\"<br />\");         //输出接口数据中的IP地址的类型\ndocument.writeln(\"地址类型：\"+ILData[2]+\"<br />\");         //输出接口数据中的IP地址的省市\ndocument.writeln(\"地址类型：\"+ILData[3]+\"<br />\");         //输出接口数据中的IP地址的\ndocument.writeln(\"地址类型：\"+ILData[4]+\"<br />\");         //输出接口数据中的IP地址的运营商\n</script>\n```\n\n## 方法三：\n个人Robert Hashemian写的：\n```swift\n<script language=\"JavaScript\" src=\"http://www.hashemian.com/js/visitorIP.js.php\"></script>\n<script language=\"JavaScript\">\n    VIH_BackColor = \"palegreen\";\n    VIH_ForeColor = \"navy\";\n    VIH_FontPix = \"16\";\n    VIH_DisplayFormat = \"You are visiting from:<br>IP Address: %%IP%%<br>Host: %%HOST%%\";\n    VIH_DisplayOnPage = \"yes\";\n</script>\n```\n\n## 方法四：（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）。\n利用ActiveXObject控件，ie浏览器里要开启此控件：\n```swift\n<script language=\"JavaScript\">\nfunction GetLocalIPAddr(){ var oSetting = null; var ip = null; try{ oSetting = new ActiveXObject(\"rcbdyctl.Setting\"); ip = oSetting.GetIPAddress; if (ip.length == 0){ return \"没有连接到Internet\"; } oSetting = null; }catch(e){ return ip; } return ip; } document.write(GetLocalIPAddr()+\"<br/>\")\n</script>\n```\n\n#### 参考\n* [JS获取客户端IP地址、MAC和主机名的7个方法汇总](http://www.jb51.net/article/52484.htm)\n* [js获取客户端外网ip的简单实例](http://www.jb51.net/article/43586.htm)\n","slug":"ip-by-js","published":1,"updated":"2018-05-29T09:10:16.605Z","comments":1,"photos":[],"link":"","_id":"cji0ejm3a000wg4l1r1h8ukwq","content":"<p>java获取客户端程序本身还有对应的对象来实现。而js却不行。搜罗了一些资料，发现比较全而好的前端获取客户端IP的方法基本都是通过三方接口。也就是调用别人写好的接口。用浏览器已有的控件ActiveXObject的控件方式，有一定的兼容性问题。<br><a id=\"more\"></a></p>\n<h2 id=\"方法一：（所有的平台及浏览器）\"><a href=\"#方法一：（所有的平台及浏览器）\" class=\"headerlink\" title=\"方法一：（所有的平台及浏览器）\"></a>方法一：（所有的平台及浏览器）</h2><p>使用搜狐接口：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"http://pv.sohu.com/cityjson?ie=utf-8\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">document.write(returnCitySN[<span class=\"string\">\"cip\"</span>]+','+returnCitySN[<span class=\"string\">\"cname\"</span>])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法二：（所有的平台及浏览器）\"><a href=\"#方法二：（所有的平台及浏览器）\" class=\"headerlink\" title=\"方法二：（所有的平台及浏览器）\"></a>方法二：（所有的平台及浏览器）</h2><p>使用新浪接口：(我测试过，此方法好像不行。访问网站也不能访问了。)<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"http://counter.sina.com.cn/ip/\"</span> charset=<span class=\"string\">\"gb2312\"</span>&gt;&lt;/script&gt;       &lt;!--获取接口数据，注意charset --&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">document.writeln(<span class=\"string\">\"IP地址：\"</span>+<span class=\"type\">ILData</span>[<span class=\"number\">0</span>]+<span class=\"string\">\"&lt;br /&gt;\"</span>);             <span class=\"comment\">//输出接口数据中的IP地址</span></span><br><span class=\"line\">document.writeln(<span class=\"string\">\"地址类型：\"</span>+<span class=\"type\">ILData</span>[<span class=\"number\">1</span>]+<span class=\"string\">\"&lt;br /&gt;\"</span>);         <span class=\"comment\">//输出接口数据中的IP地址的类型</span></span><br><span class=\"line\">document.writeln(<span class=\"string\">\"地址类型：\"</span>+<span class=\"type\">ILData</span>[<span class=\"number\">2</span>]+<span class=\"string\">\"&lt;br /&gt;\"</span>);         <span class=\"comment\">//输出接口数据中的IP地址的省市</span></span><br><span class=\"line\">document.writeln(<span class=\"string\">\"地址类型：\"</span>+<span class=\"type\">ILData</span>[<span class=\"number\">3</span>]+<span class=\"string\">\"&lt;br /&gt;\"</span>);         <span class=\"comment\">//输出接口数据中的IP地址的</span></span><br><span class=\"line\">document.writeln(<span class=\"string\">\"地址类型：\"</span>+<span class=\"type\">ILData</span>[<span class=\"number\">4</span>]+<span class=\"string\">\"&lt;br /&gt;\"</span>);         <span class=\"comment\">//输出接口数据中的IP地址的运营商</span></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法三：\"><a href=\"#方法三：\" class=\"headerlink\" title=\"方法三：\"></a>方法三：</h2><p>个人Robert Hashemian写的：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script language=<span class=\"string\">\"JavaScript\"</span> src=<span class=\"string\">\"http://www.hashemian.com/js/visitorIP.js.php\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script language=<span class=\"string\">\"JavaScript\"</span>&gt;</span><br><span class=\"line\">    <span class=\"type\">VIH_BackColor</span> = <span class=\"string\">\"palegreen\"</span>;</span><br><span class=\"line\">    <span class=\"type\">VIH_ForeColor</span> = <span class=\"string\">\"navy\"</span>;</span><br><span class=\"line\">    <span class=\"type\">VIH_FontPix</span> = <span class=\"string\">\"16\"</span>;</span><br><span class=\"line\">    <span class=\"type\">VIH_DisplayFormat</span> = <span class=\"string\">\"You are visiting from:&lt;br&gt;IP Address: %%IP%%&lt;br&gt;Host: %%HOST%%\"</span>;</span><br><span class=\"line\">    <span class=\"type\">VIH_DisplayOnPage</span> = <span class=\"string\">\"yes\"</span>;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法四：（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）。\"><a href=\"#方法四：（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）。\" class=\"headerlink\" title=\"方法四：（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）。\"></a>方法四：（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）。</h2><p>利用ActiveXObject控件，ie浏览器里要开启此控件：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script language=<span class=\"string\">\"JavaScript\"</span>&gt;</span><br><span class=\"line\">function <span class=\"type\">GetLocalIPAddr</span>()&#123; <span class=\"keyword\">var</span> oSetting = null; <span class=\"keyword\">var</span> ip = null; <span class=\"keyword\">try</span>&#123; oSetting = new <span class=\"type\">ActiveXObject</span>(<span class=\"string\">\"rcbdyctl.Setting\"</span>); ip = oSetting.<span class=\"type\">GetIPAddress</span>; <span class=\"keyword\">if</span> (ip.length == <span class=\"number\">0</span>)&#123; <span class=\"keyword\">return</span> <span class=\"string\">\"没有连接到Internet\"</span>; &#125; oSetting = null; &#125;<span class=\"keyword\">catch</span>(e)&#123; <span class=\"keyword\">return</span> ip; &#125; <span class=\"keyword\">return</span> ip; &#125; document.write(<span class=\"type\">GetLocalIPAddr</span>()+<span class=\"string\">\"&lt;br/&gt;\"</span>)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"http://www.jb51.net/article/52484.htm\" target=\"_blank\" rel=\"noopener\">JS获取客户端IP地址、MAC和主机名的7个方法汇总</a></li>\n<li><a href=\"http://www.jb51.net/article/43586.htm\" target=\"_blank\" rel=\"noopener\">js获取客户端外网ip的简单实例</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>java获取客户端程序本身还有对应的对象来实现。而js却不行。搜罗了一些资料，发现比较全而好的前端获取客户端IP的方法基本都是通过三方接口。也就是调用别人写好的接口。用浏览器已有的控件ActiveXObject的控件方式，有一定的兼容性问题。<br>","more":"</p>\n<h2 id=\"方法一：（所有的平台及浏览器）\"><a href=\"#方法一：（所有的平台及浏览器）\" class=\"headerlink\" title=\"方法一：（所有的平台及浏览器）\"></a>方法一：（所有的平台及浏览器）</h2><p>使用搜狐接口：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"http://pv.sohu.com/cityjson?ie=utf-8\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">document.write(returnCitySN[<span class=\"string\">\"cip\"</span>]+','+returnCitySN[<span class=\"string\">\"cname\"</span>])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法二：（所有的平台及浏览器）\"><a href=\"#方法二：（所有的平台及浏览器）\" class=\"headerlink\" title=\"方法二：（所有的平台及浏览器）\"></a>方法二：（所有的平台及浏览器）</h2><p>使用新浪接口：(我测试过，此方法好像不行。访问网站也不能访问了。)<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"http://counter.sina.com.cn/ip/\"</span> charset=<span class=\"string\">\"gb2312\"</span>&gt;&lt;/script&gt;       &lt;!--获取接口数据，注意charset --&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">document.writeln(<span class=\"string\">\"IP地址：\"</span>+<span class=\"type\">ILData</span>[<span class=\"number\">0</span>]+<span class=\"string\">\"&lt;br /&gt;\"</span>);             <span class=\"comment\">//输出接口数据中的IP地址</span></span><br><span class=\"line\">document.writeln(<span class=\"string\">\"地址类型：\"</span>+<span class=\"type\">ILData</span>[<span class=\"number\">1</span>]+<span class=\"string\">\"&lt;br /&gt;\"</span>);         <span class=\"comment\">//输出接口数据中的IP地址的类型</span></span><br><span class=\"line\">document.writeln(<span class=\"string\">\"地址类型：\"</span>+<span class=\"type\">ILData</span>[<span class=\"number\">2</span>]+<span class=\"string\">\"&lt;br /&gt;\"</span>);         <span class=\"comment\">//输出接口数据中的IP地址的省市</span></span><br><span class=\"line\">document.writeln(<span class=\"string\">\"地址类型：\"</span>+<span class=\"type\">ILData</span>[<span class=\"number\">3</span>]+<span class=\"string\">\"&lt;br /&gt;\"</span>);         <span class=\"comment\">//输出接口数据中的IP地址的</span></span><br><span class=\"line\">document.writeln(<span class=\"string\">\"地址类型：\"</span>+<span class=\"type\">ILData</span>[<span class=\"number\">4</span>]+<span class=\"string\">\"&lt;br /&gt;\"</span>);         <span class=\"comment\">//输出接口数据中的IP地址的运营商</span></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法三：\"><a href=\"#方法三：\" class=\"headerlink\" title=\"方法三：\"></a>方法三：</h2><p>个人Robert Hashemian写的：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script language=<span class=\"string\">\"JavaScript\"</span> src=<span class=\"string\">\"http://www.hashemian.com/js/visitorIP.js.php\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script language=<span class=\"string\">\"JavaScript\"</span>&gt;</span><br><span class=\"line\">    <span class=\"type\">VIH_BackColor</span> = <span class=\"string\">\"palegreen\"</span>;</span><br><span class=\"line\">    <span class=\"type\">VIH_ForeColor</span> = <span class=\"string\">\"navy\"</span>;</span><br><span class=\"line\">    <span class=\"type\">VIH_FontPix</span> = <span class=\"string\">\"16\"</span>;</span><br><span class=\"line\">    <span class=\"type\">VIH_DisplayFormat</span> = <span class=\"string\">\"You are visiting from:&lt;br&gt;IP Address: %%IP%%&lt;br&gt;Host: %%HOST%%\"</span>;</span><br><span class=\"line\">    <span class=\"type\">VIH_DisplayOnPage</span> = <span class=\"string\">\"yes\"</span>;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法四：（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）。\"><a href=\"#方法四：（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）。\" class=\"headerlink\" title=\"方法四：（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）。\"></a>方法四：（只针对IE且客户端的IE允许AcitiveX运行，通过平台：XP，SERVER03，2000）。</h2><p>利用ActiveXObject控件，ie浏览器里要开启此控件：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script language=<span class=\"string\">\"JavaScript\"</span>&gt;</span><br><span class=\"line\">function <span class=\"type\">GetLocalIPAddr</span>()&#123; <span class=\"keyword\">var</span> oSetting = null; <span class=\"keyword\">var</span> ip = null; <span class=\"keyword\">try</span>&#123; oSetting = new <span class=\"type\">ActiveXObject</span>(<span class=\"string\">\"rcbdyctl.Setting\"</span>); ip = oSetting.<span class=\"type\">GetIPAddress</span>; <span class=\"keyword\">if</span> (ip.length == <span class=\"number\">0</span>)&#123; <span class=\"keyword\">return</span> <span class=\"string\">\"没有连接到Internet\"</span>; &#125; oSetting = null; &#125;<span class=\"keyword\">catch</span>(e)&#123; <span class=\"keyword\">return</span> ip; &#125; <span class=\"keyword\">return</span> ip; &#125; document.write(<span class=\"type\">GetLocalIPAddr</span>()+<span class=\"string\">\"&lt;br/&gt;\"</span>)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"http://www.jb51.net/article/52484.htm\" target=\"_blank\" rel=\"noopener\">JS获取客户端IP地址、MAC和主机名的7个方法汇总</a></li>\n<li><a href=\"http://www.jb51.net/article/43586.htm\" target=\"_blank\" rel=\"noopener\">js获取客户端外网ip的简单实例</a></li>\n</ul>"},{"layout":"pages","title":"IP 定位查询","date":"2018-05-23T12:10:08.000Z","_content":"\n有时候需要访客位置信息，这时你如果拿到访客的ip，那么通过下面的ip定位的方法就能做到了。搜集了不少资料，大致罗列了网上的方法，希望对你有用。国内国外大致就这些：淘宝，腾讯，新浪，百度，IP2Location,DB-IP,纯真IP数据库，MaxMind GeoLite2，当然还有其他的。\n<!-- more -->\n\n## 调用三方的接口\n推荐新浪接口，我用了一些常用和非常用ip（根据国内外大网站的域名查询出来的ip,文章末尾会将ip列举出来）做了个大致的查询比较。\n* 新浪接口：http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=json&ip=54.239.25.200\n* 淘宝接口：http://ip.taobao.com/service/getIpInfo.php?ip=123.123.123.123\n* IP查询：http://www.ipip.net/ip.html\n\n## 调用自己本地数据库\n这种方法就要你去网上下载相应的纯真IP数据库了。\n* [http://www.ipip.net/](http://www.ipip.net/)\n* [http://lite.ip2location.com/](http://lite.ip2location.com/)\n* [https://www.maxmind.com/zh/geoip2-services-and-databases](https://www.maxmind.com/zh/geoip2-services-and-databases)\n\n## 在线查询\n\n* [https://www.ipip.net/](https://www.ipip.net/)免费版有1000次/天限制\n* [http://www.haoweichi.com/Index/iplocate](http://www.haoweichi.com/Index/iplocate)\n* [http://www.ip138.com/ips1388.asp](http://www.ip138.com/ips1388.asp)\n* [http://ip.lockview.cn/default.aspx](http://ip.lockview.cn/default.aspx)\n* [http://www.123cha.com/](http://www.123cha.com/)\n\n**IP列表**\n\n* 这几个比较偏：31.13.79.220，103.235.46.212，31.13.79.220，23.15.152.48，182.215.11.168，208.111.59.15\n* www.google.com ：208.111.59.15/19/23/27/29/30/34/38/42/44/45/49/53/57/59,93.46.8.89\n* www.microsoft.com ：118.215.11.168,182.215.11.168\n* www.apple.com/cn ：23.15.152.48,17.142.160.11,17.172.224.30,17.178.96.11\n* www.focebook.com ：31.13.79.220,179.60.192.3\n* www.twitter.com ：104.244.42.193/65\n* www.youtube.com ：74.125.200.136/190/91/93,216.58.211.46\n* www.philips.com ：118.215.81.147\n* www.linkedin.com ：103.20.94.1\n* www.amazon.com ：54.239.25.200,54.239.29.3\n* www.baidu.com ：14.215.177.37/38,103.235.46.212\n* www.alibaba.com ：205.204.101.42,110.75.112.20,140.205.94.148\n* www.qq.com ：101.226.103.106\n\n","source":"_posts/ip-lqs.md","raw":"---\nlayout: pages\ntitle: IP 定位查询\ndate: 2018-05-23 20:10:08\ntags:\n- IP\n---\n\n有时候需要访客位置信息，这时你如果拿到访客的ip，那么通过下面的ip定位的方法就能做到了。搜集了不少资料，大致罗列了网上的方法，希望对你有用。国内国外大致就这些：淘宝，腾讯，新浪，百度，IP2Location,DB-IP,纯真IP数据库，MaxMind GeoLite2，当然还有其他的。\n<!-- more -->\n\n## 调用三方的接口\n推荐新浪接口，我用了一些常用和非常用ip（根据国内外大网站的域名查询出来的ip,文章末尾会将ip列举出来）做了个大致的查询比较。\n* 新浪接口：http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=json&ip=54.239.25.200\n* 淘宝接口：http://ip.taobao.com/service/getIpInfo.php?ip=123.123.123.123\n* IP查询：http://www.ipip.net/ip.html\n\n## 调用自己本地数据库\n这种方法就要你去网上下载相应的纯真IP数据库了。\n* [http://www.ipip.net/](http://www.ipip.net/)\n* [http://lite.ip2location.com/](http://lite.ip2location.com/)\n* [https://www.maxmind.com/zh/geoip2-services-and-databases](https://www.maxmind.com/zh/geoip2-services-and-databases)\n\n## 在线查询\n\n* [https://www.ipip.net/](https://www.ipip.net/)免费版有1000次/天限制\n* [http://www.haoweichi.com/Index/iplocate](http://www.haoweichi.com/Index/iplocate)\n* [http://www.ip138.com/ips1388.asp](http://www.ip138.com/ips1388.asp)\n* [http://ip.lockview.cn/default.aspx](http://ip.lockview.cn/default.aspx)\n* [http://www.123cha.com/](http://www.123cha.com/)\n\n**IP列表**\n\n* 这几个比较偏：31.13.79.220，103.235.46.212，31.13.79.220，23.15.152.48，182.215.11.168，208.111.59.15\n* www.google.com ：208.111.59.15/19/23/27/29/30/34/38/42/44/45/49/53/57/59,93.46.8.89\n* www.microsoft.com ：118.215.11.168,182.215.11.168\n* www.apple.com/cn ：23.15.152.48,17.142.160.11,17.172.224.30,17.178.96.11\n* www.focebook.com ：31.13.79.220,179.60.192.3\n* www.twitter.com ：104.244.42.193/65\n* www.youtube.com ：74.125.200.136/190/91/93,216.58.211.46\n* www.philips.com ：118.215.81.147\n* www.linkedin.com ：103.20.94.1\n* www.amazon.com ：54.239.25.200,54.239.29.3\n* www.baidu.com ：14.215.177.37/38,103.235.46.212\n* www.alibaba.com ：205.204.101.42,110.75.112.20,140.205.94.148\n* www.qq.com ：101.226.103.106\n\n","slug":"ip-lqs","published":1,"updated":"2018-05-29T09:04:59.834Z","comments":1,"photos":[],"link":"","_id":"cji0ejm3e000zg4l1hih6dbm0","content":"<p>有时候需要访客位置信息，这时你如果拿到访客的ip，那么通过下面的ip定位的方法就能做到了。搜集了不少资料，大致罗列了网上的方法，希望对你有用。国内国外大致就这些：淘宝，腾讯，新浪，百度，IP2Location,DB-IP,纯真IP数据库，MaxMind GeoLite2，当然还有其他的。<br><a id=\"more\"></a></p>\n<h2 id=\"调用三方的接口\"><a href=\"#调用三方的接口\" class=\"headerlink\" title=\"调用三方的接口\"></a>调用三方的接口</h2><p>推荐新浪接口，我用了一些常用和非常用ip（根据国内外大网站的域名查询出来的ip,文章末尾会将ip列举出来）做了个大致的查询比较。</p>\n<ul>\n<li>新浪接口：<a href=\"http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=json&amp;ip=54.239.25.200\" target=\"_blank\" rel=\"noopener\">http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=json&amp;ip=54.239.25.200</a></li>\n<li>淘宝接口：<a href=\"http://ip.taobao.com/service/getIpInfo.php?ip=123.123.123.123\" target=\"_blank\" rel=\"noopener\">http://ip.taobao.com/service/getIpInfo.php?ip=123.123.123.123</a></li>\n<li>IP查询：<a href=\"http://www.ipip.net/ip.html\" target=\"_blank\" rel=\"noopener\">http://www.ipip.net/ip.html</a></li>\n</ul>\n<h2 id=\"调用自己本地数据库\"><a href=\"#调用自己本地数据库\" class=\"headerlink\" title=\"调用自己本地数据库\"></a>调用自己本地数据库</h2><p>这种方法就要你去网上下载相应的纯真IP数据库了。</p>\n<ul>\n<li><a href=\"http://www.ipip.net/\" target=\"_blank\" rel=\"noopener\">http://www.ipip.net/</a></li>\n<li><a href=\"http://lite.ip2location.com/\" target=\"_blank\" rel=\"noopener\">http://lite.ip2location.com/</a></li>\n<li><a href=\"https://www.maxmind.com/zh/geoip2-services-and-databases\" target=\"_blank\" rel=\"noopener\">https://www.maxmind.com/zh/geoip2-services-and-databases</a></li>\n</ul>\n<h2 id=\"在线查询\"><a href=\"#在线查询\" class=\"headerlink\" title=\"在线查询\"></a>在线查询</h2><ul>\n<li><a href=\"https://www.ipip.net/\" target=\"_blank\" rel=\"noopener\">https://www.ipip.net/</a>免费版有1000次/天限制</li>\n<li><a href=\"http://www.haoweichi.com/Index/iplocate\" target=\"_blank\" rel=\"noopener\">http://www.haoweichi.com/Index/iplocate</a></li>\n<li><a href=\"http://www.ip138.com/ips1388.asp\" target=\"_blank\" rel=\"noopener\">http://www.ip138.com/ips1388.asp</a></li>\n<li><a href=\"http://ip.lockview.cn/default.aspx\" target=\"_blank\" rel=\"noopener\">http://ip.lockview.cn/default.aspx</a></li>\n<li><a href=\"http://www.123cha.com/\" target=\"_blank\" rel=\"noopener\">http://www.123cha.com/</a></li>\n</ul>\n<p><strong>IP列表</strong></p>\n<ul>\n<li>这几个比较偏：31.13.79.220，103.235.46.212，31.13.79.220，23.15.152.48，182.215.11.168，208.111.59.15</li>\n<li><a href=\"http://www.google.com\" target=\"_blank\" rel=\"noopener\">www.google.com</a> ：208.111.59.15/19/23/27/29/30/34/38/42/44/45/49/53/57/59,93.46.8.89</li>\n<li><a href=\"http://www.microsoft.com\" target=\"_blank\" rel=\"noopener\">www.microsoft.com</a> ：118.215.11.168,182.215.11.168</li>\n<li><a href=\"http://www.apple.com/cn\" target=\"_blank\" rel=\"noopener\">www.apple.com/cn</a> ：23.15.152.48,17.142.160.11,17.172.224.30,17.178.96.11</li>\n<li><a href=\"http://www.focebook.com\" target=\"_blank\" rel=\"noopener\">www.focebook.com</a> ：31.13.79.220,179.60.192.3</li>\n<li><a href=\"http://www.twitter.com\" target=\"_blank\" rel=\"noopener\">www.twitter.com</a> ：104.244.42.193/65</li>\n<li><a href=\"http://www.youtube.com\" target=\"_blank\" rel=\"noopener\">www.youtube.com</a> ：74.125.200.136/190/91/93,216.58.211.46</li>\n<li><a href=\"http://www.philips.com\" target=\"_blank\" rel=\"noopener\">www.philips.com</a> ：118.215.81.147</li>\n<li><a href=\"http://www.linkedin.com\" target=\"_blank\" rel=\"noopener\">www.linkedin.com</a> ：103.20.94.1</li>\n<li><a href=\"http://www.amazon.com\" target=\"_blank\" rel=\"noopener\">www.amazon.com</a> ：54.239.25.200,54.239.29.3</li>\n<li><a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">www.baidu.com</a> ：14.215.177.37/38,103.235.46.212</li>\n<li><a href=\"http://www.alibaba.com\" target=\"_blank\" rel=\"noopener\">www.alibaba.com</a> ：205.204.101.42,110.75.112.20,140.205.94.148</li>\n<li><a href=\"http://www.qq.com\" target=\"_blank\" rel=\"noopener\">www.qq.com</a> ：101.226.103.106</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>有时候需要访客位置信息，这时你如果拿到访客的ip，那么通过下面的ip定位的方法就能做到了。搜集了不少资料，大致罗列了网上的方法，希望对你有用。国内国外大致就这些：淘宝，腾讯，新浪，百度，IP2Location,DB-IP,纯真IP数据库，MaxMind GeoLite2，当然还有其他的。<br>","more":"</p>\n<h2 id=\"调用三方的接口\"><a href=\"#调用三方的接口\" class=\"headerlink\" title=\"调用三方的接口\"></a>调用三方的接口</h2><p>推荐新浪接口，我用了一些常用和非常用ip（根据国内外大网站的域名查询出来的ip,文章末尾会将ip列举出来）做了个大致的查询比较。</p>\n<ul>\n<li>新浪接口：<a href=\"http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=json&amp;ip=54.239.25.200\" target=\"_blank\" rel=\"noopener\">http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=json&amp;ip=54.239.25.200</a></li>\n<li>淘宝接口：<a href=\"http://ip.taobao.com/service/getIpInfo.php?ip=123.123.123.123\" target=\"_blank\" rel=\"noopener\">http://ip.taobao.com/service/getIpInfo.php?ip=123.123.123.123</a></li>\n<li>IP查询：<a href=\"http://www.ipip.net/ip.html\" target=\"_blank\" rel=\"noopener\">http://www.ipip.net/ip.html</a></li>\n</ul>\n<h2 id=\"调用自己本地数据库\"><a href=\"#调用自己本地数据库\" class=\"headerlink\" title=\"调用自己本地数据库\"></a>调用自己本地数据库</h2><p>这种方法就要你去网上下载相应的纯真IP数据库了。</p>\n<ul>\n<li><a href=\"http://www.ipip.net/\" target=\"_blank\" rel=\"noopener\">http://www.ipip.net/</a></li>\n<li><a href=\"http://lite.ip2location.com/\" target=\"_blank\" rel=\"noopener\">http://lite.ip2location.com/</a></li>\n<li><a href=\"https://www.maxmind.com/zh/geoip2-services-and-databases\" target=\"_blank\" rel=\"noopener\">https://www.maxmind.com/zh/geoip2-services-and-databases</a></li>\n</ul>\n<h2 id=\"在线查询\"><a href=\"#在线查询\" class=\"headerlink\" title=\"在线查询\"></a>在线查询</h2><ul>\n<li><a href=\"https://www.ipip.net/\" target=\"_blank\" rel=\"noopener\">https://www.ipip.net/</a>免费版有1000次/天限制</li>\n<li><a href=\"http://www.haoweichi.com/Index/iplocate\" target=\"_blank\" rel=\"noopener\">http://www.haoweichi.com/Index/iplocate</a></li>\n<li><a href=\"http://www.ip138.com/ips1388.asp\" target=\"_blank\" rel=\"noopener\">http://www.ip138.com/ips1388.asp</a></li>\n<li><a href=\"http://ip.lockview.cn/default.aspx\" target=\"_blank\" rel=\"noopener\">http://ip.lockview.cn/default.aspx</a></li>\n<li><a href=\"http://www.123cha.com/\" target=\"_blank\" rel=\"noopener\">http://www.123cha.com/</a></li>\n</ul>\n<p><strong>IP列表</strong></p>\n<ul>\n<li>这几个比较偏：31.13.79.220，103.235.46.212，31.13.79.220，23.15.152.48，182.215.11.168，208.111.59.15</li>\n<li><a href=\"http://www.google.com\" target=\"_blank\" rel=\"noopener\">www.google.com</a> ：208.111.59.15/19/23/27/29/30/34/38/42/44/45/49/53/57/59,93.46.8.89</li>\n<li><a href=\"http://www.microsoft.com\" target=\"_blank\" rel=\"noopener\">www.microsoft.com</a> ：118.215.11.168,182.215.11.168</li>\n<li><a href=\"http://www.apple.com/cn\" target=\"_blank\" rel=\"noopener\">www.apple.com/cn</a> ：23.15.152.48,17.142.160.11,17.172.224.30,17.178.96.11</li>\n<li><a href=\"http://www.focebook.com\" target=\"_blank\" rel=\"noopener\">www.focebook.com</a> ：31.13.79.220,179.60.192.3</li>\n<li><a href=\"http://www.twitter.com\" target=\"_blank\" rel=\"noopener\">www.twitter.com</a> ：104.244.42.193/65</li>\n<li><a href=\"http://www.youtube.com\" target=\"_blank\" rel=\"noopener\">www.youtube.com</a> ：74.125.200.136/190/91/93,216.58.211.46</li>\n<li><a href=\"http://www.philips.com\" target=\"_blank\" rel=\"noopener\">www.philips.com</a> ：118.215.81.147</li>\n<li><a href=\"http://www.linkedin.com\" target=\"_blank\" rel=\"noopener\">www.linkedin.com</a> ：103.20.94.1</li>\n<li><a href=\"http://www.amazon.com\" target=\"_blank\" rel=\"noopener\">www.amazon.com</a> ：54.239.25.200,54.239.29.3</li>\n<li><a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">www.baidu.com</a> ：14.215.177.37/38,103.235.46.212</li>\n<li><a href=\"http://www.alibaba.com\" target=\"_blank\" rel=\"noopener\">www.alibaba.com</a> ：205.204.101.42,110.75.112.20,140.205.94.148</li>\n<li><a href=\"http://www.qq.com\" target=\"_blank\" rel=\"noopener\">www.qq.com</a> ：101.226.103.106</li>\n</ul>"},{"layout":"pages","title":"移动端web网页的 css 设置","date":"2016-05-06T03:00:00.000Z","_content":"\n做网页自适应或移动端web页面开发时，总是被浏览器默认自带的样式折腾的死去活来，然后你就想将他们重置成常规默认设置，然后自定义样式。\n<!-- more -->\n\n### css样式\n1. **-webkit-tap-highlight-color**\n*-webkit-tap-highlight-color: rgba(0,0,0,0);*  //透明度设置为0，去掉点击链接和文本框对象时默认的灰色半透明覆盖层(iOS)或者虚框(Android)   \n*-webkit-tap-highlight-color: rgba(255,0,0,0.5);*  //利用此属性，设置touch时链接区域高亮为50%的透明红，只在ios上起作用。android上只要使用了此属性就表现为边框。在body上加此属性，这样就保证body的点击区域效果一致了\n\n2. **outline：none**   \n(1)在pc端为a标签定义这个样式的目的是为了取消ie浏览器下点击a标签时出现的虚线。ie7及以下浏览器还不识别此属性，需要在a标签上添加hidefocus=\"true\"   \n(2)input，textarea{outline:none} 取消chrome下默认的文本框聚焦样式   \n(3)在移动端是不起作用的，想要去除文本框的默认样式可以使用-webkit-appearance，聚焦时候默认样式的取消是-webkit-tap-highlight-color。看到一些移动端reset文件加了此属性，其实是多余。  \n 比如：   \n/*防止获取焦点时，出现边框*/   \n*:focus {   outline: 0;   -webkit-tap-highlight-color: transparent   }*\n\n3. **-webkit-appearance**   \n*-webkit-appearance: none; * //消除输入框和按钮的原生外观，在iOS上加上这个属性才能给按钮和输入框自定义样式   \n不同type的input使用这个属性之后表现不一。text、button无样式，radio、checkbox直接消失、   \n另外，select加上这个属性后，select的高度就可以改变了。如：*select{-webkit-appearance:none;}*\n\n4. **-webkit-user-select**   \n*-webkit-user-select: none;*  // 禁止页面文字选择 ，此属性不继承，一般加在body上规定整个body的文字都不会自动调整\n\n5. **-webkit-text-size-adjust**   \n*-webkit-text-size-adjust: none;*  //禁止文字自动调整大小(默认情况下旋转设备的时候文字大小会发生变化)，此属性也不继承，一般加在body上规定整个body的文字都不会自动调整\n\n6. **-webkit-touch-callout**   \n*-webkit-touch-callout:none;*  //禁用长按页面时的弹出菜单(iOS下有效) ,img和a标签都要加\n\n7. **-webkit-overflow-scrolling**  \n*-webkit-overflow-scrolling: touch;*  //局部滚动(仅iOS 5以上支持)\n\n8. **-webkit-box-sizing**  \n*-webkit-box-sizing: border-box;*  //转变盒模型（width定义变为包括padding，border-width，不含margin）\n\n#### 参考：\n* [移动端页面默认样式重置](http://blog.sina.com.cn/s/blog_51048da70102uyjp.html)\n* [手机端web页面css初始化－去除浏览器默认效果（附详解）](http://slimcheng.com/archives/179)\n* [移动端重要的几个CSS3属性设置](http://www.th7.cn/web/js/201508/118471.shtml)\n","source":"_posts/mobile-css-reset.md","raw":"---\nlayout: pages\ntitle: 移动端web网页的 css 设置\ndate: 2016-05-06 11:00:00\ntags:\n- css\n---\n\n做网页自适应或移动端web页面开发时，总是被浏览器默认自带的样式折腾的死去活来，然后你就想将他们重置成常规默认设置，然后自定义样式。\n<!-- more -->\n\n### css样式\n1. **-webkit-tap-highlight-color**\n*-webkit-tap-highlight-color: rgba(0,0,0,0);*  //透明度设置为0，去掉点击链接和文本框对象时默认的灰色半透明覆盖层(iOS)或者虚框(Android)   \n*-webkit-tap-highlight-color: rgba(255,0,0,0.5);*  //利用此属性，设置touch时链接区域高亮为50%的透明红，只在ios上起作用。android上只要使用了此属性就表现为边框。在body上加此属性，这样就保证body的点击区域效果一致了\n\n2. **outline：none**   \n(1)在pc端为a标签定义这个样式的目的是为了取消ie浏览器下点击a标签时出现的虚线。ie7及以下浏览器还不识别此属性，需要在a标签上添加hidefocus=\"true\"   \n(2)input，textarea{outline:none} 取消chrome下默认的文本框聚焦样式   \n(3)在移动端是不起作用的，想要去除文本框的默认样式可以使用-webkit-appearance，聚焦时候默认样式的取消是-webkit-tap-highlight-color。看到一些移动端reset文件加了此属性，其实是多余。  \n 比如：   \n/*防止获取焦点时，出现边框*/   \n*:focus {   outline: 0;   -webkit-tap-highlight-color: transparent   }*\n\n3. **-webkit-appearance**   \n*-webkit-appearance: none; * //消除输入框和按钮的原生外观，在iOS上加上这个属性才能给按钮和输入框自定义样式   \n不同type的input使用这个属性之后表现不一。text、button无样式，radio、checkbox直接消失、   \n另外，select加上这个属性后，select的高度就可以改变了。如：*select{-webkit-appearance:none;}*\n\n4. **-webkit-user-select**   \n*-webkit-user-select: none;*  // 禁止页面文字选择 ，此属性不继承，一般加在body上规定整个body的文字都不会自动调整\n\n5. **-webkit-text-size-adjust**   \n*-webkit-text-size-adjust: none;*  //禁止文字自动调整大小(默认情况下旋转设备的时候文字大小会发生变化)，此属性也不继承，一般加在body上规定整个body的文字都不会自动调整\n\n6. **-webkit-touch-callout**   \n*-webkit-touch-callout:none;*  //禁用长按页面时的弹出菜单(iOS下有效) ,img和a标签都要加\n\n7. **-webkit-overflow-scrolling**  \n*-webkit-overflow-scrolling: touch;*  //局部滚动(仅iOS 5以上支持)\n\n8. **-webkit-box-sizing**  \n*-webkit-box-sizing: border-box;*  //转变盒模型（width定义变为包括padding，border-width，不含margin）\n\n#### 参考：\n* [移动端页面默认样式重置](http://blog.sina.com.cn/s/blog_51048da70102uyjp.html)\n* [手机端web页面css初始化－去除浏览器默认效果（附详解）](http://slimcheng.com/archives/179)\n* [移动端重要的几个CSS3属性设置](http://www.th7.cn/web/js/201508/118471.shtml)\n","slug":"mobile-css-reset","published":1,"updated":"2018-05-30T01:36:28.493Z","comments":1,"photos":[],"link":"","_id":"cji0ejm3j0012g4l1g9x3u6px","content":"<p>做网页自适应或移动端web页面开发时，总是被浏览器默认自带的样式折腾的死去活来，然后你就想将他们重置成常规默认设置，然后自定义样式。<br><a id=\"more\"></a></p>\n<h3 id=\"css样式\"><a href=\"#css样式\" class=\"headerlink\" title=\"css样式\"></a>css样式</h3><ol>\n<li><p><strong>-webkit-tap-highlight-color</strong><br><em>-webkit-tap-highlight-color: rgba(0,0,0,0);</em>  //透明度设置为0，去掉点击链接和文本框对象时默认的灰色半透明覆盖层(iOS)或者虚框(Android)<br><em>-webkit-tap-highlight-color: rgba(255,0,0,0.5);</em>  //利用此属性，设置touch时链接区域高亮为50%的透明红，只在ios上起作用。android上只要使用了此属性就表现为边框。在body上加此属性，这样就保证body的点击区域效果一致了</p>\n</li>\n<li><p><strong>outline：none</strong><br>(1)在pc端为a标签定义这个样式的目的是为了取消ie浏览器下点击a标签时出现的虚线。ie7及以下浏览器还不识别此属性，需要在a标签上添加hidefocus=”true”<br>(2)input，textarea{outline:none} 取消chrome下默认的文本框聚焦样式<br>(3)在移动端是不起作用的，想要去除文本框的默认样式可以使用-webkit-appearance，聚焦时候默认样式的取消是-webkit-tap-highlight-color。看到一些移动端reset文件加了此属性，其实是多余。<br>比如：<br>/<em>防止获取焦点时，出现边框</em>/<br><em>:focus {   outline: 0;   -webkit-tap-highlight-color: transparent   }</em></p>\n</li>\n<li><p><strong>-webkit-appearance</strong><br><em>-webkit-appearance: none; </em> //消除输入框和按钮的原生外观，在iOS上加上这个属性才能给按钮和输入框自定义样式<br>不同type的input使用这个属性之后表现不一。text、button无样式，radio、checkbox直接消失、<br>另外，select加上这个属性后，select的高度就可以改变了。如：<em>select{-webkit-appearance:none;}</em></p>\n</li>\n<li><p><strong>-webkit-user-select</strong><br><em>-webkit-user-select: none;</em>  // 禁止页面文字选择 ，此属性不继承，一般加在body上规定整个body的文字都不会自动调整</p>\n</li>\n<li><p><strong>-webkit-text-size-adjust</strong><br><em>-webkit-text-size-adjust: none;</em>  //禁止文字自动调整大小(默认情况下旋转设备的时候文字大小会发生变化)，此属性也不继承，一般加在body上规定整个body的文字都不会自动调整</p>\n</li>\n<li><p><strong>-webkit-touch-callout</strong><br><em>-webkit-touch-callout:none;</em>  //禁用长按页面时的弹出菜单(iOS下有效) ,img和a标签都要加</p>\n</li>\n<li><p><strong>-webkit-overflow-scrolling</strong><br><em>-webkit-overflow-scrolling: touch;</em>  //局部滚动(仅iOS 5以上支持)</p>\n</li>\n<li><p><strong>-webkit-box-sizing</strong><br><em>-webkit-box-sizing: border-box;</em>  //转变盒模型（width定义变为包括padding，border-width，不含margin）</p>\n</li>\n</ol>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://blog.sina.com.cn/s/blog_51048da70102uyjp.html\" target=\"_blank\" rel=\"noopener\">移动端页面默认样式重置</a></li>\n<li><a href=\"http://slimcheng.com/archives/179\" target=\"_blank\" rel=\"noopener\">手机端web页面css初始化－去除浏览器默认效果（附详解）</a></li>\n<li><a href=\"http://www.th7.cn/web/js/201508/118471.shtml\" target=\"_blank\" rel=\"noopener\">移动端重要的几个CSS3属性设置</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>做网页自适应或移动端web页面开发时，总是被浏览器默认自带的样式折腾的死去活来，然后你就想将他们重置成常规默认设置，然后自定义样式。<br>","more":"</p>\n<h3 id=\"css样式\"><a href=\"#css样式\" class=\"headerlink\" title=\"css样式\"></a>css样式</h3><ol>\n<li><p><strong>-webkit-tap-highlight-color</strong><br><em>-webkit-tap-highlight-color: rgba(0,0,0,0);</em>  //透明度设置为0，去掉点击链接和文本框对象时默认的灰色半透明覆盖层(iOS)或者虚框(Android)<br><em>-webkit-tap-highlight-color: rgba(255,0,0,0.5);</em>  //利用此属性，设置touch时链接区域高亮为50%的透明红，只在ios上起作用。android上只要使用了此属性就表现为边框。在body上加此属性，这样就保证body的点击区域效果一致了</p>\n</li>\n<li><p><strong>outline：none</strong><br>(1)在pc端为a标签定义这个样式的目的是为了取消ie浏览器下点击a标签时出现的虚线。ie7及以下浏览器还不识别此属性，需要在a标签上添加hidefocus=”true”<br>(2)input，textarea{outline:none} 取消chrome下默认的文本框聚焦样式<br>(3)在移动端是不起作用的，想要去除文本框的默认样式可以使用-webkit-appearance，聚焦时候默认样式的取消是-webkit-tap-highlight-color。看到一些移动端reset文件加了此属性，其实是多余。<br>比如：<br>/<em>防止获取焦点时，出现边框</em>/<br><em>:focus {   outline: 0;   -webkit-tap-highlight-color: transparent   }</em></p>\n</li>\n<li><p><strong>-webkit-appearance</strong><br><em>-webkit-appearance: none; </em> //消除输入框和按钮的原生外观，在iOS上加上这个属性才能给按钮和输入框自定义样式<br>不同type的input使用这个属性之后表现不一。text、button无样式，radio、checkbox直接消失、<br>另外，select加上这个属性后，select的高度就可以改变了。如：<em>select{-webkit-appearance:none;}</em></p>\n</li>\n<li><p><strong>-webkit-user-select</strong><br><em>-webkit-user-select: none;</em>  // 禁止页面文字选择 ，此属性不继承，一般加在body上规定整个body的文字都不会自动调整</p>\n</li>\n<li><p><strong>-webkit-text-size-adjust</strong><br><em>-webkit-text-size-adjust: none;</em>  //禁止文字自动调整大小(默认情况下旋转设备的时候文字大小会发生变化)，此属性也不继承，一般加在body上规定整个body的文字都不会自动调整</p>\n</li>\n<li><p><strong>-webkit-touch-callout</strong><br><em>-webkit-touch-callout:none;</em>  //禁用长按页面时的弹出菜单(iOS下有效) ,img和a标签都要加</p>\n</li>\n<li><p><strong>-webkit-overflow-scrolling</strong><br><em>-webkit-overflow-scrolling: touch;</em>  //局部滚动(仅iOS 5以上支持)</p>\n</li>\n<li><p><strong>-webkit-box-sizing</strong><br><em>-webkit-box-sizing: border-box;</em>  //转变盒模型（width定义变为包括padding，border-width，不含margin）</p>\n</li>\n</ol>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://blog.sina.com.cn/s/blog_51048da70102uyjp.html\" target=\"_blank\" rel=\"noopener\">移动端页面默认样式重置</a></li>\n<li><a href=\"http://slimcheng.com/archives/179\" target=\"_blank\" rel=\"noopener\">手机端web页面css初始化－去除浏览器默认效果（附详解）</a></li>\n<li><a href=\"http://www.th7.cn/web/js/201508/118471.shtml\" target=\"_blank\" rel=\"noopener\">移动端重要的几个CSS3属性设置</a></li>\n</ul>"},{"layout":"pages","title":"移动端web网页的 meta 设置","date":"2016-05-06T08:00:00.000Z","_content":"\n为了让手机网页有更好的体验，需要重置一些meta。\n<!-- more -->\n\n### 代码\n```swift\n<meta charset='utf-8'><!-- 声明文档使用的字符编码 -->\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/><!-- 优先使用 IE 最新版本和 Chrome -->\n<meta name=\"description\" content=\"不超过150个字符\"/><!-- 页面描述 -->\n<meta name=\"keywords\" content=\"\"/><!-- 页面关键词 -->\n<meta name=\"author\" content=\"name, email@gmail.com\"/><!-- 网页作者 -->\n<!-- \nall：文件将被检索，且页面上的链接可以被查询； \nnone：文件将不被检索，且页面上的链接不可以被查询；\nindex：文件将被检索； \nfollow：页面上的链接可以被查询； \nnoindex：文件将不被检索； \nnofollow：页面上的链接不可以被查询。 \n-->\n<meta name=\"robots\" content=\"index,follow\"/><!-- 搜索引擎抓取 -->\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no\"><!-- 为移动设备添加 viewport, `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz , 不过我倾向于加上`width=device-width`，毕竟iphone5渐渐会被淘汰-->\n<meta name=\"renderer\" content=\"webkit\"><!-- 启用360浏览器的极速模式(webkit) -->\n<meta name=\"format-detection\" content=\"telphone=no, email=no\"/><!-- 忽略页面中的数字识别为电话，忽略email识别-->\n<link rel=\"shortcut icon\" type=\"image/ico\" href=\"/favicon.ico\"/><!-- 添加 favicon icon -->\n<!-- iOS 设备 begin -->\n    \n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/><!-- 当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari (ios7.0版本以后，safari上已看不到效果) -->\n<meta name=\"apple-touch-fullscreen\" content=\"yes\"/><!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 -->\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"/><!-- 设置苹果工具栏颜色:默认值为 default（白色），可以定为 black（黑色）和 black-translucent（灰色半透明）； -->\n<meta name=\"apple-mobile-web-app-title\" content=\"标题\"><!-- 添加到主屏后的标题（iOS 6 新增） -->\n<meta name=\"apple-itunes-app\" content=\"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL\"><!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） -->\n<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" /><!-- 不让百度转码 -->\n<meta name=\"HandheldFriendly\" content=\"true\"><!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 -->\n<meta name=\"MobileOptimized\" content=\"320\"><!-- 微软的老式浏览器 -->\n<meta name=\"screen-orientation\" content=\"portrait\"><!-- uc强制竖屏 -->\n<meta name=\"x5-orientation\" content=\"portrait\"><!-- QQ强制竖屏 -->\n<meta name=\"full-screen\" content=\"yes\"><!-- UC强制全屏 -->\n<meta name=\"x5-fullscreen\" content=\"true\"><!-- QQ强制全屏 -->\n<meta name=\"browsermode\" content=\"application\"><!-- UC应用模式 -->\n<meta name=\"x5-page-mode\" content=\"app\"><!-- QQ应用模式 -->\n<meta name=\"msapplication-tap-highlight\" content=\"no\"><!-- windows phone 点击无高光 -->\n\n<!-- iOS 图标 begin -->\n<!--网站添加至ios桌面时的图标-->\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"57x57\" href=\"table_ico57.png\"><!-- iPhone 和 iTouch，默认 57x57 像素，必须有 -->\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"72x72\" href=\"table_ico72.png\">\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"114x114\" href=\"table_ico114.png\"><!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 -->\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"144x144\" href=\"table_ico144.png\"><!-- Retina iPad，144x144 像素，可以没有，但推荐有 -->\n<!-- iOS 图标 end -->\n\n<!-- iOS 启动画面 begin -->\n<link rel=\"apple-touch-startup-image\" sizes=\"768x1004\" href=\"/splash-screen-768x1004.png\"/><!-- iPad 竖屏 768 x 1004（标准分辨率） -->\n<link rel=\"apple-touch-startup-image\" sizes=\"1024x748\" href=\"/Default-Portrait-1024x748.png\"/><!-- iPad 横屏 1024x748（标准分辨率） -->\n<link rel=\"apple-touch-startup-image\" sizes=\"1536x2008\" href=\"/splash-screen-1536x2008.png\"/><!-- iPad 竖屏 1536x2008（Retina） -->\n<link rel=\"apple-touch-startup-image\" sizes=\"2048x1496\" href=\"/splash-screen-2048x1496.png\"/><!-- iPad 横屏 2048x1496（Retina） -->\n<link rel=\"apple-touch-startup-image\" href=\"/splash-screen-320x480.png\"/><!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) -->\n<link rel=\"apple-touch-startup-image\" sizes=\"640x960\" href=\"/splash-screen-640x960.png\"/><!-- iPhone/iPod Touch 竖屏 640x960 (Retina) -->\n<link rel=\"apple-touch-startup-image\" sizes=\"640x1136\" href=\"/splash-screen-640x1136.png\"/><!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) -->\n<!-- iOS 启动画面 end -->\n<!-- iOS 设备 end -->\n\n<meta name=\"msapplication-TileColor\" content=\"#000\"/><!-- Windows 8 磁贴颜色 -->\n<meta name=\"msapplication-TileImage\" content=\"icon.png\"/><!-- Windows 8 磁贴图标 -->\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"/rss.xml\"/><!-- 添加 RSS 订阅 -->\n\n<!-- sns 社交标签 begin -->\n<!-- 参考微博API -->\n<meta property=\"og:type\" content=\"类型\" />\n<meta property=\"og:url\" content=\"URL地址\" />\n<meta property=\"og:title\" content=\"标题\" />\n<meta property=\"og:image\" content=\"图片\" />\n<meta property=\"og:description\" content=\"描述\" />\n<!-- sns 社交标签 end -->\n```\n1.使用特殊链接：\n如果你关闭自动识别后 ，又希望某些电话号码能够链接到 iPhone 的拨号功能 ，那么可以通过这样来声明电话链接\n`<a href=\"tel:12345654321\">打电话给我</a>`\n`<a href=\"sms:12345654321\">发短信</a>`\n\n或用于单元格：\n`<td onclick=\"location.href='tel:122'\">`\n\n2.自动大写与自动修正：\n要关闭这两项功能，可以通过autocapitalize 与autocorrect 这两个选项：\n`<input type=\"text\" autocapitalize=\"off\" autocorrect=\"off\" />`\n\n#### 参考：\n* [关于meta知多少](http://www.cnblogs.com/kuikui/p/3590673.html)\n* [手机端页面开发心得（1）——meta设置](http://slimcheng.com/archives/30)\n* [移动前端头部标签(HTML5 head meta)](http://my.oschina.net/u/1040928/blog/375100)\n* [移动端 meta](http://www.cnblogs.com/shxydx/articles/2856882.html)\n* [移动平台对 META 标签的定义](http://www.cssue.com/xhtml-css/html5-css3/mobile-meta.html)\n","source":"_posts/mobile-meta.md","raw":"---\nlayout: pages\ntitle: 移动端web网页的 meta 设置\ndate: 2016-05-06 16:00:00\ntags:\n- css\n---\n\n为了让手机网页有更好的体验，需要重置一些meta。\n<!-- more -->\n\n### 代码\n```swift\n<meta charset='utf-8'><!-- 声明文档使用的字符编码 -->\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/><!-- 优先使用 IE 最新版本和 Chrome -->\n<meta name=\"description\" content=\"不超过150个字符\"/><!-- 页面描述 -->\n<meta name=\"keywords\" content=\"\"/><!-- 页面关键词 -->\n<meta name=\"author\" content=\"name, email@gmail.com\"/><!-- 网页作者 -->\n<!-- \nall：文件将被检索，且页面上的链接可以被查询； \nnone：文件将不被检索，且页面上的链接不可以被查询；\nindex：文件将被检索； \nfollow：页面上的链接可以被查询； \nnoindex：文件将不被检索； \nnofollow：页面上的链接不可以被查询。 \n-->\n<meta name=\"robots\" content=\"index,follow\"/><!-- 搜索引擎抓取 -->\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no\"><!-- 为移动设备添加 viewport, `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz , 不过我倾向于加上`width=device-width`，毕竟iphone5渐渐会被淘汰-->\n<meta name=\"renderer\" content=\"webkit\"><!-- 启用360浏览器的极速模式(webkit) -->\n<meta name=\"format-detection\" content=\"telphone=no, email=no\"/><!-- 忽略页面中的数字识别为电话，忽略email识别-->\n<link rel=\"shortcut icon\" type=\"image/ico\" href=\"/favicon.ico\"/><!-- 添加 favicon icon -->\n<!-- iOS 设备 begin -->\n    \n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/><!-- 当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari (ios7.0版本以后，safari上已看不到效果) -->\n<meta name=\"apple-touch-fullscreen\" content=\"yes\"/><!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 -->\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"/><!-- 设置苹果工具栏颜色:默认值为 default（白色），可以定为 black（黑色）和 black-translucent（灰色半透明）； -->\n<meta name=\"apple-mobile-web-app-title\" content=\"标题\"><!-- 添加到主屏后的标题（iOS 6 新增） -->\n<meta name=\"apple-itunes-app\" content=\"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL\"><!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） -->\n<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" /><!-- 不让百度转码 -->\n<meta name=\"HandheldFriendly\" content=\"true\"><!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 -->\n<meta name=\"MobileOptimized\" content=\"320\"><!-- 微软的老式浏览器 -->\n<meta name=\"screen-orientation\" content=\"portrait\"><!-- uc强制竖屏 -->\n<meta name=\"x5-orientation\" content=\"portrait\"><!-- QQ强制竖屏 -->\n<meta name=\"full-screen\" content=\"yes\"><!-- UC强制全屏 -->\n<meta name=\"x5-fullscreen\" content=\"true\"><!-- QQ强制全屏 -->\n<meta name=\"browsermode\" content=\"application\"><!-- UC应用模式 -->\n<meta name=\"x5-page-mode\" content=\"app\"><!-- QQ应用模式 -->\n<meta name=\"msapplication-tap-highlight\" content=\"no\"><!-- windows phone 点击无高光 -->\n\n<!-- iOS 图标 begin -->\n<!--网站添加至ios桌面时的图标-->\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"57x57\" href=\"table_ico57.png\"><!-- iPhone 和 iTouch，默认 57x57 像素，必须有 -->\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"72x72\" href=\"table_ico72.png\">\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"114x114\" href=\"table_ico114.png\"><!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 -->\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"144x144\" href=\"table_ico144.png\"><!-- Retina iPad，144x144 像素，可以没有，但推荐有 -->\n<!-- iOS 图标 end -->\n\n<!-- iOS 启动画面 begin -->\n<link rel=\"apple-touch-startup-image\" sizes=\"768x1004\" href=\"/splash-screen-768x1004.png\"/><!-- iPad 竖屏 768 x 1004（标准分辨率） -->\n<link rel=\"apple-touch-startup-image\" sizes=\"1024x748\" href=\"/Default-Portrait-1024x748.png\"/><!-- iPad 横屏 1024x748（标准分辨率） -->\n<link rel=\"apple-touch-startup-image\" sizes=\"1536x2008\" href=\"/splash-screen-1536x2008.png\"/><!-- iPad 竖屏 1536x2008（Retina） -->\n<link rel=\"apple-touch-startup-image\" sizes=\"2048x1496\" href=\"/splash-screen-2048x1496.png\"/><!-- iPad 横屏 2048x1496（Retina） -->\n<link rel=\"apple-touch-startup-image\" href=\"/splash-screen-320x480.png\"/><!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) -->\n<link rel=\"apple-touch-startup-image\" sizes=\"640x960\" href=\"/splash-screen-640x960.png\"/><!-- iPhone/iPod Touch 竖屏 640x960 (Retina) -->\n<link rel=\"apple-touch-startup-image\" sizes=\"640x1136\" href=\"/splash-screen-640x1136.png\"/><!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) -->\n<!-- iOS 启动画面 end -->\n<!-- iOS 设备 end -->\n\n<meta name=\"msapplication-TileColor\" content=\"#000\"/><!-- Windows 8 磁贴颜色 -->\n<meta name=\"msapplication-TileImage\" content=\"icon.png\"/><!-- Windows 8 磁贴图标 -->\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"/rss.xml\"/><!-- 添加 RSS 订阅 -->\n\n<!-- sns 社交标签 begin -->\n<!-- 参考微博API -->\n<meta property=\"og:type\" content=\"类型\" />\n<meta property=\"og:url\" content=\"URL地址\" />\n<meta property=\"og:title\" content=\"标题\" />\n<meta property=\"og:image\" content=\"图片\" />\n<meta property=\"og:description\" content=\"描述\" />\n<!-- sns 社交标签 end -->\n```\n1.使用特殊链接：\n如果你关闭自动识别后 ，又希望某些电话号码能够链接到 iPhone 的拨号功能 ，那么可以通过这样来声明电话链接\n`<a href=\"tel:12345654321\">打电话给我</a>`\n`<a href=\"sms:12345654321\">发短信</a>`\n\n或用于单元格：\n`<td onclick=\"location.href='tel:122'\">`\n\n2.自动大写与自动修正：\n要关闭这两项功能，可以通过autocapitalize 与autocorrect 这两个选项：\n`<input type=\"text\" autocapitalize=\"off\" autocorrect=\"off\" />`\n\n#### 参考：\n* [关于meta知多少](http://www.cnblogs.com/kuikui/p/3590673.html)\n* [手机端页面开发心得（1）——meta设置](http://slimcheng.com/archives/30)\n* [移动前端头部标签(HTML5 head meta)](http://my.oschina.net/u/1040928/blog/375100)\n* [移动端 meta](http://www.cnblogs.com/shxydx/articles/2856882.html)\n* [移动平台对 META 标签的定义](http://www.cssue.com/xhtml-css/html5-css3/mobile-meta.html)\n","slug":"mobile-meta","published":1,"updated":"2018-05-30T01:35:18.434Z","comments":1,"photos":[],"link":"","_id":"cji0ejm3p0015g4l12wncql7e","content":"<p>为了让手机网页有更好的体验，需要重置一些meta。<br><a id=\"more\"></a></p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta charset='utf-<span class=\"number\">8</span>'&gt;&lt;!-- 声明文档使用的字符编码 --&gt;</span><br><span class=\"line\">&lt;meta http-equiv=<span class=\"string\">\"X-UA-Compatible\"</span> content=<span class=\"string\">\"IE=edge,chrome=1\"</span>/&gt;&lt;!-- 优先使用 <span class=\"type\">IE</span> 最新版本和 <span class=\"type\">Chrome</span> --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"description\"</span> content=<span class=\"string\">\"不超过150个字符\"</span>/&gt;&lt;!-- 页面描述 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"keywords\"</span> content=<span class=\"string\">\"\"</span>/&gt;&lt;!-- 页面关键词 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"author\"</span> content=<span class=\"string\">\"name, email@gmail.com\"</span>/&gt;&lt;!-- 网页作者 --&gt;</span><br><span class=\"line\">&lt;!-- </span><br><span class=\"line\">all：文件将被检索，且页面上的链接可以被查询； </span><br><span class=\"line\"><span class=\"keyword\">none</span>：文件将不被检索，且页面上的链接不可以被查询；</span><br><span class=\"line\">index：文件将被检索； </span><br><span class=\"line\">follow：页面上的链接可以被查询； </span><br><span class=\"line\">noindex：文件将不被检索； </span><br><span class=\"line\">nofollow：页面上的链接不可以被查询。 </span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"robots\"</span> content=<span class=\"string\">\"index,follow\"</span>/&gt;&lt;!-- 搜索引擎抓取 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width, initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no\"</span>&gt;&lt;!-- 为移动设备添加 viewport, `width=device-width` 会导致 iPhone <span class=\"number\">5</span> 添加到主屏后以 <span class=\"type\">WebApp</span> 全屏模式打开页面时出现黑边 http:<span class=\"comment\">//bigc.at/ios-webapp-viewport-meta.orz , 不过我倾向于加上`width=device-width`，毕竟iphone5渐渐会被淘汰--&gt;</span></span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"renderer\"</span> content=<span class=\"string\">\"webkit\"</span>&gt;&lt;!-- 启用<span class=\"number\">360</span>浏览器的极速模式(webkit) --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"format-detection\"</span> content=<span class=\"string\">\"telphone=no, email=no\"</span>/&gt;&lt;!-- 忽略页面中的数字识别为电话，忽略email识别--&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"shortcut icon\"</span> type=<span class=\"string\">\"image/ico\"</span> href=<span class=\"string\">\"/favicon.ico\"</span>/&gt;&lt;!-- 添加 favicon icon --&gt;</span><br><span class=\"line\">&lt;!-- iOS 设备 begin --&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> content=<span class=\"string\">\"yes\"</span>/&gt;&lt;!-- 当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari (ios7.<span class=\"number\">0</span>版本以后，safari上已看不到效果) --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"apple-touch-fullscreen\"</span> content=<span class=\"string\">\"yes\"</span>/&gt;&lt;!-- 是否启用 <span class=\"type\">WebApp</span> 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> content=<span class=\"string\">\"black\"</span>/&gt;&lt;!-- 设置苹果工具栏颜色:默认值为 <span class=\"keyword\">default</span>（白色），可以定为 black（黑色）和 black-translucent（灰色半透明）； --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"apple-mobile-web-app-title\"</span> content=<span class=\"string\">\"标题\"</span>&gt;&lt;!-- 添加到主屏后的标题（iOS <span class=\"number\">6</span> 新增） --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"apple-itunes-app\"</span> content=<span class=\"string\">\"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL\"</span>&gt;&lt;!-- 添加智能 <span class=\"type\">App</span> 广告条 <span class=\"type\">Smart</span> <span class=\"type\">App</span> <span class=\"type\">Banner</span>（iOS <span class=\"number\">6</span>+ <span class=\"type\">Safari</span>） --&gt;</span><br><span class=\"line\">&lt;meta http-equiv=<span class=\"string\">\"Cache-Control\"</span> content=<span class=\"string\">\"no-siteapp\"</span> /&gt;&lt;!-- 不让百度转码 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"HandheldFriendly\"</span> content=<span class=\"string\">\"true\"</span>&gt;&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"MobileOptimized\"</span> content=<span class=\"string\">\"320\"</span>&gt;&lt;!-- 微软的老式浏览器 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"screen-orientation\"</span> content=<span class=\"string\">\"portrait\"</span>&gt;&lt;!-- uc强制竖屏 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"x5-orientation\"</span> content=<span class=\"string\">\"portrait\"</span>&gt;&lt;!-- <span class=\"type\">QQ</span>强制竖屏 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"full-screen\"</span> content=<span class=\"string\">\"yes\"</span>&gt;&lt;!-- <span class=\"type\">UC</span>强制全屏 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"x5-fullscreen\"</span> content=<span class=\"string\">\"true\"</span>&gt;&lt;!-- <span class=\"type\">QQ</span>强制全屏 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"browsermode\"</span> content=<span class=\"string\">\"application\"</span>&gt;&lt;!-- <span class=\"type\">UC</span>应用模式 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"x5-page-mode\"</span> content=<span class=\"string\">\"app\"</span>&gt;&lt;!-- <span class=\"type\">QQ</span>应用模式 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"msapplication-tap-highlight\"</span> content=<span class=\"string\">\"no\"</span>&gt;&lt;!-- windows phone 点击无高光 --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- iOS 图标 begin --&gt;</span><br><span class=\"line\">&lt;!--网站添加至ios桌面时的图标--&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> sizes=<span class=\"string\">\"57x57\"</span> href=<span class=\"string\">\"table_ico57.png\"</span>&gt;&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> sizes=<span class=\"string\">\"72x72\"</span> href=<span class=\"string\">\"table_ico72.png\"</span>&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> sizes=<span class=\"string\">\"114x114\"</span> href=<span class=\"string\">\"table_ico114.png\"</span>&gt;&lt;!-- <span class=\"type\">Retina</span> iPhone 和 <span class=\"type\">Retina</span> iTouch，114x114 像素，可以没有，但推荐有 --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> sizes=<span class=\"string\">\"144x144\"</span> href=<span class=\"string\">\"table_ico144.png\"</span>&gt;&lt;!-- <span class=\"type\">Retina</span> iPad，144x144 像素，可以没有，但推荐有 --&gt;</span><br><span class=\"line\">&lt;!-- iOS 图标 end --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- iOS 启动画面 begin --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"768x1004\"</span> href=<span class=\"string\">\"/splash-screen-768x1004.png\"</span>/&gt;&lt;!-- iPad 竖屏 <span class=\"number\">768</span> x <span class=\"number\">1004</span>（标准分辨率） --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"1024x748\"</span> href=<span class=\"string\">\"/Default-Portrait-1024x748.png\"</span>/&gt;&lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"1536x2008\"</span> href=<span class=\"string\">\"/splash-screen-1536x2008.png\"</span>/&gt;&lt;!-- iPad 竖屏 1536x2008（<span class=\"type\">Retina</span>） --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"2048x1496\"</span> href=<span class=\"string\">\"/splash-screen-2048x1496.png\"</span>/&gt;&lt;!-- iPad 横屏 2048x1496（<span class=\"type\">Retina</span>） --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> href=<span class=\"string\">\"/splash-screen-320x480.png\"</span>/&gt;&lt;!-- iPhone/iPod <span class=\"type\">Touch</span> 竖屏 320x480 (标准分辨率) --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"640x960\"</span> href=<span class=\"string\">\"/splash-screen-640x960.png\"</span>/&gt;&lt;!-- iPhone/iPod <span class=\"type\">Touch</span> 竖屏 640x960 (<span class=\"type\">Retina</span>) --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"640x1136\"</span> href=<span class=\"string\">\"/splash-screen-640x1136.png\"</span>/&gt;&lt;!-- iPhone <span class=\"number\">5</span>/iPod <span class=\"type\">Touch</span> <span class=\"number\">5</span> 竖屏 640x1136 (<span class=\"type\">Retina</span>) --&gt;</span><br><span class=\"line\">&lt;!-- iOS 启动画面 end --&gt;</span><br><span class=\"line\">&lt;!-- iOS 设备 end --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"msapplication-TileColor\"</span> content=<span class=\"string\">\"#000\"</span>/&gt;&lt;!-- <span class=\"type\">Windows</span> <span class=\"number\">8</span> 磁贴颜色 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"msapplication-TileImage\"</span> content=<span class=\"string\">\"icon.png\"</span>/&gt;&lt;!-- <span class=\"type\">Windows</span> <span class=\"number\">8</span> 磁贴图标 --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"alternate\"</span> type=<span class=\"string\">\"application/rss+xml\"</span> title=<span class=\"string\">\"RSS\"</span> href=<span class=\"string\">\"/rss.xml\"</span>/&gt;&lt;!-- 添加 <span class=\"type\">RSS</span> 订阅 --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- sns 社交标签 begin --&gt;</span><br><span class=\"line\">&lt;!-- 参考微博<span class=\"type\">API</span> --&gt;</span><br><span class=\"line\">&lt;meta property=<span class=\"string\">\"og:type\"</span> content=<span class=\"string\">\"类型\"</span> /&gt;</span><br><span class=\"line\">&lt;meta property=<span class=\"string\">\"og:url\"</span> content=<span class=\"string\">\"URL地址\"</span> /&gt;</span><br><span class=\"line\">&lt;meta property=<span class=\"string\">\"og:title\"</span> content=<span class=\"string\">\"标题\"</span> /&gt;</span><br><span class=\"line\">&lt;meta property=<span class=\"string\">\"og:image\"</span> content=<span class=\"string\">\"图片\"</span> /&gt;</span><br><span class=\"line\">&lt;meta property=<span class=\"string\">\"og:description\"</span> content=<span class=\"string\">\"描述\"</span> /&gt;</span><br><span class=\"line\">&lt;!-- sns 社交标签 end --&gt;</span><br></pre></td></tr></table></figure>\n<p>1.使用特殊链接：<br>如果你关闭自动识别后 ，又希望某些电话号码能够链接到 iPhone 的拨号功能 ，那么可以通过这样来声明电话链接<br><code>&lt;a href=&quot;tel:12345654321&quot;&gt;打电话给我&lt;/a&gt;</code><br><code>&lt;a href=&quot;sms:12345654321&quot;&gt;发短信&lt;/a&gt;</code></p>\n<p>或用于单元格：<br><code>&lt;td onclick=&quot;location.href=&#39;tel:122&#39;&quot;&gt;</code></p>\n<p>2.自动大写与自动修正：<br>要关闭这两项功能，可以通过autocapitalize 与autocorrect 这两个选项：<br><code>&lt;input type=&quot;text&quot; autocapitalize=&quot;off&quot; autocorrect=&quot;off&quot; /&gt;</code></p>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://www.cnblogs.com/kuikui/p/3590673.html\" target=\"_blank\" rel=\"noopener\">关于meta知多少</a></li>\n<li><a href=\"http://slimcheng.com/archives/30\" target=\"_blank\" rel=\"noopener\">手机端页面开发心得（1）——meta设置</a></li>\n<li><a href=\"http://my.oschina.net/u/1040928/blog/375100\" target=\"_blank\" rel=\"noopener\">移动前端头部标签(HTML5 head meta)</a></li>\n<li><a href=\"http://www.cnblogs.com/shxydx/articles/2856882.html\" target=\"_blank\" rel=\"noopener\">移动端 meta</a></li>\n<li><a href=\"http://www.cssue.com/xhtml-css/html5-css3/mobile-meta.html\" target=\"_blank\" rel=\"noopener\">移动平台对 META 标签的定义</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>为了让手机网页有更好的体验，需要重置一些meta。<br>","more":"</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta charset='utf-<span class=\"number\">8</span>'&gt;&lt;!-- 声明文档使用的字符编码 --&gt;</span><br><span class=\"line\">&lt;meta http-equiv=<span class=\"string\">\"X-UA-Compatible\"</span> content=<span class=\"string\">\"IE=edge,chrome=1\"</span>/&gt;&lt;!-- 优先使用 <span class=\"type\">IE</span> 最新版本和 <span class=\"type\">Chrome</span> --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"description\"</span> content=<span class=\"string\">\"不超过150个字符\"</span>/&gt;&lt;!-- 页面描述 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"keywords\"</span> content=<span class=\"string\">\"\"</span>/&gt;&lt;!-- 页面关键词 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"author\"</span> content=<span class=\"string\">\"name, email@gmail.com\"</span>/&gt;&lt;!-- 网页作者 --&gt;</span><br><span class=\"line\">&lt;!-- </span><br><span class=\"line\">all：文件将被检索，且页面上的链接可以被查询； </span><br><span class=\"line\"><span class=\"keyword\">none</span>：文件将不被检索，且页面上的链接不可以被查询；</span><br><span class=\"line\">index：文件将被检索； </span><br><span class=\"line\">follow：页面上的链接可以被查询； </span><br><span class=\"line\">noindex：文件将不被检索； </span><br><span class=\"line\">nofollow：页面上的链接不可以被查询。 </span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"robots\"</span> content=<span class=\"string\">\"index,follow\"</span>/&gt;&lt;!-- 搜索引擎抓取 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width, initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no\"</span>&gt;&lt;!-- 为移动设备添加 viewport, `width=device-width` 会导致 iPhone <span class=\"number\">5</span> 添加到主屏后以 <span class=\"type\">WebApp</span> 全屏模式打开页面时出现黑边 http:<span class=\"comment\">//bigc.at/ios-webapp-viewport-meta.orz , 不过我倾向于加上`width=device-width`，毕竟iphone5渐渐会被淘汰--&gt;</span></span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"renderer\"</span> content=<span class=\"string\">\"webkit\"</span>&gt;&lt;!-- 启用<span class=\"number\">360</span>浏览器的极速模式(webkit) --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"format-detection\"</span> content=<span class=\"string\">\"telphone=no, email=no\"</span>/&gt;&lt;!-- 忽略页面中的数字识别为电话，忽略email识别--&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"shortcut icon\"</span> type=<span class=\"string\">\"image/ico\"</span> href=<span class=\"string\">\"/favicon.ico\"</span>/&gt;&lt;!-- 添加 favicon icon --&gt;</span><br><span class=\"line\">&lt;!-- iOS 设备 begin --&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> content=<span class=\"string\">\"yes\"</span>/&gt;&lt;!-- 当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari (ios7.<span class=\"number\">0</span>版本以后，safari上已看不到效果) --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"apple-touch-fullscreen\"</span> content=<span class=\"string\">\"yes\"</span>/&gt;&lt;!-- 是否启用 <span class=\"type\">WebApp</span> 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> content=<span class=\"string\">\"black\"</span>/&gt;&lt;!-- 设置苹果工具栏颜色:默认值为 <span class=\"keyword\">default</span>（白色），可以定为 black（黑色）和 black-translucent（灰色半透明）； --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"apple-mobile-web-app-title\"</span> content=<span class=\"string\">\"标题\"</span>&gt;&lt;!-- 添加到主屏后的标题（iOS <span class=\"number\">6</span> 新增） --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"apple-itunes-app\"</span> content=<span class=\"string\">\"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL\"</span>&gt;&lt;!-- 添加智能 <span class=\"type\">App</span> 广告条 <span class=\"type\">Smart</span> <span class=\"type\">App</span> <span class=\"type\">Banner</span>（iOS <span class=\"number\">6</span>+ <span class=\"type\">Safari</span>） --&gt;</span><br><span class=\"line\">&lt;meta http-equiv=<span class=\"string\">\"Cache-Control\"</span> content=<span class=\"string\">\"no-siteapp\"</span> /&gt;&lt;!-- 不让百度转码 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"HandheldFriendly\"</span> content=<span class=\"string\">\"true\"</span>&gt;&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"MobileOptimized\"</span> content=<span class=\"string\">\"320\"</span>&gt;&lt;!-- 微软的老式浏览器 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"screen-orientation\"</span> content=<span class=\"string\">\"portrait\"</span>&gt;&lt;!-- uc强制竖屏 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"x5-orientation\"</span> content=<span class=\"string\">\"portrait\"</span>&gt;&lt;!-- <span class=\"type\">QQ</span>强制竖屏 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"full-screen\"</span> content=<span class=\"string\">\"yes\"</span>&gt;&lt;!-- <span class=\"type\">UC</span>强制全屏 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"x5-fullscreen\"</span> content=<span class=\"string\">\"true\"</span>&gt;&lt;!-- <span class=\"type\">QQ</span>强制全屏 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"browsermode\"</span> content=<span class=\"string\">\"application\"</span>&gt;&lt;!-- <span class=\"type\">UC</span>应用模式 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"x5-page-mode\"</span> content=<span class=\"string\">\"app\"</span>&gt;&lt;!-- <span class=\"type\">QQ</span>应用模式 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"msapplication-tap-highlight\"</span> content=<span class=\"string\">\"no\"</span>&gt;&lt;!-- windows phone 点击无高光 --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- iOS 图标 begin --&gt;</span><br><span class=\"line\">&lt;!--网站添加至ios桌面时的图标--&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> sizes=<span class=\"string\">\"57x57\"</span> href=<span class=\"string\">\"table_ico57.png\"</span>&gt;&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> sizes=<span class=\"string\">\"72x72\"</span> href=<span class=\"string\">\"table_ico72.png\"</span>&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> sizes=<span class=\"string\">\"114x114\"</span> href=<span class=\"string\">\"table_ico114.png\"</span>&gt;&lt;!-- <span class=\"type\">Retina</span> iPhone 和 <span class=\"type\">Retina</span> iTouch，114x114 像素，可以没有，但推荐有 --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> sizes=<span class=\"string\">\"144x144\"</span> href=<span class=\"string\">\"table_ico144.png\"</span>&gt;&lt;!-- <span class=\"type\">Retina</span> iPad，144x144 像素，可以没有，但推荐有 --&gt;</span><br><span class=\"line\">&lt;!-- iOS 图标 end --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- iOS 启动画面 begin --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"768x1004\"</span> href=<span class=\"string\">\"/splash-screen-768x1004.png\"</span>/&gt;&lt;!-- iPad 竖屏 <span class=\"number\">768</span> x <span class=\"number\">1004</span>（标准分辨率） --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"1024x748\"</span> href=<span class=\"string\">\"/Default-Portrait-1024x748.png\"</span>/&gt;&lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"1536x2008\"</span> href=<span class=\"string\">\"/splash-screen-1536x2008.png\"</span>/&gt;&lt;!-- iPad 竖屏 1536x2008（<span class=\"type\">Retina</span>） --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"2048x1496\"</span> href=<span class=\"string\">\"/splash-screen-2048x1496.png\"</span>/&gt;&lt;!-- iPad 横屏 2048x1496（<span class=\"type\">Retina</span>） --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> href=<span class=\"string\">\"/splash-screen-320x480.png\"</span>/&gt;&lt;!-- iPhone/iPod <span class=\"type\">Touch</span> 竖屏 320x480 (标准分辨率) --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"640x960\"</span> href=<span class=\"string\">\"/splash-screen-640x960.png\"</span>/&gt;&lt;!-- iPhone/iPod <span class=\"type\">Touch</span> 竖屏 640x960 (<span class=\"type\">Retina</span>) --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"apple-touch-startup-image\"</span> sizes=<span class=\"string\">\"640x1136\"</span> href=<span class=\"string\">\"/splash-screen-640x1136.png\"</span>/&gt;&lt;!-- iPhone <span class=\"number\">5</span>/iPod <span class=\"type\">Touch</span> <span class=\"number\">5</span> 竖屏 640x1136 (<span class=\"type\">Retina</span>) --&gt;</span><br><span class=\"line\">&lt;!-- iOS 启动画面 end --&gt;</span><br><span class=\"line\">&lt;!-- iOS 设备 end --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"msapplication-TileColor\"</span> content=<span class=\"string\">\"#000\"</span>/&gt;&lt;!-- <span class=\"type\">Windows</span> <span class=\"number\">8</span> 磁贴颜色 --&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">\"msapplication-TileImage\"</span> content=<span class=\"string\">\"icon.png\"</span>/&gt;&lt;!-- <span class=\"type\">Windows</span> <span class=\"number\">8</span> 磁贴图标 --&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"alternate\"</span> type=<span class=\"string\">\"application/rss+xml\"</span> title=<span class=\"string\">\"RSS\"</span> href=<span class=\"string\">\"/rss.xml\"</span>/&gt;&lt;!-- 添加 <span class=\"type\">RSS</span> 订阅 --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- sns 社交标签 begin --&gt;</span><br><span class=\"line\">&lt;!-- 参考微博<span class=\"type\">API</span> --&gt;</span><br><span class=\"line\">&lt;meta property=<span class=\"string\">\"og:type\"</span> content=<span class=\"string\">\"类型\"</span> /&gt;</span><br><span class=\"line\">&lt;meta property=<span class=\"string\">\"og:url\"</span> content=<span class=\"string\">\"URL地址\"</span> /&gt;</span><br><span class=\"line\">&lt;meta property=<span class=\"string\">\"og:title\"</span> content=<span class=\"string\">\"标题\"</span> /&gt;</span><br><span class=\"line\">&lt;meta property=<span class=\"string\">\"og:image\"</span> content=<span class=\"string\">\"图片\"</span> /&gt;</span><br><span class=\"line\">&lt;meta property=<span class=\"string\">\"og:description\"</span> content=<span class=\"string\">\"描述\"</span> /&gt;</span><br><span class=\"line\">&lt;!-- sns 社交标签 end --&gt;</span><br></pre></td></tr></table></figure>\n<p>1.使用特殊链接：<br>如果你关闭自动识别后 ，又希望某些电话号码能够链接到 iPhone 的拨号功能 ，那么可以通过这样来声明电话链接<br><code>&lt;a href=&quot;tel:12345654321&quot;&gt;打电话给我&lt;/a&gt;</code><br><code>&lt;a href=&quot;sms:12345654321&quot;&gt;发短信&lt;/a&gt;</code></p>\n<p>或用于单元格：<br><code>&lt;td onclick=&quot;location.href=&#39;tel:122&#39;&quot;&gt;</code></p>\n<p>2.自动大写与自动修正：<br>要关闭这两项功能，可以通过autocapitalize 与autocorrect 这两个选项：<br><code>&lt;input type=&quot;text&quot; autocapitalize=&quot;off&quot; autocorrect=&quot;off&quot; /&gt;</code></p>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://www.cnblogs.com/kuikui/p/3590673.html\" target=\"_blank\" rel=\"noopener\">关于meta知多少</a></li>\n<li><a href=\"http://slimcheng.com/archives/30\" target=\"_blank\" rel=\"noopener\">手机端页面开发心得（1）——meta设置</a></li>\n<li><a href=\"http://my.oschina.net/u/1040928/blog/375100\" target=\"_blank\" rel=\"noopener\">移动前端头部标签(HTML5 head meta)</a></li>\n<li><a href=\"http://www.cnblogs.com/shxydx/articles/2856882.html\" target=\"_blank\" rel=\"noopener\">移动端 meta</a></li>\n<li><a href=\"http://www.cssue.com/xhtml-css/html5-css3/mobile-meta.html\" target=\"_blank\" rel=\"noopener\">移动平台对 META 标签的定义</a></li>\n</ul>"},{"layout":"pages","title":"node 升级版本","date":"2018-04-27T09:00:00.000Z","_content":"\n个人博客网站用的4.5的node，现在工作需要用element ui，需要node>=6，也就产生了node的升级需求。\n<!-- more -->\n\n## 方法一\nnode有一个模块叫n，是专门用来管理node.js的版本。\n```swift\n# 查看版本\nnode -v \n# 清除npm cache\nnpm cache clean -force\n# 安装n模块\nnpm install -g n \n# 不行就这样：npm install -g n -f\n# 升级新版本（稳定版 stable ,最新版 latest ,指定版本号v8.11.1）\nn latest\n# 查看版本号，确认是否升级成功\nnode -v \n```\n\n## 方法二\nGNVM 是一个简单的 Windows 下 Node.js 多版本管理器，类似的 nvm nvmw nodist 。感谢一下这位哥（kenshin）吧，[点此查看](https://github.com/Kenshin/gnvm)，有详细的操作文档。\n注：*不过，我好像运气不太好，方法一没搞定，方法二呢，node是升级成功了，可是npm升级时就不行了，可以看下面的截图。最后用方法三搞定的。*\n![node升级成功.png](https://upload-images.jianshu.io/upload_images/1464420-8c9d26b576d51932.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![npm升级失败.png](https://upload-images.jianshu.io/upload_images/1464420-760e4e07c6b88200.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 方法三\n去[官网](https://nodejs.org/en/)下载个你需要的版本，覆盖安装或先卸载再安装都行。不记得node的安装目录不要紧，`where node` 命令可以看到。everything 搜索工具也可以全盘搜索的。\n","source":"_posts/node-version-upgrade.md","raw":"---\nlayout: pages\ntitle: node 升级版本\ndate: 2018-04-27 17:00:00\ntags:\n- Node\n---\n\n个人博客网站用的4.5的node，现在工作需要用element ui，需要node>=6，也就产生了node的升级需求。\n<!-- more -->\n\n## 方法一\nnode有一个模块叫n，是专门用来管理node.js的版本。\n```swift\n# 查看版本\nnode -v \n# 清除npm cache\nnpm cache clean -force\n# 安装n模块\nnpm install -g n \n# 不行就这样：npm install -g n -f\n# 升级新版本（稳定版 stable ,最新版 latest ,指定版本号v8.11.1）\nn latest\n# 查看版本号，确认是否升级成功\nnode -v \n```\n\n## 方法二\nGNVM 是一个简单的 Windows 下 Node.js 多版本管理器，类似的 nvm nvmw nodist 。感谢一下这位哥（kenshin）吧，[点此查看](https://github.com/Kenshin/gnvm)，有详细的操作文档。\n注：*不过，我好像运气不太好，方法一没搞定，方法二呢，node是升级成功了，可是npm升级时就不行了，可以看下面的截图。最后用方法三搞定的。*\n![node升级成功.png](https://upload-images.jianshu.io/upload_images/1464420-8c9d26b576d51932.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![npm升级失败.png](https://upload-images.jianshu.io/upload_images/1464420-760e4e07c6b88200.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 方法三\n去[官网](https://nodejs.org/en/)下载个你需要的版本，覆盖安装或先卸载再安装都行。不记得node的安装目录不要紧，`where node` 命令可以看到。everything 搜索工具也可以全盘搜索的。\n","slug":"node-version-upgrade","published":1,"updated":"2018-05-29T09:26:37.608Z","comments":1,"photos":[],"link":"","_id":"cji0ejm3u0018g4l1s0n3sc5a","content":"<p>个人博客网站用的4.5的node，现在工作需要用element ui，需要node&gt;=6，也就产生了node的升级需求。<br><a id=\"more\"></a></p>\n<h2 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2><p>node有一个模块叫n，是专门用来管理node.js的版本。<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看版本</span><br><span class=\"line\">node -v </span><br><span class=\"line\"># 清除npm cache</span><br><span class=\"line\">npm cache clean -force</span><br><span class=\"line\"># 安装n模块</span><br><span class=\"line\">npm install -g n </span><br><span class=\"line\"># 不行就这样：npm install -g n -f</span><br><span class=\"line\"># 升级新版本（稳定版 stable ,最新版 latest ,指定版本号v8.<span class=\"number\">11.1</span>）</span><br><span class=\"line\">n latest</span><br><span class=\"line\"># 查看版本号，确认是否升级成功</span><br><span class=\"line\">node -v</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><p>GNVM 是一个简单的 Windows 下 Node.js 多版本管理器，类似的 nvm nvmw nodist 。感谢一下这位哥（kenshin）吧，<a href=\"https://github.com/Kenshin/gnvm\" target=\"_blank\" rel=\"noopener\">点此查看</a>，有详细的操作文档。<br>注：<em>不过，我好像运气不太好，方法一没搞定，方法二呢，node是升级成功了，可是npm升级时就不行了，可以看下面的截图。最后用方法三搞定的。</em><br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-8c9d26b576d51932.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"node升级成功.png\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-760e4e07c6b88200.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"npm升级失败.png\"></p>\n<h2 id=\"方法三\"><a href=\"#方法三\" class=\"headerlink\" title=\"方法三\"></a>方法三</h2><p>去<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">官网</a>下载个你需要的版本，覆盖安装或先卸载再安装都行。不记得node的安装目录不要紧，<code>where node</code> 命令可以看到。everything 搜索工具也可以全盘搜索的。</p>\n","site":{"data":{}},"excerpt":"<p>个人博客网站用的4.5的node，现在工作需要用element ui，需要node&gt;=6，也就产生了node的升级需求。<br>","more":"</p>\n<h2 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2><p>node有一个模块叫n，是专门用来管理node.js的版本。<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看版本</span><br><span class=\"line\">node -v </span><br><span class=\"line\"># 清除npm cache</span><br><span class=\"line\">npm cache clean -force</span><br><span class=\"line\"># 安装n模块</span><br><span class=\"line\">npm install -g n </span><br><span class=\"line\"># 不行就这样：npm install -g n -f</span><br><span class=\"line\"># 升级新版本（稳定版 stable ,最新版 latest ,指定版本号v8.<span class=\"number\">11.1</span>）</span><br><span class=\"line\">n latest</span><br><span class=\"line\"># 查看版本号，确认是否升级成功</span><br><span class=\"line\">node -v</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><p>GNVM 是一个简单的 Windows 下 Node.js 多版本管理器，类似的 nvm nvmw nodist 。感谢一下这位哥（kenshin）吧，<a href=\"https://github.com/Kenshin/gnvm\" target=\"_blank\" rel=\"noopener\">点此查看</a>，有详细的操作文档。<br>注：<em>不过，我好像运气不太好，方法一没搞定，方法二呢，node是升级成功了，可是npm升级时就不行了，可以看下面的截图。最后用方法三搞定的。</em><br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-8c9d26b576d51932.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"node升级成功.png\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-760e4e07c6b88200.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"npm升级失败.png\"></p>\n<h2 id=\"方法三\"><a href=\"#方法三\" class=\"headerlink\" title=\"方法三\"></a>方法三</h2><p>去<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">官网</a>下载个你需要的版本，覆盖安装或先卸载再安装都行。不记得node的安装目录不要紧，<code>where node</code> 命令可以看到。everything 搜索工具也可以全盘搜索的。</p>"},{"layout":"pages","title":"photoshop 前端网页查看的基本设置","date":"2018-05-29T08:40:00.000Z","_content":"\n前端开发用 photoshop 查看网页的一些基本设置。\n<!-- more -->\n\n### 新建\n![新建.png](https://upload-images.jianshu.io/upload_images/1464420-d7f5c94979b0dc27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 编辑\n![编辑.png](https://upload-images.jianshu.io/upload_images/1464420-b1108e8477e5edf3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 窗口\n![窗口.png](https://upload-images.jianshu.io/upload_images/1464420-15217f8d8cbe7e93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 工作区（存储窗口预设）\n![窗口-存储一些设置.png](https://upload-images.jianshu.io/upload_images/1464420-658e3df7cd2165a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 视图\n![视图.png](https://upload-images.jianshu.io/upload_images/1464420-bcec45b010c8a65d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 信息\n![信息.png](https://upload-images.jianshu.io/upload_images/1464420-e5b7ada1773bb0b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 图层\n![选中图层.png](https://upload-images.jianshu.io/upload_images/1464420-365437d32291c5b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","source":"_posts/ps-front.md","raw":"\n---\nlayout: pages\ntitle: photoshop 前端网页查看的基本设置\ndate: 2018-05-29 16:40:00\ncategories:\n- Photoshop\ntags:\n- Photoshop\n---\n\n前端开发用 photoshop 查看网页的一些基本设置。\n<!-- more -->\n\n### 新建\n![新建.png](https://upload-images.jianshu.io/upload_images/1464420-d7f5c94979b0dc27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 编辑\n![编辑.png](https://upload-images.jianshu.io/upload_images/1464420-b1108e8477e5edf3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 窗口\n![窗口.png](https://upload-images.jianshu.io/upload_images/1464420-15217f8d8cbe7e93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 工作区（存储窗口预设）\n![窗口-存储一些设置.png](https://upload-images.jianshu.io/upload_images/1464420-658e3df7cd2165a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 视图\n![视图.png](https://upload-images.jianshu.io/upload_images/1464420-bcec45b010c8a65d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 信息\n![信息.png](https://upload-images.jianshu.io/upload_images/1464420-e5b7ada1773bb0b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 图层\n![选中图层.png](https://upload-images.jianshu.io/upload_images/1464420-365437d32291c5b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","slug":"ps-front","published":1,"updated":"2018-05-29T08:40:44.425Z","comments":1,"photos":[],"link":"","_id":"cji0ejm40001cg4l1wil4hful","content":"<p>前端开发用 photoshop 查看网页的一些基本设置。<br><a id=\"more\"></a></p>\n<h3 id=\"新建\"><a href=\"#新建\" class=\"headerlink\" title=\"新建\"></a>新建</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-d7f5c94979b0dc27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"新建.png\"></p>\n<h3 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-b1108e8477e5edf3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"编辑.png\"></p>\n<h3 id=\"窗口\"><a href=\"#窗口\" class=\"headerlink\" title=\"窗口\"></a>窗口</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-15217f8d8cbe7e93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"窗口.png\"></p>\n<h3 id=\"工作区（存储窗口预设）\"><a href=\"#工作区（存储窗口预设）\" class=\"headerlink\" title=\"工作区（存储窗口预设）\"></a>工作区（存储窗口预设）</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-658e3df7cd2165a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"窗口-存储一些设置.png\"></p>\n<h3 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-bcec45b010c8a65d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"视图.png\"></p>\n<h3 id=\"信息\"><a href=\"#信息\" class=\"headerlink\" title=\"信息\"></a>信息</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-e5b7ada1773bb0b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"信息.png\"></p>\n<h3 id=\"图层\"><a href=\"#图层\" class=\"headerlink\" title=\"图层\"></a>图层</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-365437d32291c5b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"选中图层.png\"></p>\n","site":{"data":{}},"excerpt":"<p>前端开发用 photoshop 查看网页的一些基本设置。<br>","more":"</p>\n<h3 id=\"新建\"><a href=\"#新建\" class=\"headerlink\" title=\"新建\"></a>新建</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-d7f5c94979b0dc27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"新建.png\"></p>\n<h3 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-b1108e8477e5edf3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"编辑.png\"></p>\n<h3 id=\"窗口\"><a href=\"#窗口\" class=\"headerlink\" title=\"窗口\"></a>窗口</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-15217f8d8cbe7e93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"窗口.png\"></p>\n<h3 id=\"工作区（存储窗口预设）\"><a href=\"#工作区（存储窗口预设）\" class=\"headerlink\" title=\"工作区（存储窗口预设）\"></a>工作区（存储窗口预设）</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-658e3df7cd2165a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"窗口-存储一些设置.png\"></p>\n<h3 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-bcec45b010c8a65d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"视图.png\"></p>\n<h3 id=\"信息\"><a href=\"#信息\" class=\"headerlink\" title=\"信息\"></a>信息</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-e5b7ada1773bb0b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"信息.png\"></p>\n<h3 id=\"图层\"><a href=\"#图层\" class=\"headerlink\" title=\"图层\"></a>图层</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-365437d32291c5b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"选中图层.png\"></p>"},{"layout":"pages","title":"svg和@2x图（双倍图）切图--Photoshop CC","date":"2016-02-06T04:00:00.000Z","_content":"\n近来开发网站，发现网站在retina屏上显示图片模糊的问题。然后发现2x图可以解决此问题，当然不可能整个网站所有的图片都是2x图。故此，小图icon类（一些线条组合的图形）采用svg，其他icon类和一般大小图片采用png(可以考虑“交错”)，大一些的图片用jpg(特别是全屏图：横向全屏，整个全屏)。大图呢模糊的话就得用2x图了。我的需求是这样，可是设计师和ui美工告诉我，他不知道怎么弄，不懂那玩意。他们手头上的事也很忙，故此，我就自己去折腾了。发现Photoshop CC可以做到，并且很方便。（**注：2013及以前的版本没有此功能**）\n<!-- more -->\n\n##Photoshop CC 2014 的安装，设置，切图：\n#### 一、 Photoshop CC 2014 的安装（安装程序网上随便搜，很多的，也可以去官网下载）\n1. 解压下载的PS CC软件，打开文件夹，双击“Set-up.exe”进行正常安装。\n2. 点击“安装”按钮(注意：不要点击“试用”按钮，否则安装的结果就不是完整版的)。    \n3. 点击右下角“登录”按钮，点击“稍后连接”按钮，然后点击“接受”按钮。 \n4. 序列号随意输入，比如分别输入111 111 111 111 111 111，点击“下一步”按钮，点击“稍后连接”按钮。    \n5. 接一下，如果你是64位系统的就都选择，如果是32位系统的当然只有一个了。点击“安装”按钮进行安装。    \n6. 点击“关闭”按钮关闭。    \n7. 这时系统菜单已经有程序存在，把它们添加到桌面快捷方式。    \n8. 双击程序图标，弹出“需要登录”对话框，点击“以后登录”按钮，打开PS CC程序，弹出提示对话框，勾选“不再显示”复选框，点击“确定”按钮。然后关闭程序。    \n9. 复制64位破解补丁到程序的安装目录，默认是：C:\\Program Files\\Adobe\\Adobe Photoshop CC(64bit)，出现“复制文件”提示，点击“复制和替换”，这样64位的就完成破解。同样的方法，把32位程序创建桌面快捷方式，复制32位破解补丁到程序的安装目录，默认是：C:\\Program Files\\Adobe\\Adobe Photoshop CC 2014，同样出现“复制文件”提示，点击“复制和替换”，完成32位的破解。（[破解补丁（网上找，都差不多是amtlib.dll文件）](http://www.adingchina.com/a/78.html)）    \n10. 连接网线，你可以像正版一样使用了，界面很美妙，开始你的PS之旅吧！\n\n#### 二、 Photoshop CC 2014 的设置\n1. 请保持菜单“编辑->首选项->增效工具”中的“生成器”为启用状态；    \n2. 依次点击菜单“文件->生成->图像资源”，确认该菜单项已被勾选；    \n3. 开启 WebP、SVG 格式的自动输出： 新建 generator.json 文件，内容如下：\n`{\n  \"generator-assets\":  {\n    \"svg-enabled\": true,\n    \"webp-enabled\": true\n  }\n}`\n将此配置文件拷贝至： Windows: (Win+R后输入 %USERPROFILE% )目录下，如 C:\\Users\\xxx Mac OS: $HOME 如“Macintosh HD>Users>xxx” 目录下 WebP 输出暂只支持 Mac OS。\n\n#### 三、 Photoshop CC 2014 的切图\n1. 将某个图层或组的名字改成对应格式的即可。如\"首页\"，    \n2. 改成\"首页.png\"就会在你所打开的psd或图片的文件对应的位置生成\"首页.png\"图片；    \n3. 改成\"首页.svg\"就会在你所打开的psd或图片的文件对应的位置生成\"首页.svg\"svg图;    \n4. 改成\"200%首页@2x.png\"就会在你所打开的psd或图片的文件对应的位置生成\"首页@2x.png\"两倍图。\n\n#####参考\n- [利用PS自动切图、支持svg且支持icoMoon——再也不用四处去转格式了](http://www.w2bc.com/Article/43932)\n- [PS CC 自动切图（含WebP、SVG格式）](http://blog.sina.com.cn/s/blog_7d796c0d0101evey.html)\n- [ADOBE CC 2014/2015 全系列通用破解补丁下载！PHOTOSHOP CC 2014/2015完美破解版](http://www.adingchina.com/a/78.html)\n","source":"_posts/ps-photo-2x.md","raw":"---\nlayout: pages\ntitle: svg和@2x图（双倍图）切图--Photoshop CC\ndate: 2016-02-06 12:00:00\ntags:\n- photoshop\n---\n\n近来开发网站，发现网站在retina屏上显示图片模糊的问题。然后发现2x图可以解决此问题，当然不可能整个网站所有的图片都是2x图。故此，小图icon类（一些线条组合的图形）采用svg，其他icon类和一般大小图片采用png(可以考虑“交错”)，大一些的图片用jpg(特别是全屏图：横向全屏，整个全屏)。大图呢模糊的话就得用2x图了。我的需求是这样，可是设计师和ui美工告诉我，他不知道怎么弄，不懂那玩意。他们手头上的事也很忙，故此，我就自己去折腾了。发现Photoshop CC可以做到，并且很方便。（**注：2013及以前的版本没有此功能**）\n<!-- more -->\n\n##Photoshop CC 2014 的安装，设置，切图：\n#### 一、 Photoshop CC 2014 的安装（安装程序网上随便搜，很多的，也可以去官网下载）\n1. 解压下载的PS CC软件，打开文件夹，双击“Set-up.exe”进行正常安装。\n2. 点击“安装”按钮(注意：不要点击“试用”按钮，否则安装的结果就不是完整版的)。    \n3. 点击右下角“登录”按钮，点击“稍后连接”按钮，然后点击“接受”按钮。 \n4. 序列号随意输入，比如分别输入111 111 111 111 111 111，点击“下一步”按钮，点击“稍后连接”按钮。    \n5. 接一下，如果你是64位系统的就都选择，如果是32位系统的当然只有一个了。点击“安装”按钮进行安装。    \n6. 点击“关闭”按钮关闭。    \n7. 这时系统菜单已经有程序存在，把它们添加到桌面快捷方式。    \n8. 双击程序图标，弹出“需要登录”对话框，点击“以后登录”按钮，打开PS CC程序，弹出提示对话框，勾选“不再显示”复选框，点击“确定”按钮。然后关闭程序。    \n9. 复制64位破解补丁到程序的安装目录，默认是：C:\\Program Files\\Adobe\\Adobe Photoshop CC(64bit)，出现“复制文件”提示，点击“复制和替换”，这样64位的就完成破解。同样的方法，把32位程序创建桌面快捷方式，复制32位破解补丁到程序的安装目录，默认是：C:\\Program Files\\Adobe\\Adobe Photoshop CC 2014，同样出现“复制文件”提示，点击“复制和替换”，完成32位的破解。（[破解补丁（网上找，都差不多是amtlib.dll文件）](http://www.adingchina.com/a/78.html)）    \n10. 连接网线，你可以像正版一样使用了，界面很美妙，开始你的PS之旅吧！\n\n#### 二、 Photoshop CC 2014 的设置\n1. 请保持菜单“编辑->首选项->增效工具”中的“生成器”为启用状态；    \n2. 依次点击菜单“文件->生成->图像资源”，确认该菜单项已被勾选；    \n3. 开启 WebP、SVG 格式的自动输出： 新建 generator.json 文件，内容如下：\n`{\n  \"generator-assets\":  {\n    \"svg-enabled\": true,\n    \"webp-enabled\": true\n  }\n}`\n将此配置文件拷贝至： Windows: (Win+R后输入 %USERPROFILE% )目录下，如 C:\\Users\\xxx Mac OS: $HOME 如“Macintosh HD>Users>xxx” 目录下 WebP 输出暂只支持 Mac OS。\n\n#### 三、 Photoshop CC 2014 的切图\n1. 将某个图层或组的名字改成对应格式的即可。如\"首页\"，    \n2. 改成\"首页.png\"就会在你所打开的psd或图片的文件对应的位置生成\"首页.png\"图片；    \n3. 改成\"首页.svg\"就会在你所打开的psd或图片的文件对应的位置生成\"首页.svg\"svg图;    \n4. 改成\"200%首页@2x.png\"就会在你所打开的psd或图片的文件对应的位置生成\"首页@2x.png\"两倍图。\n\n#####参考\n- [利用PS自动切图、支持svg且支持icoMoon——再也不用四处去转格式了](http://www.w2bc.com/Article/43932)\n- [PS CC 自动切图（含WebP、SVG格式）](http://blog.sina.com.cn/s/blog_7d796c0d0101evey.html)\n- [ADOBE CC 2014/2015 全系列通用破解补丁下载！PHOTOSHOP CC 2014/2015完美破解版](http://www.adingchina.com/a/78.html)\n","slug":"ps-photo-2x","published":1,"updated":"2018-05-30T01:51:59.810Z","comments":1,"photos":[],"link":"","_id":"cji0ejm45001eg4l18uvjza3s","content":"<p>近来开发网站，发现网站在retina屏上显示图片模糊的问题。然后发现2x图可以解决此问题，当然不可能整个网站所有的图片都是2x图。故此，小图icon类（一些线条组合的图形）采用svg，其他icon类和一般大小图片采用png(可以考虑“交错”)，大一些的图片用jpg(特别是全屏图：横向全屏，整个全屏)。大图呢模糊的话就得用2x图了。我的需求是这样，可是设计师和ui美工告诉我，他不知道怎么弄，不懂那玩意。他们手头上的事也很忙，故此，我就自己去折腾了。发现Photoshop CC可以做到，并且很方便。（<strong>注：2013及以前的版本没有此功能</strong>）<br><a id=\"more\"></a></p>\n<p>##Photoshop CC 2014 的安装，设置，切图：</p>\n<h4 id=\"一、-Photoshop-CC-2014-的安装（安装程序网上随便搜，很多的，也可以去官网下载）\"><a href=\"#一、-Photoshop-CC-2014-的安装（安装程序网上随便搜，很多的，也可以去官网下载）\" class=\"headerlink\" title=\"一、 Photoshop CC 2014 的安装（安装程序网上随便搜，很多的，也可以去官网下载）\"></a>一、 Photoshop CC 2014 的安装（安装程序网上随便搜，很多的，也可以去官网下载）</h4><ol>\n<li>解压下载的PS CC软件，打开文件夹，双击“Set-up.exe”进行正常安装。</li>\n<li>点击“安装”按钮(注意：不要点击“试用”按钮，否则安装的结果就不是完整版的)。    </li>\n<li>点击右下角“登录”按钮，点击“稍后连接”按钮，然后点击“接受”按钮。 </li>\n<li>序列号随意输入，比如分别输入111 111 111 111 111 111，点击“下一步”按钮，点击“稍后连接”按钮。    </li>\n<li>接一下，如果你是64位系统的就都选择，如果是32位系统的当然只有一个了。点击“安装”按钮进行安装。    </li>\n<li>点击“关闭”按钮关闭。    </li>\n<li>这时系统菜单已经有程序存在，把它们添加到桌面快捷方式。    </li>\n<li>双击程序图标，弹出“需要登录”对话框，点击“以后登录”按钮，打开PS CC程序，弹出提示对话框，勾选“不再显示”复选框，点击“确定”按钮。然后关闭程序。    </li>\n<li>复制64位破解补丁到程序的安装目录，默认是：C:\\Program Files\\Adobe\\Adobe Photoshop CC(64bit)，出现“复制文件”提示，点击“复制和替换”，这样64位的就完成破解。同样的方法，把32位程序创建桌面快捷方式，复制32位破解补丁到程序的安装目录，默认是：C:\\Program Files\\Adobe\\Adobe Photoshop CC 2014，同样出现“复制文件”提示，点击“复制和替换”，完成32位的破解。（<a href=\"http://www.adingchina.com/a/78.html\" target=\"_blank\" rel=\"noopener\">破解补丁（网上找，都差不多是amtlib.dll文件）</a>）    </li>\n<li>连接网线，你可以像正版一样使用了，界面很美妙，开始你的PS之旅吧！</li>\n</ol>\n<h4 id=\"二、-Photoshop-CC-2014-的设置\"><a href=\"#二、-Photoshop-CC-2014-的设置\" class=\"headerlink\" title=\"二、 Photoshop CC 2014 的设置\"></a>二、 Photoshop CC 2014 的设置</h4><ol>\n<li>请保持菜单“编辑-&gt;首选项-&gt;增效工具”中的“生成器”为启用状态；    </li>\n<li>依次点击菜单“文件-&gt;生成-&gt;图像资源”，确认该菜单项已被勾选；    </li>\n<li>开启 WebP、SVG 格式的自动输出： 新建 generator.json 文件，内容如下：<br><code>{\n&quot;generator-assets&quot;:  {\n &quot;svg-enabled&quot;: true,\n &quot;webp-enabled&quot;: true\n}\n}</code><br>将此配置文件拷贝至： Windows: (Win+R后输入 %USERPROFILE% )目录下，如 C:\\Users\\xxx Mac OS: $HOME 如“Macintosh HD&gt;Users&gt;xxx” 目录下 WebP 输出暂只支持 Mac OS。</li>\n</ol>\n<h4 id=\"三、-Photoshop-CC-2014-的切图\"><a href=\"#三、-Photoshop-CC-2014-的切图\" class=\"headerlink\" title=\"三、 Photoshop CC 2014 的切图\"></a>三、 Photoshop CC 2014 的切图</h4><ol>\n<li>将某个图层或组的名字改成对应格式的即可。如”首页”，    </li>\n<li>改成”首页.png”就会在你所打开的psd或图片的文件对应的位置生成”首页.png”图片；    </li>\n<li>改成”首页.svg”就会在你所打开的psd或图片的文件对应的位置生成”首页.svg”svg图;    </li>\n<li>改成”200%首页@2x.png”就会在你所打开的psd或图片的文件对应的位置生成”首页@2x.png”两倍图。</li>\n</ol>\n<p>#####参考</p>\n<ul>\n<li><a href=\"http://www.w2bc.com/Article/43932\" target=\"_blank\" rel=\"noopener\">利用PS自动切图、支持svg且支持icoMoon——再也不用四处去转格式了</a></li>\n<li><a href=\"http://blog.sina.com.cn/s/blog_7d796c0d0101evey.html\" target=\"_blank\" rel=\"noopener\">PS CC 自动切图（含WebP、SVG格式）</a></li>\n<li><a href=\"http://www.adingchina.com/a/78.html\" target=\"_blank\" rel=\"noopener\">ADOBE CC 2014/2015 全系列通用破解补丁下载！PHOTOSHOP CC 2014/2015完美破解版</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>近来开发网站，发现网站在retina屏上显示图片模糊的问题。然后发现2x图可以解决此问题，当然不可能整个网站所有的图片都是2x图。故此，小图icon类（一些线条组合的图形）采用svg，其他icon类和一般大小图片采用png(可以考虑“交错”)，大一些的图片用jpg(特别是全屏图：横向全屏，整个全屏)。大图呢模糊的话就得用2x图了。我的需求是这样，可是设计师和ui美工告诉我，他不知道怎么弄，不懂那玩意。他们手头上的事也很忙，故此，我就自己去折腾了。发现Photoshop CC可以做到，并且很方便。（<strong>注：2013及以前的版本没有此功能</strong>）<br>","more":"</p>\n<p>##Photoshop CC 2014 的安装，设置，切图：</p>\n<h4 id=\"一、-Photoshop-CC-2014-的安装（安装程序网上随便搜，很多的，也可以去官网下载）\"><a href=\"#一、-Photoshop-CC-2014-的安装（安装程序网上随便搜，很多的，也可以去官网下载）\" class=\"headerlink\" title=\"一、 Photoshop CC 2014 的安装（安装程序网上随便搜，很多的，也可以去官网下载）\"></a>一、 Photoshop CC 2014 的安装（安装程序网上随便搜，很多的，也可以去官网下载）</h4><ol>\n<li>解压下载的PS CC软件，打开文件夹，双击“Set-up.exe”进行正常安装。</li>\n<li>点击“安装”按钮(注意：不要点击“试用”按钮，否则安装的结果就不是完整版的)。    </li>\n<li>点击右下角“登录”按钮，点击“稍后连接”按钮，然后点击“接受”按钮。 </li>\n<li>序列号随意输入，比如分别输入111 111 111 111 111 111，点击“下一步”按钮，点击“稍后连接”按钮。    </li>\n<li>接一下，如果你是64位系统的就都选择，如果是32位系统的当然只有一个了。点击“安装”按钮进行安装。    </li>\n<li>点击“关闭”按钮关闭。    </li>\n<li>这时系统菜单已经有程序存在，把它们添加到桌面快捷方式。    </li>\n<li>双击程序图标，弹出“需要登录”对话框，点击“以后登录”按钮，打开PS CC程序，弹出提示对话框，勾选“不再显示”复选框，点击“确定”按钮。然后关闭程序。    </li>\n<li>复制64位破解补丁到程序的安装目录，默认是：C:\\Program Files\\Adobe\\Adobe Photoshop CC(64bit)，出现“复制文件”提示，点击“复制和替换”，这样64位的就完成破解。同样的方法，把32位程序创建桌面快捷方式，复制32位破解补丁到程序的安装目录，默认是：C:\\Program Files\\Adobe\\Adobe Photoshop CC 2014，同样出现“复制文件”提示，点击“复制和替换”，完成32位的破解。（<a href=\"http://www.adingchina.com/a/78.html\" target=\"_blank\" rel=\"noopener\">破解补丁（网上找，都差不多是amtlib.dll文件）</a>）    </li>\n<li>连接网线，你可以像正版一样使用了，界面很美妙，开始你的PS之旅吧！</li>\n</ol>\n<h4 id=\"二、-Photoshop-CC-2014-的设置\"><a href=\"#二、-Photoshop-CC-2014-的设置\" class=\"headerlink\" title=\"二、 Photoshop CC 2014 的设置\"></a>二、 Photoshop CC 2014 的设置</h4><ol>\n<li>请保持菜单“编辑-&gt;首选项-&gt;增效工具”中的“生成器”为启用状态；    </li>\n<li>依次点击菜单“文件-&gt;生成-&gt;图像资源”，确认该菜单项已被勾选；    </li>\n<li>开启 WebP、SVG 格式的自动输出： 新建 generator.json 文件，内容如下：<br><code>{\n&quot;generator-assets&quot;:  {\n &quot;svg-enabled&quot;: true,\n &quot;webp-enabled&quot;: true\n}\n}</code><br>将此配置文件拷贝至： Windows: (Win+R后输入 %USERPROFILE% )目录下，如 C:\\Users\\xxx Mac OS: $HOME 如“Macintosh HD&gt;Users&gt;xxx” 目录下 WebP 输出暂只支持 Mac OS。</li>\n</ol>\n<h4 id=\"三、-Photoshop-CC-2014-的切图\"><a href=\"#三、-Photoshop-CC-2014-的切图\" class=\"headerlink\" title=\"三、 Photoshop CC 2014 的切图\"></a>三、 Photoshop CC 2014 的切图</h4><ol>\n<li>将某个图层或组的名字改成对应格式的即可。如”首页”，    </li>\n<li>改成”首页.png”就会在你所打开的psd或图片的文件对应的位置生成”首页.png”图片；    </li>\n<li>改成”首页.svg”就会在你所打开的psd或图片的文件对应的位置生成”首页.svg”svg图;    </li>\n<li>改成”200%首页@2x.png”就会在你所打开的psd或图片的文件对应的位置生成”首页@2x.png”两倍图。</li>\n</ol>\n<p>#####参考</p>\n<ul>\n<li><a href=\"http://www.w2bc.com/Article/43932\" target=\"_blank\" rel=\"noopener\">利用PS自动切图、支持svg且支持icoMoon——再也不用四处去转格式了</a></li>\n<li><a href=\"http://blog.sina.com.cn/s/blog_7d796c0d0101evey.html\" target=\"_blank\" rel=\"noopener\">PS CC 自动切图（含WebP、SVG格式）</a></li>\n<li><a href=\"http://www.adingchina.com/a/78.html\" target=\"_blank\" rel=\"noopener\">ADOBE CC 2014/2015 全系列通用破解补丁下载！PHOTOSHOP CC 2014/2015完美破解版</a></li>\n</ul>"},{"layout":"pages","title":"网页高清屏和retina（视网膜）屏的双倍图解决办法","date":"2016-02-06T05:00:00.000Z","_content":"\n通过搜集相关资料，发现一个比较普遍的解决方案：retina.js+CSS Media Queries。\n\n**retina.js**\nretina.js下载地址：[retina.js官网下载](http://imulus.github.io/retinajs/)  和 [免费cdn](http://www.bootcdn.cn/retina.js/)。\n详细介绍和步骤啥的，看这个[《走向视网膜（Retina）的Web时代》](http://www.w3cplus.com/css/towards-retina-web.html)和[《如何一步步把网站Retina优化》](http://blog.netsh.org/posts/website-retina_1779.netsh.html)文章。\nretina.js针对img标签的图片，直接用就行。背景图片还是得用CSS Media Queries \n示例代码：\n```swift\n<div class=\"img\">\n  [站外图片上传中……(3)]\n  [站外图片上传中……(4)]\n  <div class=\"logo\"></div>\n</div>\n```\n\n**CSS Media Queries**\ncss属性：device-pixel-ratio和-webkit-image-set\n先看看两者的兼容性：\n![](http://upload-images.jianshu.io/upload_images/1464420-698aedeca65baf9d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/1464420-365dabab4222ff3f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n第二个截图，不是确切。加上私有属性“--webkit-”，Safari 6+和chrome 21+都支持的。这个属性仅是CSS4的一个草案。（**注：第二种方法没法用于img标签。**）\n看见上面两种方法的兼容性都不咋地好，你可能会立马否决使用它。其实不然，上面提到我是看了好几个网站的源码才偶然发现第二种方法的，那么久给你看看结果：苹果网站（第一种），华为（第一种，不过由于它使用的jquery fancybox插件，是这个插件带得，可以估计不算在内。），魅族（第二种），小米（第二种），锤子（第二种），腾讯首页（第二种）。\n再者你仔细想想，retina屏的用户群，都是些苹果的手机(iphone)和ipad以及笔记本（rmbp）等等设备，也就恰好在该属性兼容范围内。\n示例代码：\n```wift\n.test {\n  background-image: url('img/logo.jpg'); \n  background-image: -webkit-image-set(url('img/logo.jpg') 1x,url('img/logo@2x.jpg') 2x);\n  background-size: 425px 195px;\n  width: 425px;\n  height: 195px;\n}\n@media only screen and (-Webkit-min-device-pixel-ratio: 1.5),\nonly screen and (-moz-min-device-pixel-ratio: 1.5),\nonly screen and (-o-min-device-pixel-ratio: 3/2),\nonly screen and (min-device-pixel-ratio: 1.5),\n(min-resolution: 192dpi) {\n  .logo {\n    background-image: url('img/logo@2x.jpg');\n    background-size: 425px 195px;\n    width: 425px;\n    height: 195px;\n   }\n }\n```\n\n#####参考\n- [走向视网膜（Retina）的Web时代](http://www.w3cplus.com/css/towards-retina-web.html)        \n- [如何一步步把网站Retina优化](http://blog.netsh.org/posts/website-retina_1779.netsh.html)\n- [image-set实现Retina屏幕下图片显示](http://www.w3cplus.com/css/safari-6-and-chrome-21-add-image-set-to-support-retina-images.html)\n- [高清显示屏原理及设计方案](http://www.cnblogs.com/PeunZhang/p/3441110.html)\n- [随方逐圆 -- 全面理解 CSS 媒体查询](https://juejin.im/entry/595b6208f265da6c3902041e)\n","source":"_posts/resolution-retina-2x.md","raw":"\n---\nlayout: pages\ntitle: 网页高清屏和retina（视网膜）屏的双倍图解决办法\ndate: 2016-02-06 13:00:00\ntags:\n- css3\n---\n\n通过搜集相关资料，发现一个比较普遍的解决方案：retina.js+CSS Media Queries。\n\n**retina.js**\nretina.js下载地址：[retina.js官网下载](http://imulus.github.io/retinajs/)  和 [免费cdn](http://www.bootcdn.cn/retina.js/)。\n详细介绍和步骤啥的，看这个[《走向视网膜（Retina）的Web时代》](http://www.w3cplus.com/css/towards-retina-web.html)和[《如何一步步把网站Retina优化》](http://blog.netsh.org/posts/website-retina_1779.netsh.html)文章。\nretina.js针对img标签的图片，直接用就行。背景图片还是得用CSS Media Queries \n示例代码：\n```swift\n<div class=\"img\">\n  [站外图片上传中……(3)]\n  [站外图片上传中……(4)]\n  <div class=\"logo\"></div>\n</div>\n```\n\n**CSS Media Queries**\ncss属性：device-pixel-ratio和-webkit-image-set\n先看看两者的兼容性：\n![](http://upload-images.jianshu.io/upload_images/1464420-698aedeca65baf9d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](http://upload-images.jianshu.io/upload_images/1464420-365dabab4222ff3f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n第二个截图，不是确切。加上私有属性“--webkit-”，Safari 6+和chrome 21+都支持的。这个属性仅是CSS4的一个草案。（**注：第二种方法没法用于img标签。**）\n看见上面两种方法的兼容性都不咋地好，你可能会立马否决使用它。其实不然，上面提到我是看了好几个网站的源码才偶然发现第二种方法的，那么久给你看看结果：苹果网站（第一种），华为（第一种，不过由于它使用的jquery fancybox插件，是这个插件带得，可以估计不算在内。），魅族（第二种），小米（第二种），锤子（第二种），腾讯首页（第二种）。\n再者你仔细想想，retina屏的用户群，都是些苹果的手机(iphone)和ipad以及笔记本（rmbp）等等设备，也就恰好在该属性兼容范围内。\n示例代码：\n```wift\n.test {\n  background-image: url('img/logo.jpg'); \n  background-image: -webkit-image-set(url('img/logo.jpg') 1x,url('img/logo@2x.jpg') 2x);\n  background-size: 425px 195px;\n  width: 425px;\n  height: 195px;\n}\n@media only screen and (-Webkit-min-device-pixel-ratio: 1.5),\nonly screen and (-moz-min-device-pixel-ratio: 1.5),\nonly screen and (-o-min-device-pixel-ratio: 3/2),\nonly screen and (min-device-pixel-ratio: 1.5),\n(min-resolution: 192dpi) {\n  .logo {\n    background-image: url('img/logo@2x.jpg');\n    background-size: 425px 195px;\n    width: 425px;\n    height: 195px;\n   }\n }\n```\n\n#####参考\n- [走向视网膜（Retina）的Web时代](http://www.w3cplus.com/css/towards-retina-web.html)        \n- [如何一步步把网站Retina优化](http://blog.netsh.org/posts/website-retina_1779.netsh.html)\n- [image-set实现Retina屏幕下图片显示](http://www.w3cplus.com/css/safari-6-and-chrome-21-add-image-set-to-support-retina-images.html)\n- [高清显示屏原理及设计方案](http://www.cnblogs.com/PeunZhang/p/3441110.html)\n- [随方逐圆 -- 全面理解 CSS 媒体查询](https://juejin.im/entry/595b6208f265da6c3902041e)\n","slug":"resolution-retina-2x","published":1,"updated":"2018-05-30T02:21:04.227Z","comments":1,"photos":[],"link":"","_id":"cji0ejm4b001ig4l1eoc8ra81","content":"<p>通过搜集相关资料，发现一个比较普遍的解决方案：retina.js+CSS Media Queries。</p>\n<p><strong>retina.js</strong><br>retina.js下载地址：<a href=\"http://imulus.github.io/retinajs/\" target=\"_blank\" rel=\"noopener\">retina.js官网下载</a>  和 <a href=\"http://www.bootcdn.cn/retina.js/\" target=\"_blank\" rel=\"noopener\">免费cdn</a>。<br>详细介绍和步骤啥的，看这个<a href=\"http://www.w3cplus.com/css/towards-retina-web.html\" target=\"_blank\" rel=\"noopener\">《走向视网膜（Retina）的Web时代》</a>和<a href=\"http://blog.netsh.org/posts/website-retina_1779.netsh.html\" target=\"_blank\" rel=\"noopener\">《如何一步步把网站Retina优化》</a>文章。<br>retina.js针对img标签的图片，直接用就行。背景图片还是得用CSS Media Queries<br>示例代码：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">img</span>\"&gt;</span></span><br><span class=\"line\"><span class=\"class\">  [站外图片上传中……(3)]</span></span><br><span class=\"line\"><span class=\"class\">  [站外图片上传中……(4)]</span></span><br><span class=\"line\"><span class=\"class\">  &lt;<span class=\"title\">div</span> <span class=\"title\">class</span>=\"<span class=\"title\">logo</span>\"&gt;&lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>CSS Media Queries</strong><br>css属性：device-pixel-ratio和-webkit-image-set<br>先看看两者的兼容性：<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-698aedeca65baf9d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-365dabab4222ff3f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>第二个截图，不是确切。加上私有属性“–webkit-”，Safari 6+和chrome 21+都支持的。这个属性仅是CSS4的一个草案。（<strong>注：第二种方法没法用于img标签。</strong>）<br>看见上面两种方法的兼容性都不咋地好，你可能会立马否决使用它。其实不然，上面提到我是看了好几个网站的源码才偶然发现第二种方法的，那么久给你看看结果：苹果网站（第一种），华为（第一种，不过由于它使用的jquery fancybox插件，是这个插件带得，可以估计不算在内。），魅族（第二种），小米（第二种），锤子（第二种），腾讯首页（第二种）。<br>再者你仔细想想，retina屏的用户群，都是些苹果的手机(iphone)和ipad以及笔记本（rmbp）等等设备，也就恰好在该属性兼容范围内。<br>示例代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.test &#123;</span><br><span class=\"line\">  background-image: url(&apos;img/logo.jpg&apos;); </span><br><span class=\"line\">  background-image: -webkit-image-set(url(&apos;img/logo.jpg&apos;) 1x,url(&apos;img/logo@2x.jpg&apos;) 2x);</span><br><span class=\"line\">  background-size: 425px 195px;</span><br><span class=\"line\">  width: 425px;</span><br><span class=\"line\">  height: 195px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@media only screen and (-Webkit-min-device-pixel-ratio: 1.5),</span><br><span class=\"line\">only screen and (-moz-min-device-pixel-ratio: 1.5),</span><br><span class=\"line\">only screen and (-o-min-device-pixel-ratio: 3/2),</span><br><span class=\"line\">only screen and (min-device-pixel-ratio: 1.5),</span><br><span class=\"line\">(min-resolution: 192dpi) &#123;</span><br><span class=\"line\">  .logo &#123;</span><br><span class=\"line\">    background-image: url(&apos;img/logo@2x.jpg&apos;);</span><br><span class=\"line\">    background-size: 425px 195px;</span><br><span class=\"line\">    width: 425px;</span><br><span class=\"line\">    height: 195px;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>#####参考</p>\n<ul>\n<li><a href=\"http://www.w3cplus.com/css/towards-retina-web.html\" target=\"_blank\" rel=\"noopener\">走向视网膜（Retina）的Web时代</a>        </li>\n<li><a href=\"http://blog.netsh.org/posts/website-retina_1779.netsh.html\" target=\"_blank\" rel=\"noopener\">如何一步步把网站Retina优化</a></li>\n<li><a href=\"http://www.w3cplus.com/css/safari-6-and-chrome-21-add-image-set-to-support-retina-images.html\" target=\"_blank\" rel=\"noopener\">image-set实现Retina屏幕下图片显示</a></li>\n<li><a href=\"http://www.cnblogs.com/PeunZhang/p/3441110.html\" target=\"_blank\" rel=\"noopener\">高清显示屏原理及设计方案</a></li>\n<li><a href=\"https://juejin.im/entry/595b6208f265da6c3902041e\" target=\"_blank\" rel=\"noopener\">随方逐圆 – 全面理解 CSS 媒体查询</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>通过搜集相关资料，发现一个比较普遍的解决方案：retina.js+CSS Media Queries。</p>\n<p><strong>retina.js</strong><br>retina.js下载地址：<a href=\"http://imulus.github.io/retinajs/\" target=\"_blank\" rel=\"noopener\">retina.js官网下载</a>  和 <a href=\"http://www.bootcdn.cn/retina.js/\" target=\"_blank\" rel=\"noopener\">免费cdn</a>。<br>详细介绍和步骤啥的，看这个<a href=\"http://www.w3cplus.com/css/towards-retina-web.html\" target=\"_blank\" rel=\"noopener\">《走向视网膜（Retina）的Web时代》</a>和<a href=\"http://blog.netsh.org/posts/website-retina_1779.netsh.html\" target=\"_blank\" rel=\"noopener\">《如何一步步把网站Retina优化》</a>文章。<br>retina.js针对img标签的图片，直接用就行。背景图片还是得用CSS Media Queries<br>示例代码：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">img</span>\"&gt;</span></span><br><span class=\"line\"><span class=\"class\">  [站外图片上传中……(3)]</span></span><br><span class=\"line\"><span class=\"class\">  [站外图片上传中……(4)]</span></span><br><span class=\"line\"><span class=\"class\">  &lt;<span class=\"title\">div</span> <span class=\"title\">class</span>=\"<span class=\"title\">logo</span>\"&gt;&lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>CSS Media Queries</strong><br>css属性：device-pixel-ratio和-webkit-image-set<br>先看看两者的兼容性：<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-698aedeca65baf9d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-365dabab4222ff3f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>第二个截图，不是确切。加上私有属性“–webkit-”，Safari 6+和chrome 21+都支持的。这个属性仅是CSS4的一个草案。（<strong>注：第二种方法没法用于img标签。</strong>）<br>看见上面两种方法的兼容性都不咋地好，你可能会立马否决使用它。其实不然，上面提到我是看了好几个网站的源码才偶然发现第二种方法的，那么久给你看看结果：苹果网站（第一种），华为（第一种，不过由于它使用的jquery fancybox插件，是这个插件带得，可以估计不算在内。），魅族（第二种），小米（第二种），锤子（第二种），腾讯首页（第二种）。<br>再者你仔细想想，retina屏的用户群，都是些苹果的手机(iphone)和ipad以及笔记本（rmbp）等等设备，也就恰好在该属性兼容范围内。<br>示例代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.test &#123;</span><br><span class=\"line\">  background-image: url(&apos;img/logo.jpg&apos;); </span><br><span class=\"line\">  background-image: -webkit-image-set(url(&apos;img/logo.jpg&apos;) 1x,url(&apos;img/logo@2x.jpg&apos;) 2x);</span><br><span class=\"line\">  background-size: 425px 195px;</span><br><span class=\"line\">  width: 425px;</span><br><span class=\"line\">  height: 195px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@media only screen and (-Webkit-min-device-pixel-ratio: 1.5),</span><br><span class=\"line\">only screen and (-moz-min-device-pixel-ratio: 1.5),</span><br><span class=\"line\">only screen and (-o-min-device-pixel-ratio: 3/2),</span><br><span class=\"line\">only screen and (min-device-pixel-ratio: 1.5),</span><br><span class=\"line\">(min-resolution: 192dpi) &#123;</span><br><span class=\"line\">  .logo &#123;</span><br><span class=\"line\">    background-image: url(&apos;img/logo@2x.jpg&apos;);</span><br><span class=\"line\">    background-size: 425px 195px;</span><br><span class=\"line\">    width: 425px;</span><br><span class=\"line\">    height: 195px;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>#####参考</p>\n<ul>\n<li><a href=\"http://www.w3cplus.com/css/towards-retina-web.html\" target=\"_blank\" rel=\"noopener\">走向视网膜（Retina）的Web时代</a>        </li>\n<li><a href=\"http://blog.netsh.org/posts/website-retina_1779.netsh.html\" target=\"_blank\" rel=\"noopener\">如何一步步把网站Retina优化</a></li>\n<li><a href=\"http://www.w3cplus.com/css/safari-6-and-chrome-21-add-image-set-to-support-retina-images.html\" target=\"_blank\" rel=\"noopener\">image-set实现Retina屏幕下图片显示</a></li>\n<li><a href=\"http://www.cnblogs.com/PeunZhang/p/3441110.html\" target=\"_blank\" rel=\"noopener\">高清显示屏原理及设计方案</a></li>\n<li><a href=\"https://juejin.im/entry/595b6208f265da6c3902041e\" target=\"_blank\" rel=\"noopener\">随方逐圆 – 全面理解 CSS 媒体查询</a></li>\n</ul>\n"},{"layout":"pages","title":"滚动到底部加载更多","date":"2018-04-25T09:00:00.000Z","_content":"\n移动端加载数据时，由于数据太多，不会一次性全部加载出来。有些会采用pc端那样用分页码的形式，但是更多的确实滑动滚动条到内容最后，加载更多内容出来。一般引入了三方的前端框架和插件，基本都会有此功能。偶尔会需要采用原生js实现，故而此处就介绍下原生js的实现方式。另外附上jquery的实现方式。\n<!-- more -->\n\n## 原生js实现思路\n需要三个高度：scrollHeight（文档内容实际高度，*包括超出视窗的溢出部分*）、scrollTop（滚动条滚动距离）、clientHeight（窗口可视范围高度）。当 `clientHeight + scrollTop >= scrollHeight` 时，表示已经抵达内容的底部了，可以加载更多内容。 \n\n*  scrollHeight：通过 `document.documentElement.scrollHeight` 、`document.body.scrollHeight` 可以获取;\n* scrollTop：通过`window.pageYOffset` 、 `document.documentElement.scrollTop` 、 `document.body.scrollTop` 可以获取;（*window.scrollY也可以，只是ie根本不支持。[点此查看](https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY)*）\n* clientHeight：通过`window.innerHeight` 、 `document.documentElement.clientHeight` 、 `document.body.clientHeight` 可以获取;\n\n下面我先附上我的大致测试结果图（页面代码和测试表格数据最后附上）\n![123.png](https://upload-images.jianshu.io/upload_images/1464420-7e31f2e6b4aa8591.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n从第一行数据可以看出来，2000(content)+2*2(border)+20(margin-top)=2024才是全部内容。故`var scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);` 。\n第二行数据，`window.pageYOffset` 不支持ie8；另外查询其他文档得知，`document.documentElement.scrollTop` 和 `document.body.scrollTop` 只会生效一个；window.scrollY也是一样的功能，但是兼容性比第一个还差（[点此查看](https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY)）。故`var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;`。\n第三行数据：显而易见，数字小的那个才是窗口可是区域高度。故`var clientHeight = window.innerHeight || Math.min(document.documentElement.clientHeight,document.body.clientHeight);`。\n### 所以最后的js代码如下：\n```swift\n    window.onscroll= function(){\n        //文档内容实际高度（包括超出视窗的溢出部分）\n        var scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n        //滚动条滚动距离\n        var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n        //窗口可视范围高度\n        var clientHeight = window.innerHeight || Math.min(document.documentElement.clientHeight,document.body.clientHeight);\n        \n        if(clientHeight + scrollTop >= scrollHeight){\n            console.log(\"===加载更多内容……===\");\n        }\n\n    }\n```\n## jquery的实现方式\n代码如下：\n```swift\n<script>\n    $(window).on(\"resize scroll\",function(){\n             \n        var windowHeight = $(window).height();//当前窗口的高度             \n        var scrollTop = $(window).scrollTop();//当前滚动条从上往下滚动的距离            \n        var docHeight = $(document).height(); //当前文档的高度 \n        console.log(scrollTop, windowHeight, docHeight);\n        //当 滚动条距底部的距离 + 滚动条滚动的距离 >= 文档的高度 - 窗口的高度  \n        //换句话说：（滚动条滚动的距离 + 窗口的高度 = 文档的高度）  这个是基本的公式  \n        if (scrollTop + windowHeight >= docHeight) { \n            console.log(\"===加载更多数据===\");\n        }\n    });\n</script>\n```\n\n#### 测试页面代码：\n```swift\n<!-- <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"> -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>test</title>\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\">\n<style>\n* {\n    margin: 0;\n    padding: 0;\n}\n.scroll{\n    margin-top:  20px;\n    border: 2px solid #00f;\n    height: 2000px;\n}\n</style>\n</head>\n<body>\n<div class=\"scroll\">\n    <br><br><br><br><br><br><br>\n    sdhfiahdifashdifhid\n    <span id=\"js_con\"></span>\n</div>\n<script>\n    window.onscroll= function(){\n        var str = '';\n        // str += window.scrollY+\",\";//ie不支持。\n        str += \"(\"+document.documentElement.scrollHeight+\",\"+document.body.scrollHeight+\"),\";\n        str += \"(\"+window.pageYOffset+\",\"+document.documentElement.scrollTop+\",\"+document.body.scrollTop+\"),\";\n        str += \"(\"+window.innerHeight+\",\"+document.documentElement.clientHeight+\",\"+document.body.clientHeight+\"),\";\n        document.getElementById('js_con').innerHTML = str;\n        console.log(str);\n    }\n</script>\n</body>\n</html>\n```\n\n####测试结果：\n\n| 获取方式  | chrome 66  | firefox59  | edge | ie8 |\n|:------------- |:-------------:|:-------------:|:----------:|  ------------:|\n| document.documentElement.scrollHeight，document.body.scrollHeight     | (2024,2004) |  (2024,2004) | (2024,2004) | (2024,2004)|\n| window.pageYoffset，document.documentElement.scrollTop，document.body.scrollTop   | (100,100,0) |  (132,132,0) | (94,94,0) | (undefined,94,0)  |\n| window.innerHeight，document.documentElement.clientHeight，document.body.clientHeight | (636,636,2004) | (619,619,2004) | (628,628,2004) | (undefined,624,2004) |\n\n#### 参考：\n* [滚动条 clientHeight、offsetHeight、scrollTop。](http://hbiao68.iteye.com/blog/2213198)\n* [JavaScript滚动到底部触发加载数据](https://blog.csdn.net/lovetea99/article/details/52025891)\n* [Window pageXOffset 和 pageYOffset 属性](http://www.runoob.com/jsref/prop-win-pagexoffset.html)\n* [HTML DOM innerheight、innerwidth 属性](http://www.w3school.com.cn/jsref/prop_win_innerheight_innerwidth.asp)\n* [Window.scrollY](https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY)\n","source":"_posts/scroll-more.md","raw":"---\nlayout: pages\ntitle: 滚动到底部加载更多\ndate: 2018-04-25 17:00:00\ncategories:\n- js\ntags:\n- js\n---\n\n移动端加载数据时，由于数据太多，不会一次性全部加载出来。有些会采用pc端那样用分页码的形式，但是更多的确实滑动滚动条到内容最后，加载更多内容出来。一般引入了三方的前端框架和插件，基本都会有此功能。偶尔会需要采用原生js实现，故而此处就介绍下原生js的实现方式。另外附上jquery的实现方式。\n<!-- more -->\n\n## 原生js实现思路\n需要三个高度：scrollHeight（文档内容实际高度，*包括超出视窗的溢出部分*）、scrollTop（滚动条滚动距离）、clientHeight（窗口可视范围高度）。当 `clientHeight + scrollTop >= scrollHeight` 时，表示已经抵达内容的底部了，可以加载更多内容。 \n\n*  scrollHeight：通过 `document.documentElement.scrollHeight` 、`document.body.scrollHeight` 可以获取;\n* scrollTop：通过`window.pageYOffset` 、 `document.documentElement.scrollTop` 、 `document.body.scrollTop` 可以获取;（*window.scrollY也可以，只是ie根本不支持。[点此查看](https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY)*）\n* clientHeight：通过`window.innerHeight` 、 `document.documentElement.clientHeight` 、 `document.body.clientHeight` 可以获取;\n\n下面我先附上我的大致测试结果图（页面代码和测试表格数据最后附上）\n![123.png](https://upload-images.jianshu.io/upload_images/1464420-7e31f2e6b4aa8591.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n从第一行数据可以看出来，2000(content)+2*2(border)+20(margin-top)=2024才是全部内容。故`var scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);` 。\n第二行数据，`window.pageYOffset` 不支持ie8；另外查询其他文档得知，`document.documentElement.scrollTop` 和 `document.body.scrollTop` 只会生效一个；window.scrollY也是一样的功能，但是兼容性比第一个还差（[点此查看](https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY)）。故`var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;`。\n第三行数据：显而易见，数字小的那个才是窗口可是区域高度。故`var clientHeight = window.innerHeight || Math.min(document.documentElement.clientHeight,document.body.clientHeight);`。\n### 所以最后的js代码如下：\n```swift\n    window.onscroll= function(){\n        //文档内容实际高度（包括超出视窗的溢出部分）\n        var scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n        //滚动条滚动距离\n        var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n        //窗口可视范围高度\n        var clientHeight = window.innerHeight || Math.min(document.documentElement.clientHeight,document.body.clientHeight);\n        \n        if(clientHeight + scrollTop >= scrollHeight){\n            console.log(\"===加载更多内容……===\");\n        }\n\n    }\n```\n## jquery的实现方式\n代码如下：\n```swift\n<script>\n    $(window).on(\"resize scroll\",function(){\n             \n        var windowHeight = $(window).height();//当前窗口的高度             \n        var scrollTop = $(window).scrollTop();//当前滚动条从上往下滚动的距离            \n        var docHeight = $(document).height(); //当前文档的高度 \n        console.log(scrollTop, windowHeight, docHeight);\n        //当 滚动条距底部的距离 + 滚动条滚动的距离 >= 文档的高度 - 窗口的高度  \n        //换句话说：（滚动条滚动的距离 + 窗口的高度 = 文档的高度）  这个是基本的公式  \n        if (scrollTop + windowHeight >= docHeight) { \n            console.log(\"===加载更多数据===\");\n        }\n    });\n</script>\n```\n\n#### 测试页面代码：\n```swift\n<!-- <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"> -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>test</title>\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\">\n<style>\n* {\n    margin: 0;\n    padding: 0;\n}\n.scroll{\n    margin-top:  20px;\n    border: 2px solid #00f;\n    height: 2000px;\n}\n</style>\n</head>\n<body>\n<div class=\"scroll\">\n    <br><br><br><br><br><br><br>\n    sdhfiahdifashdifhid\n    <span id=\"js_con\"></span>\n</div>\n<script>\n    window.onscroll= function(){\n        var str = '';\n        // str += window.scrollY+\",\";//ie不支持。\n        str += \"(\"+document.documentElement.scrollHeight+\",\"+document.body.scrollHeight+\"),\";\n        str += \"(\"+window.pageYOffset+\",\"+document.documentElement.scrollTop+\",\"+document.body.scrollTop+\"),\";\n        str += \"(\"+window.innerHeight+\",\"+document.documentElement.clientHeight+\",\"+document.body.clientHeight+\"),\";\n        document.getElementById('js_con').innerHTML = str;\n        console.log(str);\n    }\n</script>\n</body>\n</html>\n```\n\n####测试结果：\n\n| 获取方式  | chrome 66  | firefox59  | edge | ie8 |\n|:------------- |:-------------:|:-------------:|:----------:|  ------------:|\n| document.documentElement.scrollHeight，document.body.scrollHeight     | (2024,2004) |  (2024,2004) | (2024,2004) | (2024,2004)|\n| window.pageYoffset，document.documentElement.scrollTop，document.body.scrollTop   | (100,100,0) |  (132,132,0) | (94,94,0) | (undefined,94,0)  |\n| window.innerHeight，document.documentElement.clientHeight，document.body.clientHeight | (636,636,2004) | (619,619,2004) | (628,628,2004) | (undefined,624,2004) |\n\n#### 参考：\n* [滚动条 clientHeight、offsetHeight、scrollTop。](http://hbiao68.iteye.com/blog/2213198)\n* [JavaScript滚动到底部触发加载数据](https://blog.csdn.net/lovetea99/article/details/52025891)\n* [Window pageXOffset 和 pageYOffset 属性](http://www.runoob.com/jsref/prop-win-pagexoffset.html)\n* [HTML DOM innerheight、innerwidth 属性](http://www.w3school.com.cn/jsref/prop_win_innerheight_innerwidth.asp)\n* [Window.scrollY](https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY)\n","slug":"scroll-more","published":1,"updated":"2018-05-30T01:31:41.841Z","comments":1,"photos":[],"link":"","_id":"cji0ejm4f001kg4l10lgkl0jb","content":"<p>移动端加载数据时，由于数据太多，不会一次性全部加载出来。有些会采用pc端那样用分页码的形式，但是更多的确实滑动滚动条到内容最后，加载更多内容出来。一般引入了三方的前端框架和插件，基本都会有此功能。偶尔会需要采用原生js实现，故而此处就介绍下原生js的实现方式。另外附上jquery的实现方式。<br><a id=\"more\"></a></p>\n<h2 id=\"原生js实现思路\"><a href=\"#原生js实现思路\" class=\"headerlink\" title=\"原生js实现思路\"></a>原生js实现思路</h2><p>需要三个高度：scrollHeight（文档内容实际高度，<em>包括超出视窗的溢出部分</em>）、scrollTop（滚动条滚动距离）、clientHeight（窗口可视范围高度）。当 <code>clientHeight + scrollTop &gt;= scrollHeight</code> 时，表示已经抵达内容的底部了，可以加载更多内容。 </p>\n<ul>\n<li>scrollHeight：通过 <code>document.documentElement.scrollHeight</code> 、<code>document.body.scrollHeight</code> 可以获取;</li>\n<li>scrollTop：通过<code>window.pageYOffset</code> 、 <code>document.documentElement.scrollTop</code> 、 <code>document.body.scrollTop</code> 可以获取;（<em>window.scrollY也可以，只是ie根本不支持。<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY\" target=\"_blank\" rel=\"noopener\">点此查看</a></em>）</li>\n<li>clientHeight：通过<code>window.innerHeight</code> 、 <code>document.documentElement.clientHeight</code> 、 <code>document.body.clientHeight</code> 可以获取;</li>\n</ul>\n<p>下面我先附上我的大致测试结果图（页面代码和测试表格数据最后附上）<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-7e31f2e6b4aa8591.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"123.png\"></p>\n<p>从第一行数据可以看出来，2000(content)+2*2(border)+20(margin-top)=2024才是全部内容。故<code>var scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);</code> 。<br>第二行数据，<code>window.pageYOffset</code> 不支持ie8；另外查询其他文档得知，<code>document.documentElement.scrollTop</code> 和 <code>document.body.scrollTop</code> 只会生效一个；window.scrollY也是一样的功能，但是兼容性比第一个还差（<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY\" target=\"_blank\" rel=\"noopener\">点此查看</a>）。故<code>var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;</code>。<br>第三行数据：显而易见，数字小的那个才是窗口可是区域高度。故<code>var clientHeight = window.innerHeight || Math.min(document.documentElement.clientHeight,document.body.clientHeight);</code>。</p>\n<h3 id=\"所以最后的js代码如下：\"><a href=\"#所以最后的js代码如下：\" class=\"headerlink\" title=\"所以最后的js代码如下：\"></a>所以最后的js代码如下：</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.onscroll= function()&#123;</span><br><span class=\"line\">    <span class=\"comment\">//文档内容实际高度（包括超出视窗的溢出部分）</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollHeight = <span class=\"type\">Math</span>.<span class=\"built_in\">max</span>(document.documentElement.scrollHeight, document.body.scrollHeight);</span><br><span class=\"line\">    <span class=\"comment\">//滚动条滚动距离</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;</span><br><span class=\"line\">    <span class=\"comment\">//窗口可视范围高度</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> clientHeight = window.innerHeight || <span class=\"type\">Math</span>.<span class=\"built_in\">min</span>(document.documentElement.clientHeight,document.body.clientHeight);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(clientHeight + scrollTop &gt;= scrollHeight)&#123;</span><br><span class=\"line\">        console.log(<span class=\"string\">\"===加载更多内容……===\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jquery的实现方式\"><a href=\"#jquery的实现方式\" class=\"headerlink\" title=\"jquery的实现方式\"></a>jquery的实现方式</h2><p>代码如下：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    $(window).on(<span class=\"string\">\"resize scroll\"</span>,function()&#123;</span><br><span class=\"line\">             </span><br><span class=\"line\">        <span class=\"keyword\">var</span> windowHeight = $(window).height();<span class=\"comment\">//当前窗口的高度             </span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> scrollTop = $(window).scrollTop();<span class=\"comment\">//当前滚动条从上往下滚动的距离            </span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> docHeight = $(document).height(); <span class=\"comment\">//当前文档的高度 </span></span><br><span class=\"line\">        console.log(scrollTop, windowHeight, docHeight);</span><br><span class=\"line\">        <span class=\"comment\">//当 滚动条距底部的距离 + 滚动条滚动的距离 &gt;= 文档的高度 - 窗口的高度  </span></span><br><span class=\"line\">        <span class=\"comment\">//换句话说：（滚动条滚动的距离 + 窗口的高度 = 文档的高度）  这个是基本的公式  </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (scrollTop + windowHeight &gt;= docHeight) &#123; </span><br><span class=\"line\">            console.log(<span class=\"string\">\"===加载更多数据===\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"测试页面代码：\"><a href=\"#测试页面代码：\" class=\"headerlink\" title=\"测试页面代码：\"></a>测试页面代码：</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- &lt;!<span class=\"type\">DOCTYPE</span> <span class=\"type\">HTML</span> <span class=\"type\">PUBLIC</span> <span class=\"string\">\"-//W3C//DTD HTML 4.01//EN\"</span> <span class=\"string\">\"http://www.w3.org/TR/html4/strict.dtd\"</span>&gt; --&gt;</span><br><span class=\"line\">&lt;!<span class=\"type\">DOCTYPE</span> html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;test&lt;/title&gt;</span><br><span class=\"line\">    &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"</span>&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">* &#123;</span><br><span class=\"line\">    margin: <span class=\"number\">0</span>;</span><br><span class=\"line\">    padding: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.scroll&#123;</span><br><span class=\"line\">    margin-top:  20px;</span><br><span class=\"line\">    border: 2px solid #00f;</span><br><span class=\"line\">    height: 2000px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">scroll</span>\"&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">sdhfiahdifashdifhid</span></span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">span</span> <span class=\"title\">id</span>=\"<span class=\"title\">js_con</span>\"&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">window</span>.<span class=\"title\">onscroll</span>= <span class=\"title\">function</span>()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> str = '';</span><br><span class=\"line\">        <span class=\"comment\">// str += window.scrollY+\",\";//ie不支持。</span></span><br><span class=\"line\">        str += <span class=\"string\">\"(\"</span>+document.documentElement.scrollHeight+<span class=\"string\">\",\"</span>+document.body.scrollHeight+<span class=\"string\">\"),\"</span>;</span><br><span class=\"line\">        str += <span class=\"string\">\"(\"</span>+window.pageYOffset+<span class=\"string\">\",\"</span>+document.documentElement.scrollTop+<span class=\"string\">\",\"</span>+document.body.scrollTop+<span class=\"string\">\"),\"</span>;</span><br><span class=\"line\">        str += <span class=\"string\">\"(\"</span>+window.innerHeight+<span class=\"string\">\",\"</span>+document.documentElement.clientHeight+<span class=\"string\">\",\"</span>+document.body.clientHeight+<span class=\"string\">\"),\"</span>;</span><br><span class=\"line\">        document.getElementById('js_con').innerHTML = str;</span><br><span class=\"line\">        console.log(str);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>####测试结果：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">获取方式</th>\n<th style=\"text-align:center\">chrome 66</th>\n<th style=\"text-align:center\">firefox59</th>\n<th style=\"text-align:center\">edge</th>\n<th style=\"text-align:right\">ie8</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">document.documentElement.scrollHeight，document.body.scrollHeight</td>\n<td style=\"text-align:center\">(2024,2004)</td>\n<td style=\"text-align:center\">(2024,2004)</td>\n<td style=\"text-align:center\">(2024,2004)</td>\n<td style=\"text-align:right\">(2024,2004)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">window.pageYoffset，document.documentElement.scrollTop，document.body.scrollTop</td>\n<td style=\"text-align:center\">(100,100,0)</td>\n<td style=\"text-align:center\">(132,132,0)</td>\n<td style=\"text-align:center\">(94,94,0)</td>\n<td style=\"text-align:right\">(undefined,94,0)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">window.innerHeight，document.documentElement.clientHeight，document.body.clientHeight</td>\n<td style=\"text-align:center\">(636,636,2004)</td>\n<td style=\"text-align:center\">(619,619,2004)</td>\n<td style=\"text-align:center\">(628,628,2004)</td>\n<td style=\"text-align:right\">(undefined,624,2004)</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://hbiao68.iteye.com/blog/2213198\" target=\"_blank\" rel=\"noopener\">滚动条 clientHeight、offsetHeight、scrollTop。</a></li>\n<li><a href=\"https://blog.csdn.net/lovetea99/article/details/52025891\" target=\"_blank\" rel=\"noopener\">JavaScript滚动到底部触发加载数据</a></li>\n<li><a href=\"http://www.runoob.com/jsref/prop-win-pagexoffset.html\" target=\"_blank\" rel=\"noopener\">Window pageXOffset 和 pageYOffset 属性</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/prop_win_innerheight_innerwidth.asp\" target=\"_blank\" rel=\"noopener\">HTML DOM innerheight、innerwidth 属性</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY\" target=\"_blank\" rel=\"noopener\">Window.scrollY</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>移动端加载数据时，由于数据太多，不会一次性全部加载出来。有些会采用pc端那样用分页码的形式，但是更多的确实滑动滚动条到内容最后，加载更多内容出来。一般引入了三方的前端框架和插件，基本都会有此功能。偶尔会需要采用原生js实现，故而此处就介绍下原生js的实现方式。另外附上jquery的实现方式。<br>","more":"</p>\n<h2 id=\"原生js实现思路\"><a href=\"#原生js实现思路\" class=\"headerlink\" title=\"原生js实现思路\"></a>原生js实现思路</h2><p>需要三个高度：scrollHeight（文档内容实际高度，<em>包括超出视窗的溢出部分</em>）、scrollTop（滚动条滚动距离）、clientHeight（窗口可视范围高度）。当 <code>clientHeight + scrollTop &gt;= scrollHeight</code> 时，表示已经抵达内容的底部了，可以加载更多内容。 </p>\n<ul>\n<li>scrollHeight：通过 <code>document.documentElement.scrollHeight</code> 、<code>document.body.scrollHeight</code> 可以获取;</li>\n<li>scrollTop：通过<code>window.pageYOffset</code> 、 <code>document.documentElement.scrollTop</code> 、 <code>document.body.scrollTop</code> 可以获取;（<em>window.scrollY也可以，只是ie根本不支持。<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY\" target=\"_blank\" rel=\"noopener\">点此查看</a></em>）</li>\n<li>clientHeight：通过<code>window.innerHeight</code> 、 <code>document.documentElement.clientHeight</code> 、 <code>document.body.clientHeight</code> 可以获取;</li>\n</ul>\n<p>下面我先附上我的大致测试结果图（页面代码和测试表格数据最后附上）<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-7e31f2e6b4aa8591.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"123.png\"></p>\n<p>从第一行数据可以看出来，2000(content)+2*2(border)+20(margin-top)=2024才是全部内容。故<code>var scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);</code> 。<br>第二行数据，<code>window.pageYOffset</code> 不支持ie8；另外查询其他文档得知，<code>document.documentElement.scrollTop</code> 和 <code>document.body.scrollTop</code> 只会生效一个；window.scrollY也是一样的功能，但是兼容性比第一个还差（<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY\" target=\"_blank\" rel=\"noopener\">点此查看</a>）。故<code>var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;</code>。<br>第三行数据：显而易见，数字小的那个才是窗口可是区域高度。故<code>var clientHeight = window.innerHeight || Math.min(document.documentElement.clientHeight,document.body.clientHeight);</code>。</p>\n<h3 id=\"所以最后的js代码如下：\"><a href=\"#所以最后的js代码如下：\" class=\"headerlink\" title=\"所以最后的js代码如下：\"></a>所以最后的js代码如下：</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.onscroll= function()&#123;</span><br><span class=\"line\">    <span class=\"comment\">//文档内容实际高度（包括超出视窗的溢出部分）</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollHeight = <span class=\"type\">Math</span>.<span class=\"built_in\">max</span>(document.documentElement.scrollHeight, document.body.scrollHeight);</span><br><span class=\"line\">    <span class=\"comment\">//滚动条滚动距离</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;</span><br><span class=\"line\">    <span class=\"comment\">//窗口可视范围高度</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> clientHeight = window.innerHeight || <span class=\"type\">Math</span>.<span class=\"built_in\">min</span>(document.documentElement.clientHeight,document.body.clientHeight);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(clientHeight + scrollTop &gt;= scrollHeight)&#123;</span><br><span class=\"line\">        console.log(<span class=\"string\">\"===加载更多内容……===\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jquery的实现方式\"><a href=\"#jquery的实现方式\" class=\"headerlink\" title=\"jquery的实现方式\"></a>jquery的实现方式</h2><p>代码如下：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    $(window).on(<span class=\"string\">\"resize scroll\"</span>,function()&#123;</span><br><span class=\"line\">             </span><br><span class=\"line\">        <span class=\"keyword\">var</span> windowHeight = $(window).height();<span class=\"comment\">//当前窗口的高度             </span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> scrollTop = $(window).scrollTop();<span class=\"comment\">//当前滚动条从上往下滚动的距离            </span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> docHeight = $(document).height(); <span class=\"comment\">//当前文档的高度 </span></span><br><span class=\"line\">        console.log(scrollTop, windowHeight, docHeight);</span><br><span class=\"line\">        <span class=\"comment\">//当 滚动条距底部的距离 + 滚动条滚动的距离 &gt;= 文档的高度 - 窗口的高度  </span></span><br><span class=\"line\">        <span class=\"comment\">//换句话说：（滚动条滚动的距离 + 窗口的高度 = 文档的高度）  这个是基本的公式  </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (scrollTop + windowHeight &gt;= docHeight) &#123; </span><br><span class=\"line\">            console.log(<span class=\"string\">\"===加载更多数据===\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"测试页面代码：\"><a href=\"#测试页面代码：\" class=\"headerlink\" title=\"测试页面代码：\"></a>测试页面代码：</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- &lt;!<span class=\"type\">DOCTYPE</span> <span class=\"type\">HTML</span> <span class=\"type\">PUBLIC</span> <span class=\"string\">\"-//W3C//DTD HTML 4.01//EN\"</span> <span class=\"string\">\"http://www.w3.org/TR/html4/strict.dtd\"</span>&gt; --&gt;</span><br><span class=\"line\">&lt;!<span class=\"type\">DOCTYPE</span> html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;test&lt;/title&gt;</span><br><span class=\"line\">    &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"</span>&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">* &#123;</span><br><span class=\"line\">    margin: <span class=\"number\">0</span>;</span><br><span class=\"line\">    padding: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.scroll&#123;</span><br><span class=\"line\">    margin-top:  20px;</span><br><span class=\"line\">    border: 2px solid #00f;</span><br><span class=\"line\">    height: 2000px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">scroll</span>\"&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">sdhfiahdifashdifhid</span></span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">span</span> <span class=\"title\">id</span>=\"<span class=\"title\">js_con</span>\"&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">window</span>.<span class=\"title\">onscroll</span>= <span class=\"title\">function</span>()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> str = '';</span><br><span class=\"line\">        <span class=\"comment\">// str += window.scrollY+\",\";//ie不支持。</span></span><br><span class=\"line\">        str += <span class=\"string\">\"(\"</span>+document.documentElement.scrollHeight+<span class=\"string\">\",\"</span>+document.body.scrollHeight+<span class=\"string\">\"),\"</span>;</span><br><span class=\"line\">        str += <span class=\"string\">\"(\"</span>+window.pageYOffset+<span class=\"string\">\",\"</span>+document.documentElement.scrollTop+<span class=\"string\">\",\"</span>+document.body.scrollTop+<span class=\"string\">\"),\"</span>;</span><br><span class=\"line\">        str += <span class=\"string\">\"(\"</span>+window.innerHeight+<span class=\"string\">\",\"</span>+document.documentElement.clientHeight+<span class=\"string\">\",\"</span>+document.body.clientHeight+<span class=\"string\">\"),\"</span>;</span><br><span class=\"line\">        document.getElementById('js_con').innerHTML = str;</span><br><span class=\"line\">        console.log(str);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>####测试结果：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">获取方式</th>\n<th style=\"text-align:center\">chrome 66</th>\n<th style=\"text-align:center\">firefox59</th>\n<th style=\"text-align:center\">edge</th>\n<th style=\"text-align:right\">ie8</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">document.documentElement.scrollHeight，document.body.scrollHeight</td>\n<td style=\"text-align:center\">(2024,2004)</td>\n<td style=\"text-align:center\">(2024,2004)</td>\n<td style=\"text-align:center\">(2024,2004)</td>\n<td style=\"text-align:right\">(2024,2004)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">window.pageYoffset，document.documentElement.scrollTop，document.body.scrollTop</td>\n<td style=\"text-align:center\">(100,100,0)</td>\n<td style=\"text-align:center\">(132,132,0)</td>\n<td style=\"text-align:center\">(94,94,0)</td>\n<td style=\"text-align:right\">(undefined,94,0)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">window.innerHeight，document.documentElement.clientHeight，document.body.clientHeight</td>\n<td style=\"text-align:center\">(636,636,2004)</td>\n<td style=\"text-align:center\">(619,619,2004)</td>\n<td style=\"text-align:center\">(628,628,2004)</td>\n<td style=\"text-align:right\">(undefined,624,2004)</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://hbiao68.iteye.com/blog/2213198\" target=\"_blank\" rel=\"noopener\">滚动条 clientHeight、offsetHeight、scrollTop。</a></li>\n<li><a href=\"https://blog.csdn.net/lovetea99/article/details/52025891\" target=\"_blank\" rel=\"noopener\">JavaScript滚动到底部触发加载数据</a></li>\n<li><a href=\"http://www.runoob.com/jsref/prop-win-pagexoffset.html\" target=\"_blank\" rel=\"noopener\">Window pageXOffset 和 pageYOffset 属性</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/prop_win_innerheight_innerwidth.asp\" target=\"_blank\" rel=\"noopener\">HTML DOM innerheight、innerwidth 属性</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY\" target=\"_blank\" rel=\"noopener\">Window.scrollY</a></li>\n</ul>"},{"layout":"pages","title":"markdown 常用语法（Hexo）","date":"2014-12-22T04:39:04.000Z","_content":"\n摘要：Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!-- more -->\n\n## 引用 >\n\n> 引用的一段话。\n\n## 标题 #\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n## 列表(-或+或*或1.)\n\n* 无序列表*\n- 无序列表-\n  + 无序列表+\n  + 无序列表+\n- 无序列表-\n* 无序列表\n\n1. 有序列表1.\n1. 有序列表1.\n1. 有序列表1.\n\n##链接（文本链接，图片链接）\n自动链接：<http://example.com/>\n文本链接：[baidu](http://www.baidu.com)\n图片链接：\n![like-img](http://upload-images.jianshu.io/upload_images/1464420-0d591f73288641ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 强调\n\n**粗体**\n*斜体*\n~~文字删除线~~\n*single asterisks*\n_斜体_\n**double asterisks**\n__粗体double__\n\n## 代码块\n\n行内代码：`inline code`\n代码块：\n```swift\n$(function(){\nalert(\"This is a test js !!!!\")\n});\n```\n代码块2： \n``` bash\n# 代码块\n$ hexo new \"My New Post\"\n```\n### codepen 和 jsfiddle 代码引入，相关设置见此文[]()。\n\n1. 在文章中嵌入codepen代码：\n\n```swift\n{% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %}\n```\n\n{% codepen CiTA bgjKKE dark [css,result [265]] %}\n\n原链接：\n<p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bgjKKE\" data-default-tab=\"css,result\" data-user=\"CiTA\" data-embed-version=\"2\" data-pen-title=\"CSS sidebar toggle\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE/\">CSS sidebar toggle</a> by Silvestar Bistrović (<a href=\"https://codepen.io/CiTA\">@CiTA</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n2. 在文章中嵌入 jsFiddle 代码：\n\n```swift\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n\n## 分割线\n\n* * *\n***\n*****\n- - -\n---------------------------------------\n\n## 表格\n表格（:在两边， 文本居中；在左边，文本居中；在右边，文本居右）：\n\n| 姓名  | 年龄 | 身高| 其他 |\n|:----|:----:|:----:|----:|\n| fli | 27 | 175 | 无 |\n| wdy | 22 | 180 | 无 |\n| kiyei | 19 | 170 | 有 |\n\n\n\n## 参考\n* [参考1](http://www.missfli.com)\n* [参考2](http://www.missfli.com)\n","source":"_posts/template.md","raw":"---\nlayout: pages\ntitle: markdown 常用语法（Hexo）\ndate: 2014-12-22 12:39:04\ncategories:\n- class\n- 分类2\ntags:\n- tag1\n- 标签2\n---\n\n摘要：Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!-- more -->\n\n## 引用 >\n\n> 引用的一段话。\n\n## 标题 #\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n## 列表(-或+或*或1.)\n\n* 无序列表*\n- 无序列表-\n  + 无序列表+\n  + 无序列表+\n- 无序列表-\n* 无序列表\n\n1. 有序列表1.\n1. 有序列表1.\n1. 有序列表1.\n\n##链接（文本链接，图片链接）\n自动链接：<http://example.com/>\n文本链接：[baidu](http://www.baidu.com)\n图片链接：\n![like-img](http://upload-images.jianshu.io/upload_images/1464420-0d591f73288641ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 强调\n\n**粗体**\n*斜体*\n~~文字删除线~~\n*single asterisks*\n_斜体_\n**double asterisks**\n__粗体double__\n\n## 代码块\n\n行内代码：`inline code`\n代码块：\n```swift\n$(function(){\nalert(\"This is a test js !!!!\")\n});\n```\n代码块2： \n``` bash\n# 代码块\n$ hexo new \"My New Post\"\n```\n### codepen 和 jsfiddle 代码引入，相关设置见此文[]()。\n\n1. 在文章中嵌入codepen代码：\n\n```swift\n{% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %}\n```\n\n{% codepen CiTA bgjKKE dark [css,result [265]] %}\n\n原链接：\n<p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bgjKKE\" data-default-tab=\"css,result\" data-user=\"CiTA\" data-embed-version=\"2\" data-pen-title=\"CSS sidebar toggle\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE/\">CSS sidebar toggle</a> by Silvestar Bistrović (<a href=\"https://codepen.io/CiTA\">@CiTA</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n2. 在文章中嵌入 jsFiddle 代码：\n\n```swift\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n\n## 分割线\n\n* * *\n***\n*****\n- - -\n---------------------------------------\n\n## 表格\n表格（:在两边， 文本居中；在左边，文本居中；在右边，文本居右）：\n\n| 姓名  | 年龄 | 身高| 其他 |\n|:----|:----:|:----:|----:|\n| fli | 27 | 175 | 无 |\n| wdy | 22 | 180 | 无 |\n| kiyei | 19 | 170 | 有 |\n\n\n\n## 参考\n* [参考1](http://www.missfli.com)\n* [参考2](http://www.missfli.com)\n","slug":"template","published":1,"updated":"2018-05-29T08:46:04.229Z","comments":1,"photos":[],"link":"","_id":"cji0ejm4l001ng4l12b3c03ys","content":"<p>摘要：Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.<br><a id=\"more\"></a></p>\n<h2 id=\"引用-gt\"><a href=\"#引用-gt\" class=\"headerlink\" title=\"引用 &gt;\"></a>引用 &gt;</h2><blockquote>\n<p>引用的一段话。</p>\n</blockquote>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><h2 id=\"列表-或-或-或1\"><a href=\"#列表-或-或-或1\" class=\"headerlink\" title=\"列表(-或+或*或1.)\"></a>列表(-或+或*或1.)</h2><ul>\n<li>无序列表*</li>\n</ul>\n<ul>\n<li>无序列表-<ul>\n<li>无序列表+</li>\n<li>无序列表+</li>\n</ul>\n</li>\n<li>无序列表-</li>\n</ul>\n<ul>\n<li>无序列表</li>\n</ul>\n<ol>\n<li>有序列表1.</li>\n<li>有序列表1.</li>\n<li>有序列表1.</li>\n</ol>\n<p>##链接（文本链接，图片链接）<br>自动链接：<a href=\"http://example.com/\" target=\"_blank\" rel=\"noopener\">http://example.com/</a><br>文本链接：<a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">baidu</a><br>图片链接：<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-0d591f73288641ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"like-img\"></p>\n<h2 id=\"强调\"><a href=\"#强调\" class=\"headerlink\" title=\"强调\"></a>强调</h2><p><strong>粗体</strong><br><em>斜体</em><br><del>文字删除线</del><br><em>single asterisks</em><br>_斜体_<br><strong>double asterisks</strong><br><strong>粗体double</strong></p>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p>行内代码：<code>inline code</code><br>代码块：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(function()&#123;</span><br><span class=\"line\">alert(<span class=\"string\">\"This is a test js !!!!\"</span>)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>代码块2：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 代码块</span></span><br><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"codepen-和-jsfiddle-代码引入，相关设置见此文。\"><a href=\"#codepen-和-jsfiddle-代码引入，相关设置见此文。\" class=\"headerlink\" title=\"codepen 和 jsfiddle 代码引入，相关设置见此文。\"></a>codepen 和 jsfiddle 代码引入，相关设置见此文<a href=\"\"></a>。</h3><ol>\n<li>在文章中嵌入codepen代码：</li>\n</ol>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %&#125;</span><br></pre></td></tr></table></figure>\n<iframe id=\"cp_embed_bgjKKE\" src=\"//codepen.io/CiTA/embed/bgjKKE?height=[265]]&theme-id=dark&slug-hash=bgjKKE&default-tab=[css,result\" scrolling=\"no\" frameborder=\"no\" height=\"[265]]\" allowtransparency=\"true\" allowfullscreen=\"true\" class=\"cp_embed_iframe\" style=\"width: 100%; overflow: hidden;\"></iframe>\n<p>原链接：</p>\n<p></p><p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bgjKKE\" data-default-tab=\"css,result\" data-user=\"CiTA\" data-embed-version=\"2\" data-pen-title=\"CSS sidebar toggle\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE/\" target=\"_blank\" rel=\"noopener\">CSS sidebar toggle</a> by Silvestar Bistrović (<a href=\"https://codepen.io/CiTA\" target=\"_blank\" rel=\"noopener\">@CiTA</a>) on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.</p><p></p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n<ol start=\"2\">\n<li>在文章中嵌入 jsFiddle 代码：</li>\n</ol>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h2><hr>\n<hr>\n<hr>\n<hr>\n<hr>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p>表格（:在两边， 文本居中；在左边，文本居中；在右边，文本居右）：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">姓名</th>\n<th style=\"text-align:center\">年龄</th>\n<th style=\"text-align:center\">身高</th>\n<th style=\"text-align:right\">其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">fli</td>\n<td style=\"text-align:center\">27</td>\n<td style=\"text-align:center\">175</td>\n<td style=\"text-align:right\">无</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">wdy</td>\n<td style=\"text-align:center\">22</td>\n<td style=\"text-align:center\">180</td>\n<td style=\"text-align:right\">无</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">kiyei</td>\n<td style=\"text-align:center\">19</td>\n<td style=\"text-align:center\">170</td>\n<td style=\"text-align:right\">有</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://www.missfli.com\" target=\"_blank\" rel=\"noopener\">参考1</a></li>\n<li><a href=\"http://www.missfli.com\" target=\"_blank\" rel=\"noopener\">参考2</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>摘要：Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.<br>","more":"</p>\n<h2 id=\"引用-gt\"><a href=\"#引用-gt\" class=\"headerlink\" title=\"引用 &gt;\"></a>引用 &gt;</h2><blockquote>\n<p>引用的一段话。</p>\n</blockquote>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><h2 id=\"列表-或-或-或1\"><a href=\"#列表-或-或-或1\" class=\"headerlink\" title=\"列表(-或+或*或1.)\"></a>列表(-或+或*或1.)</h2><ul>\n<li>无序列表*</li>\n</ul>\n<ul>\n<li>无序列表-<ul>\n<li>无序列表+</li>\n<li>无序列表+</li>\n</ul>\n</li>\n<li>无序列表-</li>\n</ul>\n<ul>\n<li>无序列表</li>\n</ul>\n<ol>\n<li>有序列表1.</li>\n<li>有序列表1.</li>\n<li>有序列表1.</li>\n</ol>\n<p>##链接（文本链接，图片链接）<br>自动链接：<a href=\"http://example.com/\" target=\"_blank\" rel=\"noopener\">http://example.com/</a><br>文本链接：<a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">baidu</a><br>图片链接：<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-0d591f73288641ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"like-img\"></p>\n<h2 id=\"强调\"><a href=\"#强调\" class=\"headerlink\" title=\"强调\"></a>强调</h2><p><strong>粗体</strong><br><em>斜体</em><br><del>文字删除线</del><br><em>single asterisks</em><br>_斜体_<br><strong>double asterisks</strong><br><strong>粗体double</strong></p>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p>行内代码：<code>inline code</code><br>代码块：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(function()&#123;</span><br><span class=\"line\">alert(<span class=\"string\">\"This is a test js !!!!\"</span>)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>代码块2：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 代码块</span></span><br><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"codepen-和-jsfiddle-代码引入，相关设置见此文。\"><a href=\"#codepen-和-jsfiddle-代码引入，相关设置见此文。\" class=\"headerlink\" title=\"codepen 和 jsfiddle 代码引入，相关设置见此文。\"></a>codepen 和 jsfiddle 代码引入，相关设置见此文<a href=\"\"></a>。</h3><ol>\n<li>在文章中嵌入codepen代码：</li>\n</ol>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %&#125;</span><br></pre></td></tr></table></figure>\n<iframe id=\"cp_embed_bgjKKE\" src=\"//codepen.io/CiTA/embed/bgjKKE?height=[265]]&theme-id=dark&slug-hash=bgjKKE&default-tab=[css,result\" scrolling=\"no\" frameborder=\"no\" height=\"[265]]\" allowtransparency=\"true\" allowfullscreen=\"true\" class=\"cp_embed_iframe\" style=\"width: 100%; overflow: hidden;\"></iframe>\n<p>原链接：</p>\n<p></p><p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"bgjKKE\" data-default-tab=\"css,result\" data-user=\"CiTA\" data-embed-version=\"2\" data-pen-title=\"CSS sidebar toggle\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE/\" target=\"_blank\" rel=\"noopener\">CSS sidebar toggle</a> by Silvestar Bistrović (<a href=\"https://codepen.io/CiTA\" target=\"_blank\" rel=\"noopener\">@CiTA</a>) on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.</p><p></p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n<ol start=\"2\">\n<li>在文章中嵌入 jsFiddle 代码：</li>\n</ol>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h2><hr>\n<hr>\n<hr>\n<hr>\n<hr>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p>表格（:在两边， 文本居中；在左边，文本居中；在右边，文本居右）：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">姓名</th>\n<th style=\"text-align:center\">年龄</th>\n<th style=\"text-align:center\">身高</th>\n<th style=\"text-align:right\">其他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">fli</td>\n<td style=\"text-align:center\">27</td>\n<td style=\"text-align:center\">175</td>\n<td style=\"text-align:right\">无</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">wdy</td>\n<td style=\"text-align:center\">22</td>\n<td style=\"text-align:center\">180</td>\n<td style=\"text-align:right\">无</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">kiyei</td>\n<td style=\"text-align:center\">19</td>\n<td style=\"text-align:center\">170</td>\n<td style=\"text-align:right\">有</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://www.missfli.com\" target=\"_blank\" rel=\"noopener\">参考1</a></li>\n<li><a href=\"http://www.missfli.com\" target=\"_blank\" rel=\"noopener\">参考2</a></li>\n</ul>"},{"layout":"pages","title":"文本溢出显示省略号(单行和多行)","date":"2017-09-05T03:15:00.000Z","_content":"\n平时用的较多的事单行文本溢出显示省略号，做微信端发现移动端不少效果都是多行文本溢出显示省略号，故而总结一下，方便今后使用。\n<!-- more -->\n\n## 单行文本的溢出\n\n```swift\noverflow: hidden;\ntext-overflow:ellipsis;\nwhite-space: nowrap;\n```\n效果：\n\n![0.png](http://upload-images.jianshu.io/upload_images/1464420-5f5088a716a64b40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 多行文本的溢出\n\n```swift\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 3;/*行数*/\noverflow: hidden;\ntext-overflow: ellipsis;\n```\n效果：\n![111.png](https://upload-images.jianshu.io/upload_images/1464420-8796e9c88136bd41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n#### 适用范围：\n因使用了WebKit的CSS扩展属性，该方法适用于WebKit浏览器及移动端；\n注：\n1. -webkit-line-clamp用来限制在一个块元素显示的文本的行数。 为了实现该效果，它需要组合其他的WebKit属性。常见结合属性：\n1. display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。\n1. -webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。\n\n### 另外还有一些解决方法：\n\n* 利用伪类:after\n* 利用绝对定位和padding;(跨浏览器解决方案)(跟第一种用伪类的方案类似)\n* 利用js插件来实现该功能，如[Clamp.js](https://github.com/bigdots/Clamp.js),[jQuery.dotdotdot](https://github.com/bigdots/jQuery.dotdotdot)\n\n#### 利用伪类:after\n```swift\n<div id=\"con\">\n  <span id=\"txt\">文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略</span>\n  <span class=\"t\"></span>\n</div>\n<style>\n#txt{\n  display: inline-block;\n  height: 40px;\n  width: 250px;\n  line-height: 20px;\n  overflow: hidden;\n  font-size: 16px;\n}\n.t:after{\n  display: inline;\n  content: \"...\";\n  font-size: 16px;\n    \n}\n</style>\n```\n效果：\n\n![2.png](http://upload-images.jianshu.io/upload_images/1464420-14250539db66aa3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n注：\n该方法适用范围广，但文字未超出行的情况下也会出现省略号,可结合[js](http://lib.csdn.net/base/javascript)优化该方法。\n\n该方法改良版：\n```swift\n<head>\n    <meta charset=\"UTF-8\">\n    <title>test</title>\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"></script>\n    <style>\n    #txt{\n      display: inline-block;\n      height: 40px;\n      width: 15em;\n      line-height: 20px;\n      overflow: hidden;\n      font-size: 16px;\n      border: 1px solid #f00;\n      position: relative;\n    }\n    #txt:after{\n        display: block;\n        content: \"...\";\n        font-size: inherit;\n        width: 2em;\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        background: #fff;\n        \n    }\n    </style>\n<body>\n<span id=\"txt\">简书是一个优质的创作社区,在这里,你可以任性地创作,一篇短文、一张照片、一首诗、一幅画……我们相信,每个人都是生活中的艺术家,有着无穷的创造力。</span>\n</body>\n</html>\n```\n效果图：\n![111.png](https://upload-images.jianshu.io/upload_images/1464420-b96164416284e148.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n注：当文字不满2行时，省略号和文本最后一个字有空白区，还是加js判断才能完美达到效果。\n\n\n#### 利用绝对定位和padding;(跨浏览器解决方案)\n```swift\n<p id=\"con2\">\n  文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略<span class=\"t2\">...</span>\n</p>\n<style>\n#con2{\n  position: relative;\n  height: 40px;\n  width: 250px;\n  line-height: 20px;\n  overflow: hidden;\n  padding-right: 12px;\n}  \n.t2{\n  position: absolute;\n  right: 0;\n  bottom: 0;\n}\n</style>\n```\n效果：\n\n![3.png](http://upload-images.jianshu.io/upload_images/1464420-ca0069c21847f750.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 参考：\n* [CSS文本溢出显示省略号](http://www.cnblogs.com/yzg1/p/5089534.html)\n* [CSS实现单行、多行文本溢出显示省略号（…）](http://blog.csdn.net/zhiyuanfl/article/details/55190770)\n","source":"_posts/text-overflow-ellipsis.md","raw":"---\nlayout: pages\ntitle: 文本溢出显示省略号(单行和多行)\ndate: 2017-09-05 11:15:00\ncategories:\n- css\ntags:\n- css3\n---\n\n平时用的较多的事单行文本溢出显示省略号，做微信端发现移动端不少效果都是多行文本溢出显示省略号，故而总结一下，方便今后使用。\n<!-- more -->\n\n## 单行文本的溢出\n\n```swift\noverflow: hidden;\ntext-overflow:ellipsis;\nwhite-space: nowrap;\n```\n效果：\n\n![0.png](http://upload-images.jianshu.io/upload_images/1464420-5f5088a716a64b40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 多行文本的溢出\n\n```swift\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 3;/*行数*/\noverflow: hidden;\ntext-overflow: ellipsis;\n```\n效果：\n![111.png](https://upload-images.jianshu.io/upload_images/1464420-8796e9c88136bd41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n#### 适用范围：\n因使用了WebKit的CSS扩展属性，该方法适用于WebKit浏览器及移动端；\n注：\n1. -webkit-line-clamp用来限制在一个块元素显示的文本的行数。 为了实现该效果，它需要组合其他的WebKit属性。常见结合属性：\n1. display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。\n1. -webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。\n\n### 另外还有一些解决方法：\n\n* 利用伪类:after\n* 利用绝对定位和padding;(跨浏览器解决方案)(跟第一种用伪类的方案类似)\n* 利用js插件来实现该功能，如[Clamp.js](https://github.com/bigdots/Clamp.js),[jQuery.dotdotdot](https://github.com/bigdots/jQuery.dotdotdot)\n\n#### 利用伪类:after\n```swift\n<div id=\"con\">\n  <span id=\"txt\">文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略</span>\n  <span class=\"t\"></span>\n</div>\n<style>\n#txt{\n  display: inline-block;\n  height: 40px;\n  width: 250px;\n  line-height: 20px;\n  overflow: hidden;\n  font-size: 16px;\n}\n.t:after{\n  display: inline;\n  content: \"...\";\n  font-size: 16px;\n    \n}\n</style>\n```\n效果：\n\n![2.png](http://upload-images.jianshu.io/upload_images/1464420-14250539db66aa3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n注：\n该方法适用范围广，但文字未超出行的情况下也会出现省略号,可结合[js](http://lib.csdn.net/base/javascript)优化该方法。\n\n该方法改良版：\n```swift\n<head>\n    <meta charset=\"UTF-8\">\n    <title>test</title>\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"></script>\n    <style>\n    #txt{\n      display: inline-block;\n      height: 40px;\n      width: 15em;\n      line-height: 20px;\n      overflow: hidden;\n      font-size: 16px;\n      border: 1px solid #f00;\n      position: relative;\n    }\n    #txt:after{\n        display: block;\n        content: \"...\";\n        font-size: inherit;\n        width: 2em;\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        background: #fff;\n        \n    }\n    </style>\n<body>\n<span id=\"txt\">简书是一个优质的创作社区,在这里,你可以任性地创作,一篇短文、一张照片、一首诗、一幅画……我们相信,每个人都是生活中的艺术家,有着无穷的创造力。</span>\n</body>\n</html>\n```\n效果图：\n![111.png](https://upload-images.jianshu.io/upload_images/1464420-b96164416284e148.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n注：当文字不满2行时，省略号和文本最后一个字有空白区，还是加js判断才能完美达到效果。\n\n\n#### 利用绝对定位和padding;(跨浏览器解决方案)\n```swift\n<p id=\"con2\">\n  文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略<span class=\"t2\">...</span>\n</p>\n<style>\n#con2{\n  position: relative;\n  height: 40px;\n  width: 250px;\n  line-height: 20px;\n  overflow: hidden;\n  padding-right: 12px;\n}  \n.t2{\n  position: absolute;\n  right: 0;\n  bottom: 0;\n}\n</style>\n```\n效果：\n\n![3.png](http://upload-images.jianshu.io/upload_images/1464420-ca0069c21847f750.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 参考：\n* [CSS文本溢出显示省略号](http://www.cnblogs.com/yzg1/p/5089534.html)\n* [CSS实现单行、多行文本溢出显示省略号（…）](http://blog.csdn.net/zhiyuanfl/article/details/55190770)\n","slug":"text-overflow-ellipsis","published":1,"updated":"2018-05-30T01:15:55.114Z","comments":1,"photos":[],"link":"","_id":"cji0ejm4q001qg4l1i0pzpwlj","content":"<p>平时用的较多的事单行文本溢出显示省略号，做微信端发现移动端不少效果都是多行文本溢出显示省略号，故而总结一下，方便今后使用。<br><a id=\"more\"></a></p>\n<h2 id=\"单行文本的溢出\"><a href=\"#单行文本的溢出\" class=\"headerlink\" title=\"单行文本的溢出\"></a>单行文本的溢出</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">overflow: hidden;</span><br><span class=\"line\">text-overflow:ellipsis;</span><br><span class=\"line\">white-space: nowrap;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-5f5088a716a64b40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"0.png\"></p>\n<h2 id=\"多行文本的溢出\"><a href=\"#多行文本的溢出\" class=\"headerlink\" title=\"多行文本的溢出\"></a>多行文本的溢出</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">display: -webkit-box;</span><br><span class=\"line\">-webkit-box-orient: vertical;</span><br><span class=\"line\">-webkit-line-clamp: <span class=\"number\">3</span>;<span class=\"comment\">/*行数*/</span></span><br><span class=\"line\">overflow: hidden;</span><br><span class=\"line\">text-overflow: ellipsis;</span><br></pre></td></tr></table></figure>\n<p>效果：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-8796e9c88136bd41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"111.png\"></p>\n<h4 id=\"适用范围：\"><a href=\"#适用范围：\" class=\"headerlink\" title=\"适用范围：\"></a>适用范围：</h4><p>因使用了WebKit的CSS扩展属性，该方法适用于WebKit浏览器及移动端；<br>注：</p>\n<ol>\n<li>-webkit-line-clamp用来限制在一个块元素显示的文本的行数。 为了实现该效果，它需要组合其他的WebKit属性。常见结合属性：</li>\n<li>display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。</li>\n<li>-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。</li>\n</ol>\n<h3 id=\"另外还有一些解决方法：\"><a href=\"#另外还有一些解决方法：\" class=\"headerlink\" title=\"另外还有一些解决方法：\"></a>另外还有一些解决方法：</h3><ul>\n<li>利用伪类:after</li>\n<li>利用绝对定位和padding;(跨浏览器解决方案)(跟第一种用伪类的方案类似)</li>\n<li>利用js插件来实现该功能，如<a href=\"https://github.com/bigdots/Clamp.js\" target=\"_blank\" rel=\"noopener\">Clamp.js</a>,<a href=\"https://github.com/bigdots/jQuery.dotdotdot\" target=\"_blank\" rel=\"noopener\">jQuery.dotdotdot</a></li>\n</ul>\n<h4 id=\"利用伪类-after\"><a href=\"#利用伪类-after\" class=\"headerlink\" title=\"利用伪类:after\"></a>利用伪类:after</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"con\"</span>&gt;</span><br><span class=\"line\">  &lt;span id=<span class=\"string\">\"txt\"</span>&gt;文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略&lt;/span&gt;</span><br><span class=\"line\">  &lt;span <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">t</span>\"&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">#<span class=\"title\">txt</span></span>&#123;</span><br><span class=\"line\">  display: inline-block;</span><br><span class=\"line\">  height: 40px;</span><br><span class=\"line\">  width: 250px;</span><br><span class=\"line\">  line-height: 20px;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  font-size: 16px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.t:after&#123;</span><br><span class=\"line\">  display: inline;</span><br><span class=\"line\">  content: <span class=\"string\">\"...\"</span>;</span><br><span class=\"line\">  font-size: 16px;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-14250539db66aa3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"2.png\"></p>\n<p>注：<br>该方法适用范围广，但文字未超出行的情况下也会出现省略号,可结合<a href=\"http://lib.csdn.net/base/javascript\" target=\"_blank\" rel=\"noopener\">js</a>优化该方法。</p>\n<p>该方法改良版：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;test&lt;/title&gt;</span><br><span class=\"line\">    &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;style&gt;</span><br><span class=\"line\">    #txt&#123;</span><br><span class=\"line\">      display: inline-block;</span><br><span class=\"line\">      height: 40px;</span><br><span class=\"line\">      width: 15em;</span><br><span class=\"line\">      line-height: 20px;</span><br><span class=\"line\">      overflow: hidden;</span><br><span class=\"line\">      font-size: 16px;</span><br><span class=\"line\">      border: 1px solid #f00;</span><br><span class=\"line\">      position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    #txt:after&#123;</span><br><span class=\"line\">        display: block;</span><br><span class=\"line\">        content: <span class=\"string\">\"...\"</span>;</span><br><span class=\"line\">        font-size: inherit;</span><br><span class=\"line\">        width: 2em;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        bottom: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        background: #fff;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;span id=<span class=\"string\">\"txt\"</span>&gt;简书是一个优质的创作社区,在这里,你可以任性地创作,一篇短文、一张照片、一首诗、一幅画……我们相信,每个人都是生活中的艺术家,有着无穷的创造力。&lt;/span&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<p>效果图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-b96164416284e148.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"111.png\"></p>\n<p>注：当文字不满2行时，省略号和文本最后一个字有空白区，还是加js判断才能完美达到效果。</p>\n<h4 id=\"利用绝对定位和padding-跨浏览器解决方案\"><a href=\"#利用绝对定位和padding-跨浏览器解决方案\" class=\"headerlink\" title=\"利用绝对定位和padding;(跨浏览器解决方案)\"></a>利用绝对定位和padding;(跨浏览器解决方案)</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p id=<span class=\"string\">\"con2\"</span>&gt;</span><br><span class=\"line\">  文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略&lt;span <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">t2</span>\"&gt;...&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">#<span class=\"title\">con2</span></span>&#123;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  height: 40px;</span><br><span class=\"line\">  width: 250px;</span><br><span class=\"line\">  line-height: 20px;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  padding-<span class=\"keyword\">right</span>: 12px;</span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">.t2&#123;</span><br><span class=\"line\">  position: absolute;</span><br><span class=\"line\">  <span class=\"keyword\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  bottom: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-ca0069c21847f750.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"3.png\"></p>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://www.cnblogs.com/yzg1/p/5089534.html\" target=\"_blank\" rel=\"noopener\">CSS文本溢出显示省略号</a></li>\n<li><a href=\"http://blog.csdn.net/zhiyuanfl/article/details/55190770\" target=\"_blank\" rel=\"noopener\">CSS实现单行、多行文本溢出显示省略号（…）</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>平时用的较多的事单行文本溢出显示省略号，做微信端发现移动端不少效果都是多行文本溢出显示省略号，故而总结一下，方便今后使用。<br>","more":"</p>\n<h2 id=\"单行文本的溢出\"><a href=\"#单行文本的溢出\" class=\"headerlink\" title=\"单行文本的溢出\"></a>单行文本的溢出</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">overflow: hidden;</span><br><span class=\"line\">text-overflow:ellipsis;</span><br><span class=\"line\">white-space: nowrap;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-5f5088a716a64b40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"0.png\"></p>\n<h2 id=\"多行文本的溢出\"><a href=\"#多行文本的溢出\" class=\"headerlink\" title=\"多行文本的溢出\"></a>多行文本的溢出</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">display: -webkit-box;</span><br><span class=\"line\">-webkit-box-orient: vertical;</span><br><span class=\"line\">-webkit-line-clamp: <span class=\"number\">3</span>;<span class=\"comment\">/*行数*/</span></span><br><span class=\"line\">overflow: hidden;</span><br><span class=\"line\">text-overflow: ellipsis;</span><br></pre></td></tr></table></figure>\n<p>效果：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-8796e9c88136bd41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"111.png\"></p>\n<h4 id=\"适用范围：\"><a href=\"#适用范围：\" class=\"headerlink\" title=\"适用范围：\"></a>适用范围：</h4><p>因使用了WebKit的CSS扩展属性，该方法适用于WebKit浏览器及移动端；<br>注：</p>\n<ol>\n<li>-webkit-line-clamp用来限制在一个块元素显示的文本的行数。 为了实现该效果，它需要组合其他的WebKit属性。常见结合属性：</li>\n<li>display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。</li>\n<li>-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。</li>\n</ol>\n<h3 id=\"另外还有一些解决方法：\"><a href=\"#另外还有一些解决方法：\" class=\"headerlink\" title=\"另外还有一些解决方法：\"></a>另外还有一些解决方法：</h3><ul>\n<li>利用伪类:after</li>\n<li>利用绝对定位和padding;(跨浏览器解决方案)(跟第一种用伪类的方案类似)</li>\n<li>利用js插件来实现该功能，如<a href=\"https://github.com/bigdots/Clamp.js\" target=\"_blank\" rel=\"noopener\">Clamp.js</a>,<a href=\"https://github.com/bigdots/jQuery.dotdotdot\" target=\"_blank\" rel=\"noopener\">jQuery.dotdotdot</a></li>\n</ul>\n<h4 id=\"利用伪类-after\"><a href=\"#利用伪类-after\" class=\"headerlink\" title=\"利用伪类:after\"></a>利用伪类:after</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"con\"</span>&gt;</span><br><span class=\"line\">  &lt;span id=<span class=\"string\">\"txt\"</span>&gt;文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略&lt;/span&gt;</span><br><span class=\"line\">  &lt;span <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">t</span>\"&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">#<span class=\"title\">txt</span></span>&#123;</span><br><span class=\"line\">  display: inline-block;</span><br><span class=\"line\">  height: 40px;</span><br><span class=\"line\">  width: 250px;</span><br><span class=\"line\">  line-height: 20px;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  font-size: 16px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.t:after&#123;</span><br><span class=\"line\">  display: inline;</span><br><span class=\"line\">  content: <span class=\"string\">\"...\"</span>;</span><br><span class=\"line\">  font-size: 16px;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-14250539db66aa3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"2.png\"></p>\n<p>注：<br>该方法适用范围广，但文字未超出行的情况下也会出现省略号,可结合<a href=\"http://lib.csdn.net/base/javascript\" target=\"_blank\" rel=\"noopener\">js</a>优化该方法。</p>\n<p>该方法改良版：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;test&lt;/title&gt;</span><br><span class=\"line\">    &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;style&gt;</span><br><span class=\"line\">    #txt&#123;</span><br><span class=\"line\">      display: inline-block;</span><br><span class=\"line\">      height: 40px;</span><br><span class=\"line\">      width: 15em;</span><br><span class=\"line\">      line-height: 20px;</span><br><span class=\"line\">      overflow: hidden;</span><br><span class=\"line\">      font-size: 16px;</span><br><span class=\"line\">      border: 1px solid #f00;</span><br><span class=\"line\">      position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    #txt:after&#123;</span><br><span class=\"line\">        display: block;</span><br><span class=\"line\">        content: <span class=\"string\">\"...\"</span>;</span><br><span class=\"line\">        font-size: inherit;</span><br><span class=\"line\">        width: 2em;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        bottom: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        background: #fff;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;span id=<span class=\"string\">\"txt\"</span>&gt;简书是一个优质的创作社区,在这里,你可以任性地创作,一篇短文、一张照片、一首诗、一幅画……我们相信,每个人都是生活中的艺术家,有着无穷的创造力。&lt;/span&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<p>效果图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-b96164416284e148.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"111.png\"></p>\n<p>注：当文字不满2行时，省略号和文本最后一个字有空白区，还是加js判断才能完美达到效果。</p>\n<h4 id=\"利用绝对定位和padding-跨浏览器解决方案\"><a href=\"#利用绝对定位和padding-跨浏览器解决方案\" class=\"headerlink\" title=\"利用绝对定位和padding;(跨浏览器解决方案)\"></a>利用绝对定位和padding;(跨浏览器解决方案)</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p id=<span class=\"string\">\"con2\"</span>&gt;</span><br><span class=\"line\">  文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略号,文本溢出显示省略&lt;span <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">t2</span>\"&gt;...&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">#<span class=\"title\">con2</span></span>&#123;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  height: 40px;</span><br><span class=\"line\">  width: 250px;</span><br><span class=\"line\">  line-height: 20px;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  padding-<span class=\"keyword\">right</span>: 12px;</span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">.t2&#123;</span><br><span class=\"line\">  position: absolute;</span><br><span class=\"line\">  <span class=\"keyword\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  bottom: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-ca0069c21847f750.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"3.png\"></p>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://www.cnblogs.com/yzg1/p/5089534.html\" target=\"_blank\" rel=\"noopener\">CSS文本溢出显示省略号</a></li>\n<li><a href=\"http://blog.csdn.net/zhiyuanfl/article/details/55190770\" target=\"_blank\" rel=\"noopener\">CSS实现单行、多行文本溢出显示省略号（…）</a></li>\n</ul>"},{"layout":"pages","title":"apache tomcat6.0 支持sthml","date":"2017-06-26T13:05:00.000Z","_content":"\n* ####1.修改web.xml文件\n把<!-- URL pattern \"*.shtml\". This servlet supports the following -->后面的<servlet>相关注释去掉。\n\n![](http://upload-images.jianshu.io/upload_images/1464420-5d02ab3035c8c2bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n去掉<!-- The mapping for the SSI servlet --> 后面<servlet-mapping>的注释\n\n![3.png](http://upload-images.jianshu.io/upload_images/1464420-daa70acb74151eaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* ####2.修改context.xml\n给Context加一个`privileged=\"true\"`，重启动tomcat ,如果发现网页是乱码则在ssi servlet 中加如下代码\n```swift\n<init-param>\n    <param-name>inputEncoding</param-name>\n    <param-value>utf-8</param-value>\n    </init-param>\n    <init-param>\n    <param-name>outputEncoding</param-name>\n    <param-value>utf-8</param-value>\n</init-param>\n ```\n\n![4.png](http://upload-images.jianshu.io/upload_images/1464420-73d0e2b796c2f2a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n修改完后重新启动服务器即可！\n","source":"_posts/tomcat6-sthml.md","raw":"\n---\nlayout: pages\ntitle: apache tomcat6.0 支持sthml\ndate: 2017-06-26 21:05:00\ntags:\n- tomcat6\n---\n\n* ####1.修改web.xml文件\n把<!-- URL pattern \"*.shtml\". This servlet supports the following -->后面的<servlet>相关注释去掉。\n\n![](http://upload-images.jianshu.io/upload_images/1464420-5d02ab3035c8c2bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n去掉<!-- The mapping for the SSI servlet --> 后面<servlet-mapping>的注释\n\n![3.png](http://upload-images.jianshu.io/upload_images/1464420-daa70acb74151eaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* ####2.修改context.xml\n给Context加一个`privileged=\"true\"`，重启动tomcat ,如果发现网页是乱码则在ssi servlet 中加如下代码\n```swift\n<init-param>\n    <param-name>inputEncoding</param-name>\n    <param-value>utf-8</param-value>\n    </init-param>\n    <init-param>\n    <param-name>outputEncoding</param-name>\n    <param-value>utf-8</param-value>\n</init-param>\n ```\n\n![4.png](http://upload-images.jianshu.io/upload_images/1464420-73d0e2b796c2f2a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n修改完后重新启动服务器即可！\n","slug":"tomcat6-sthml","published":1,"updated":"2018-05-30T01:18:57.319Z","comments":1,"photos":[],"link":"","_id":"cji0ejm4u001sg4l1ov38kvik","content":"<ul>\n<li>####1.修改web.xml文件<br>把<!-- URL pattern \"*.shtml\". This servlet supports the following -->后面的<servlet>相关注释去掉。</servlet></li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-5d02ab3035c8c2bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>去掉<!-- The mapping for the SSI servlet --> 后面<servlet-mapping>的注释</servlet-mapping></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-daa70acb74151eaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"3.png\"></p>\n<ul>\n<li>####2.修改context.xml<br>给Context加一个<code>privileged=&quot;true&quot;</code>，重启动tomcat ,如果发现网页是乱码则在ssi servlet 中加如下代码<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">init</span>-param&gt;</span><br><span class=\"line\">    &lt;param-name&gt;inputEncoding&lt;/param-name&gt;</span><br><span class=\"line\">    &lt;param-value&gt;utf-<span class=\"number\">8</span>&lt;/param-value&gt;</span><br><span class=\"line\">    &lt;/<span class=\"keyword\">init</span>-param&gt;</span><br><span class=\"line\">    &lt;<span class=\"keyword\">init</span>-param&gt;</span><br><span class=\"line\">    &lt;param-name&gt;outputEncoding&lt;/param-name&gt;</span><br><span class=\"line\">    &lt;param-value&gt;utf-<span class=\"number\">8</span>&lt;/param-value&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">init</span>-param&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-73d0e2b796c2f2a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"4.png\"></p>\n<p>修改完后重新启动服务器即可！</p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>####1.修改web.xml文件<br>把<!-- URL pattern \"*.shtml\". This servlet supports the following -->后面的<servlet>相关注释去掉。</servlet></li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-5d02ab3035c8c2bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>去掉<!-- The mapping for the SSI servlet --> 后面<servlet-mapping>的注释</servlet-mapping></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-daa70acb74151eaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"3.png\"></p>\n<ul>\n<li>####2.修改context.xml<br>给Context加一个<code>privileged=&quot;true&quot;</code>，重启动tomcat ,如果发现网页是乱码则在ssi servlet 中加如下代码<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">init</span>-param&gt;</span><br><span class=\"line\">    &lt;param-name&gt;inputEncoding&lt;/param-name&gt;</span><br><span class=\"line\">    &lt;param-value&gt;utf-<span class=\"number\">8</span>&lt;/param-value&gt;</span><br><span class=\"line\">    &lt;/<span class=\"keyword\">init</span>-param&gt;</span><br><span class=\"line\">    &lt;<span class=\"keyword\">init</span>-param&gt;</span><br><span class=\"line\">    &lt;param-name&gt;outputEncoding&lt;/param-name&gt;</span><br><span class=\"line\">    &lt;param-value&gt;utf-<span class=\"number\">8</span>&lt;/param-value&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">init</span>-param&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-73d0e2b796c2f2a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"4.png\"></p>\n<p>修改完后重新启动服务器即可！</p>\n"},{"layout":"pages","title":"网页(UI)设计--切图标注工具","date":"2016-02-05T14:00:00.000Z","_content":"\n- [cutterman](http://www.cutterman.cn/v2/cutterman)(免费)--切图（ps 插件）\n- [parker](http://www.cutterman.cn/v2/parker)(收费)--标注（ps 插件）\n- [PxCook](http://www.fancynode.com.cn/pxcook/home)(免费)--标注\n- [ASSISTOR PS](http://macdownload.informer.com/assistorps/)(免费)--切图，标注（ps 标注）\n-  [BigShear](http://www.fancynode.com.cn/bigshear/home)(收费)--切图\n-  [markman](http://getmarkman.com/)(收费)--标注\n\n标注的工具试过几个。PxCook和markman功能类似，不足：没法准确取色，特别是带透明色；无法准确获取文字（字体，字体大小，字体颜色，行高）。parker功能都有，但是外边距只能量2个图层，无法多个图层一起标注外边距。ASSISTOR PS功能都有，但是内边距需要自己手动拉个选框出来，再选中2个图层，才能量了。\n\n切图类工具呢，虽然没怎么试过，不过大家都推荐cutterman。\n标注类工具呢，跟ps一起用的话，推荐ASSISTOR PS。单独用呢，用markman（mac版收费，windows有破解版，虽然官网说基本版免费，你用了就会发现啥叫基本功能了）和PxCook都行。\n\n[免费了！切图标记外挂神器ASSISTOR PS深入解读（上）](http://www.uisdc.com/assistor-ps-introduction-1)\n[免费了！切图标记外挂神器ASSISTOR PS深入解读（下）](http://www.uisdc.com/assistor-ps-introduction-2)\n","source":"_posts/tool-cut-mark.md","raw":"---\nlayout: pages\ntitle: 网页(UI)设计--切图标注工具\ndate: 2016-02-05 22:00:00\ncategories:\n- tool\ntags:\n- photoshop\n---\n\n- [cutterman](http://www.cutterman.cn/v2/cutterman)(免费)--切图（ps 插件）\n- [parker](http://www.cutterman.cn/v2/parker)(收费)--标注（ps 插件）\n- [PxCook](http://www.fancynode.com.cn/pxcook/home)(免费)--标注\n- [ASSISTOR PS](http://macdownload.informer.com/assistorps/)(免费)--切图，标注（ps 标注）\n-  [BigShear](http://www.fancynode.com.cn/bigshear/home)(收费)--切图\n-  [markman](http://getmarkman.com/)(收费)--标注\n\n标注的工具试过几个。PxCook和markman功能类似，不足：没法准确取色，特别是带透明色；无法准确获取文字（字体，字体大小，字体颜色，行高）。parker功能都有，但是外边距只能量2个图层，无法多个图层一起标注外边距。ASSISTOR PS功能都有，但是内边距需要自己手动拉个选框出来，再选中2个图层，才能量了。\n\n切图类工具呢，虽然没怎么试过，不过大家都推荐cutterman。\n标注类工具呢，跟ps一起用的话，推荐ASSISTOR PS。单独用呢，用markman（mac版收费，windows有破解版，虽然官网说基本版免费，你用了就会发现啥叫基本功能了）和PxCook都行。\n\n[免费了！切图标记外挂神器ASSISTOR PS深入解读（上）](http://www.uisdc.com/assistor-ps-introduction-1)\n[免费了！切图标记外挂神器ASSISTOR PS深入解读（下）](http://www.uisdc.com/assistor-ps-introduction-2)\n","slug":"tool-cut-mark","published":1,"updated":"2018-05-30T02:48:40.048Z","comments":1,"photos":[],"link":"","_id":"cji0ejm4y001vg4l1wyv0fcsf","content":"<ul>\n<li><a href=\"http://www.cutterman.cn/v2/cutterman\" target=\"_blank\" rel=\"noopener\">cutterman</a>(免费)–切图（ps 插件）</li>\n<li><a href=\"http://www.cutterman.cn/v2/parker\" target=\"_blank\" rel=\"noopener\">parker</a>(收费)–标注（ps 插件）</li>\n<li><a href=\"http://www.fancynode.com.cn/pxcook/home\" target=\"_blank\" rel=\"noopener\">PxCook</a>(免费)–标注</li>\n<li><a href=\"http://macdownload.informer.com/assistorps/\" target=\"_blank\" rel=\"noopener\">ASSISTOR PS</a>(免费)–切图，标注（ps 标注）</li>\n<li><a href=\"http://www.fancynode.com.cn/bigshear/home\" target=\"_blank\" rel=\"noopener\">BigShear</a>(收费)–切图</li>\n<li><a href=\"http://getmarkman.com/\" target=\"_blank\" rel=\"noopener\">markman</a>(收费)–标注</li>\n</ul>\n<p>标注的工具试过几个。PxCook和markman功能类似，不足：没法准确取色，特别是带透明色；无法准确获取文字（字体，字体大小，字体颜色，行高）。parker功能都有，但是外边距只能量2个图层，无法多个图层一起标注外边距。ASSISTOR PS功能都有，但是内边距需要自己手动拉个选框出来，再选中2个图层，才能量了。</p>\n<p>切图类工具呢，虽然没怎么试过，不过大家都推荐cutterman。<br>标注类工具呢，跟ps一起用的话，推荐ASSISTOR PS。单独用呢，用markman（mac版收费，windows有破解版，虽然官网说基本版免费，你用了就会发现啥叫基本功能了）和PxCook都行。</p>\n<p><a href=\"http://www.uisdc.com/assistor-ps-introduction-1\" target=\"_blank\" rel=\"noopener\">免费了！切图标记外挂神器ASSISTOR PS深入解读（上）</a><br><a href=\"http://www.uisdc.com/assistor-ps-introduction-2\" target=\"_blank\" rel=\"noopener\">免费了！切图标记外挂神器ASSISTOR PS深入解读（下）</a></p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"http://www.cutterman.cn/v2/cutterman\" target=\"_blank\" rel=\"noopener\">cutterman</a>(免费)–切图（ps 插件）</li>\n<li><a href=\"http://www.cutterman.cn/v2/parker\" target=\"_blank\" rel=\"noopener\">parker</a>(收费)–标注（ps 插件）</li>\n<li><a href=\"http://www.fancynode.com.cn/pxcook/home\" target=\"_blank\" rel=\"noopener\">PxCook</a>(免费)–标注</li>\n<li><a href=\"http://macdownload.informer.com/assistorps/\" target=\"_blank\" rel=\"noopener\">ASSISTOR PS</a>(免费)–切图，标注（ps 标注）</li>\n<li><a href=\"http://www.fancynode.com.cn/bigshear/home\" target=\"_blank\" rel=\"noopener\">BigShear</a>(收费)–切图</li>\n<li><a href=\"http://getmarkman.com/\" target=\"_blank\" rel=\"noopener\">markman</a>(收费)–标注</li>\n</ul>\n<p>标注的工具试过几个。PxCook和markman功能类似，不足：没法准确取色，特别是带透明色；无法准确获取文字（字体，字体大小，字体颜色，行高）。parker功能都有，但是外边距只能量2个图层，无法多个图层一起标注外边距。ASSISTOR PS功能都有，但是内边距需要自己手动拉个选框出来，再选中2个图层，才能量了。</p>\n<p>切图类工具呢，虽然没怎么试过，不过大家都推荐cutterman。<br>标注类工具呢，跟ps一起用的话，推荐ASSISTOR PS。单独用呢，用markman（mac版收费，windows有破解版，虽然官网说基本版免费，你用了就会发现啥叫基本功能了）和PxCook都行。</p>\n<p><a href=\"http://www.uisdc.com/assistor-ps-introduction-1\" target=\"_blank\" rel=\"noopener\">免费了！切图标记外挂神器ASSISTOR PS深入解读（上）</a><br><a href=\"http://www.uisdc.com/assistor-ps-introduction-2\" target=\"_blank\" rel=\"noopener\">免费了！切图标记外挂神器ASSISTOR PS深入解读（下）</a></p>\n"},{"layout":"pages","title":"html5视频转换工具","date":"2016-02-05T14:00:00.000Z","_content":"\n[10个免费的HTML5视频转换工具下载](http://sc.chinaz.com/info/140311417029.htm)，搜过一些工具，跟此文的工具都差不多。然后下载了好几款试用了一下，最后比较满意的是[any-video-converter](http://www.any-video-converter.com/products/mac_video_converter_freeware/)。其他的，我就简单说说使用情况吧。先提一句：html5的视频播放格式编码要求：h264/mp4, theora/ogg, vp8/webm。\n1. Miro Video Converter 能转，但是转完后就不能用。\n2. Miro Video Converter 这个比较悲剧，找半天都没找到转成webm格式的地方。\n3. Freemake Video Converter 能转，也能用，但是具体参数比较少。\n4. Easy HTML5 Video 能转，并且比any-video-converter转的视频大小还小些，看了一下，视频没有失真没有出入。但是他丫的居然在右上角有个水印，导致了没法商用。\n5. any-video-converter 能转的格式不全，还是收费的。\n6. Online-Convert.Com 具体编码参数基本没有，懒得试了。\n7. any-video-converter 各种格式和参数比较齐全，pc端手机端平板端的都有。转完还有demo页面。\n","source":"_posts/tool-html5-video.md","raw":"---\nlayout: pages\ntitle: html5视频转换工具\ndate: 2016-02-05 22:00:00\ncategories:\n- tool\ntags:\n- html5\n---\n\n[10个免费的HTML5视频转换工具下载](http://sc.chinaz.com/info/140311417029.htm)，搜过一些工具，跟此文的工具都差不多。然后下载了好几款试用了一下，最后比较满意的是[any-video-converter](http://www.any-video-converter.com/products/mac_video_converter_freeware/)。其他的，我就简单说说使用情况吧。先提一句：html5的视频播放格式编码要求：h264/mp4, theora/ogg, vp8/webm。\n1. Miro Video Converter 能转，但是转完后就不能用。\n2. Miro Video Converter 这个比较悲剧，找半天都没找到转成webm格式的地方。\n3. Freemake Video Converter 能转，也能用，但是具体参数比较少。\n4. Easy HTML5 Video 能转，并且比any-video-converter转的视频大小还小些，看了一下，视频没有失真没有出入。但是他丫的居然在右上角有个水印，导致了没法商用。\n5. any-video-converter 能转的格式不全，还是收费的。\n6. Online-Convert.Com 具体编码参数基本没有，懒得试了。\n7. any-video-converter 各种格式和参数比较齐全，pc端手机端平板端的都有。转完还有demo页面。\n","slug":"tool-html5-video","published":1,"updated":"2018-05-30T02:08:35.932Z","comments":1,"photos":[],"link":"","_id":"cji0ejm53001yg4l15rbnqp9x","content":"<p><a href=\"http://sc.chinaz.com/info/140311417029.htm\" target=\"_blank\" rel=\"noopener\">10个免费的HTML5视频转换工具下载</a>，搜过一些工具，跟此文的工具都差不多。然后下载了好几款试用了一下，最后比较满意的是<a href=\"http://www.any-video-converter.com/products/mac_video_converter_freeware/\" target=\"_blank\" rel=\"noopener\">any-video-converter</a>。其他的，我就简单说说使用情况吧。先提一句：html5的视频播放格式编码要求：h264/mp4, theora/ogg, vp8/webm。</p>\n<ol>\n<li>Miro Video Converter 能转，但是转完后就不能用。</li>\n<li>Miro Video Converter 这个比较悲剧，找半天都没找到转成webm格式的地方。</li>\n<li>Freemake Video Converter 能转，也能用，但是具体参数比较少。</li>\n<li>Easy HTML5 Video 能转，并且比any-video-converter转的视频大小还小些，看了一下，视频没有失真没有出入。但是他丫的居然在右上角有个水印，导致了没法商用。</li>\n<li>any-video-converter 能转的格式不全，还是收费的。</li>\n<li>Online-Convert.Com 具体编码参数基本没有，懒得试了。</li>\n<li>any-video-converter 各种格式和参数比较齐全，pc端手机端平板端的都有。转完还有demo页面。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://sc.chinaz.com/info/140311417029.htm\" target=\"_blank\" rel=\"noopener\">10个免费的HTML5视频转换工具下载</a>，搜过一些工具，跟此文的工具都差不多。然后下载了好几款试用了一下，最后比较满意的是<a href=\"http://www.any-video-converter.com/products/mac_video_converter_freeware/\" target=\"_blank\" rel=\"noopener\">any-video-converter</a>。其他的，我就简单说说使用情况吧。先提一句：html5的视频播放格式编码要求：h264/mp4, theora/ogg, vp8/webm。</p>\n<ol>\n<li>Miro Video Converter 能转，但是转完后就不能用。</li>\n<li>Miro Video Converter 这个比较悲剧，找半天都没找到转成webm格式的地方。</li>\n<li>Freemake Video Converter 能转，也能用，但是具体参数比较少。</li>\n<li>Easy HTML5 Video 能转，并且比any-video-converter转的视频大小还小些，看了一下，视频没有失真没有出入。但是他丫的居然在右上角有个水印，导致了没法商用。</li>\n<li>any-video-converter 能转的格式不全，还是收费的。</li>\n<li>Online-Convert.Com 具体编码参数基本没有，懒得试了。</li>\n<li>any-video-converter 各种格式和参数比较齐全，pc端手机端平板端的都有。转完还有demo页面。</li>\n</ol>\n"},{"layout":"pages","title":"Vue2 ：axios 使用之（一）","date":"2018-05-20T09:22:00.000Z","_content":"\n据说vuejs2.0已经不在维护vue-resource了，vuejs2.0 已经使用了axios了，并且官方也推荐使用axios 。\n<!-- more -->\n\n\n##  简介\n[Axios 官网](https://github.com/axios/axios)。\naxios 是一个基于Promise 用于浏览器和 nodejs 的 HTTP 客户端，它本身具有以下特征：\n* 浏览器端发起XMLHttpRequests请求\n* Node端发起http请求\n* 支持Promise API\n* 拦截请求和响应\n* 转化请求和响应（数据）\n* 取消请求\n* 自动转化json数据\n* 客户端支持抵御XSRF（跨站请求伪造）\n\n浏览器兼容性：\n![axios-browser-support.png](https://upload-images.jianshu.io/upload_images/1464420-9af3b5778f6a052e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 安装\nVue项目中使用如下命令安装：\n`npm install axios --save`\n也可以使用cdn：\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n\n## 使用\n[参考的git代码库](https://github.com/DragonFlyXD/poetryclub-frontend/blob/master/src/api/index.js)\napi/index.js 文件：\n```swift\nimport axios from 'axios'\nimport QS from 'qs'\n\nlet api = axios.create({\n  baseURL: 'http://www.dragonflyxd.com/api/', //接口前缀（域名）\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Accept': 'application/json'\n  },\n  params: {},\n  timeout: 10000,\n  withCredentials: false,\n  responseType: 'json',\n  maxContentLength: 2000,\n  validateStatus: function (status) {\n    return status >= 200 && status < 500\n  },\n  maxRedirects: 5,\n  transformRequest: [data => QS.stringify(data)],\n  paramsSerializer: params => QS.stringify(params),\n  data: {}\n})\n\n// http request 拦截器\napi.interceptors.request.use(config => {\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\n// http response 拦截器\napi.interceptors.response.use(response => {\n  return response\n}, error => {\n  return Promise.reject(error)\n})\n\nexport default api\n```\n\n页面上调用：\n```swift\nimport api from '@/api/index'\n\napi.post('/mk_login', data)\n          .then(res => {\n                console.log(res.data); //后台返回的数据\n                //if(res.data.status){\n                  // 登录成功\n                  //this.setUserInfo2(data);\n                 // this.$router.replace('/home');\n                //}\n              })\n              .catch(error => {\n                console.log(\"login异常：\")\n                console.log(error)\n              })\n```\n## 其他\n由于IE9不支持Promise，因此需要在项目入口main.js中打个补丁,否则无法发出请求：\n`import 'babel-polyfill'`\n如上，已经能在IE9+上发起网络请求，但是IE9上有个问题：response.data为undefined,因此需要对返回的数据针对不同浏览器进行处理，在API.js中加入如下拦截器：\n```swift\n// 响应拦截\naxios.interceptors.response.use(function (response) {\n  var data\n  // IE9时response.data是undefined，因此需要使用response.request.responseText(Stringify后的字符串)\n  if(response.data == undefined){\n    data = response.request.responseText\n  } else{\n    data = response.data\n  }\n  // 判断data不是Object时，解析成Object\n  if(!(data instanceof Object)){\n    data = JSON.parse(data)\n  }\n  return data\n}, function (error) {\n  return Promise.reject(error)\n});\n```\naxios跨域请求问题： `No 'Access-Control-Allow-Origin' header is present on the requested resource.`\n网上搜了不少资料，很多都说需要前端配置，比如下面2种方式：\n1. 代理：config/index.js: proxyTable相关设置\n1.  浏览器chrome装个插件：Allow-Control-Allow-Origin 做本地开发\n\n实际上，我这里配置了上面的也没用，只需要后台那边配置就行（后台开发人员知道的，你跟他沟通一下就行），比如下面两种方式：\n1. Servlet，MVC都可以，Web.xml\n https://www.cnblogs.com/best/p/8202370.html\n 1. Spring MVC，修改Spring 配置文件，低Spring版本不支持\n https://www.cnblogs.com/best/p/8202370.html\n\n\n#### 参考\n* [浅谈 Axios 在 Vue 项目中的使用](http://www.cnblogs.com/coolslider/p/7838309.html)\n* [vue axios全攻略](http://www.cnblogs.com/libin-1/p/6607945.html)\n* [axios post提交的Content-Type](http://www.cnblogs.com/changzhenan/p/8430760.html)\n* [axios —— 极简封装的艺术](https://zhuanlan.zhihu.com/p/28396592)\n","source":"_posts/vue-axios.md","raw":"---\nlayout: pages\ntitle: Vue2 ：axios 使用之（一）\ndate: 2018-05-20 17:22:00\ncategories:\n- Vue2\ntags:\n- Vue2\n- axios\n---\n\n据说vuejs2.0已经不在维护vue-resource了，vuejs2.0 已经使用了axios了，并且官方也推荐使用axios 。\n<!-- more -->\n\n\n##  简介\n[Axios 官网](https://github.com/axios/axios)。\naxios 是一个基于Promise 用于浏览器和 nodejs 的 HTTP 客户端，它本身具有以下特征：\n* 浏览器端发起XMLHttpRequests请求\n* Node端发起http请求\n* 支持Promise API\n* 拦截请求和响应\n* 转化请求和响应（数据）\n* 取消请求\n* 自动转化json数据\n* 客户端支持抵御XSRF（跨站请求伪造）\n\n浏览器兼容性：\n![axios-browser-support.png](https://upload-images.jianshu.io/upload_images/1464420-9af3b5778f6a052e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 安装\nVue项目中使用如下命令安装：\n`npm install axios --save`\n也可以使用cdn：\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n\n## 使用\n[参考的git代码库](https://github.com/DragonFlyXD/poetryclub-frontend/blob/master/src/api/index.js)\napi/index.js 文件：\n```swift\nimport axios from 'axios'\nimport QS from 'qs'\n\nlet api = axios.create({\n  baseURL: 'http://www.dragonflyxd.com/api/', //接口前缀（域名）\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Accept': 'application/json'\n  },\n  params: {},\n  timeout: 10000,\n  withCredentials: false,\n  responseType: 'json',\n  maxContentLength: 2000,\n  validateStatus: function (status) {\n    return status >= 200 && status < 500\n  },\n  maxRedirects: 5,\n  transformRequest: [data => QS.stringify(data)],\n  paramsSerializer: params => QS.stringify(params),\n  data: {}\n})\n\n// http request 拦截器\napi.interceptors.request.use(config => {\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\n// http response 拦截器\napi.interceptors.response.use(response => {\n  return response\n}, error => {\n  return Promise.reject(error)\n})\n\nexport default api\n```\n\n页面上调用：\n```swift\nimport api from '@/api/index'\n\napi.post('/mk_login', data)\n          .then(res => {\n                console.log(res.data); //后台返回的数据\n                //if(res.data.status){\n                  // 登录成功\n                  //this.setUserInfo2(data);\n                 // this.$router.replace('/home');\n                //}\n              })\n              .catch(error => {\n                console.log(\"login异常：\")\n                console.log(error)\n              })\n```\n## 其他\n由于IE9不支持Promise，因此需要在项目入口main.js中打个补丁,否则无法发出请求：\n`import 'babel-polyfill'`\n如上，已经能在IE9+上发起网络请求，但是IE9上有个问题：response.data为undefined,因此需要对返回的数据针对不同浏览器进行处理，在API.js中加入如下拦截器：\n```swift\n// 响应拦截\naxios.interceptors.response.use(function (response) {\n  var data\n  // IE9时response.data是undefined，因此需要使用response.request.responseText(Stringify后的字符串)\n  if(response.data == undefined){\n    data = response.request.responseText\n  } else{\n    data = response.data\n  }\n  // 判断data不是Object时，解析成Object\n  if(!(data instanceof Object)){\n    data = JSON.parse(data)\n  }\n  return data\n}, function (error) {\n  return Promise.reject(error)\n});\n```\naxios跨域请求问题： `No 'Access-Control-Allow-Origin' header is present on the requested resource.`\n网上搜了不少资料，很多都说需要前端配置，比如下面2种方式：\n1. 代理：config/index.js: proxyTable相关设置\n1.  浏览器chrome装个插件：Allow-Control-Allow-Origin 做本地开发\n\n实际上，我这里配置了上面的也没用，只需要后台那边配置就行（后台开发人员知道的，你跟他沟通一下就行），比如下面两种方式：\n1. Servlet，MVC都可以，Web.xml\n https://www.cnblogs.com/best/p/8202370.html\n 1. Spring MVC，修改Spring 配置文件，低Spring版本不支持\n https://www.cnblogs.com/best/p/8202370.html\n\n\n#### 参考\n* [浅谈 Axios 在 Vue 项目中的使用](http://www.cnblogs.com/coolslider/p/7838309.html)\n* [vue axios全攻略](http://www.cnblogs.com/libin-1/p/6607945.html)\n* [axios post提交的Content-Type](http://www.cnblogs.com/changzhenan/p/8430760.html)\n* [axios —— 极简封装的艺术](https://zhuanlan.zhihu.com/p/28396592)\n","slug":"vue-axios","published":1,"updated":"2018-05-29T09:15:59.302Z","comments":1,"photos":[],"link":"","_id":"cji0ejm590021g4l1mexeuolb","content":"<p>据说vuejs2.0已经不在维护vue-resource了，vuejs2.0 已经使用了axios了，并且官方也推荐使用axios 。<br><a id=\"more\"></a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"noopener\">Axios 官网</a>。<br>axios 是一个基于Promise 用于浏览器和 nodejs 的 HTTP 客户端，它本身具有以下特征：</p>\n<ul>\n<li>浏览器端发起XMLHttpRequests请求</li>\n<li>Node端发起http请求</li>\n<li>支持Promise API</li>\n<li>拦截请求和响应</li>\n<li>转化请求和响应（数据）</li>\n<li>取消请求</li>\n<li>自动转化json数据</li>\n<li>客户端支持抵御XSRF（跨站请求伪造）</li>\n</ul>\n<p>浏览器兼容性：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-9af3b5778f6a052e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"axios-browser-support.png\"></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>Vue项目中使用如下命令安装：<br><code>npm install axios --save</code><br>也可以使用cdn：</p>\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p><a href=\"https://github.com/DragonFlyXD/poetryclub-frontend/blob/master/src/api/index.js\" target=\"_blank\" rel=\"noopener\">参考的git代码库</a><br>api/index.js 文件：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios from 'axios'</span><br><span class=\"line\"><span class=\"keyword\">import</span> QS from 'qs'</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> api = axios.create(&#123;</span><br><span class=\"line\">  baseURL: 'http:<span class=\"comment\">//www.dragonflyxd.com/api/', //接口前缀（域名）</span></span><br><span class=\"line\">  method: '<span class=\"type\">GET'</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    '<span class=\"type\">Content</span>-<span class=\"type\">Type'</span>: 'application/x-www-form-urlencoded',</span><br><span class=\"line\">    '<span class=\"type\">Accept'</span>: 'application/json'</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  params: &#123;&#125;,</span><br><span class=\"line\">  timeout: <span class=\"number\">10000</span>,</span><br><span class=\"line\">  withCredentials: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  responseType: 'json',</span><br><span class=\"line\">  maxContentLength: <span class=\"number\">2000</span>,</span><br><span class=\"line\">  validateStatus: function (status) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> status &gt;= <span class=\"number\">200</span> &amp;&amp; status &lt; <span class=\"number\">500</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  maxRedirects: <span class=\"number\">5</span>,</span><br><span class=\"line\">  transformRequest: [data =&gt; <span class=\"type\">QS</span>.stringify(data)],</span><br><span class=\"line\">  paramsSerializer: params =&gt; <span class=\"type\">QS</span>.stringify(params),</span><br><span class=\"line\">  data: &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// http request 拦截器</span></span><br><span class=\"line\">api.interceptors.request.use(config =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// http response 拦截器</span></span><br><span class=\"line\">api.interceptors.response.use(response =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> response</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">export <span class=\"keyword\">default</span> api</span><br></pre></td></tr></table></figure></p>\n<p>页面上调用：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> api from '@/api/index'</span><br><span class=\"line\"></span><br><span class=\"line\">api.post('/mk_login', data)</span><br><span class=\"line\">          .then(res =&gt; &#123;</span><br><span class=\"line\">                console.log(res.data); <span class=\"comment\">//后台返回的数据</span></span><br><span class=\"line\">                <span class=\"comment\">//if(res.data.status)&#123;</span></span><br><span class=\"line\">                  <span class=\"comment\">// 登录成功</span></span><br><span class=\"line\">                  <span class=\"comment\">//this.setUserInfo2(data);</span></span><br><span class=\"line\">                 <span class=\"comment\">// this.$router.replace('/home');</span></span><br><span class=\"line\">                <span class=\"comment\">//&#125;</span></span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">              .<span class=\"keyword\">catch</span>(error =&gt; &#123;</span><br><span class=\"line\">                console.log(<span class=\"string\">\"login异常：\"</span>)</span><br><span class=\"line\">                console.log(error)</span><br><span class=\"line\">              &#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>由于IE9不支持Promise，因此需要在项目入口main.js中打个补丁,否则无法发出请求：<br><code>import &#39;babel-polyfill&#39;</code><br>如上，已经能在IE9+上发起网络请求，但是IE9上有个问题：response.data为undefined,因此需要对返回的数据针对不同浏览器进行处理，在API.js中加入如下拦截器：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 响应拦截</span></span><br><span class=\"line\">axios.interceptors.response.use(function (response) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> data</span><br><span class=\"line\">  <span class=\"comment\">// IE9时response.data是undefined，因此需要使用response.request.responseText(Stringify后的字符串)</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(response.data == undefined)&#123;</span><br><span class=\"line\">    data = response.request.responseText</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    data = response.data</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 判断data不是Object时，解析成Object</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!(data instanceof <span class=\"type\">Object</span>))&#123;</span><br><span class=\"line\">    data = <span class=\"type\">JSON</span>.parse(data)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data</span><br><span class=\"line\">&#125;, function (error) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>axios跨域请求问题： <code>No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource.</code><br>网上搜了不少资料，很多都说需要前端配置，比如下面2种方式：</p>\n<ol>\n<li>代理：config/index.js: proxyTable相关设置</li>\n<li>浏览器chrome装个插件：Allow-Control-Allow-Origin 做本地开发</li>\n</ol>\n<p>实际上，我这里配置了上面的也没用，只需要后台那边配置就行（后台开发人员知道的，你跟他沟通一下就行），比如下面两种方式：</p>\n<ol>\n<li>Servlet，MVC都可以，Web.xml<br><a href=\"https://www.cnblogs.com/best/p/8202370.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/best/p/8202370.html</a><ol>\n<li>Spring MVC，修改Spring 配置文件，低Spring版本不支持<br><a href=\"https://www.cnblogs.com/best/p/8202370.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/best/p/8202370.html</a></li>\n</ol>\n</li>\n</ol>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"http://www.cnblogs.com/coolslider/p/7838309.html\" target=\"_blank\" rel=\"noopener\">浅谈 Axios 在 Vue 项目中的使用</a></li>\n<li><a href=\"http://www.cnblogs.com/libin-1/p/6607945.html\" target=\"_blank\" rel=\"noopener\">vue axios全攻略</a></li>\n<li><a href=\"http://www.cnblogs.com/changzhenan/p/8430760.html\" target=\"_blank\" rel=\"noopener\">axios post提交的Content-Type</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/28396592\" target=\"_blank\" rel=\"noopener\">axios —— 极简封装的艺术</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>据说vuejs2.0已经不在维护vue-resource了，vuejs2.0 已经使用了axios了，并且官方也推荐使用axios 。<br>","more":"</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"noopener\">Axios 官网</a>。<br>axios 是一个基于Promise 用于浏览器和 nodejs 的 HTTP 客户端，它本身具有以下特征：</p>\n<ul>\n<li>浏览器端发起XMLHttpRequests请求</li>\n<li>Node端发起http请求</li>\n<li>支持Promise API</li>\n<li>拦截请求和响应</li>\n<li>转化请求和响应（数据）</li>\n<li>取消请求</li>\n<li>自动转化json数据</li>\n<li>客户端支持抵御XSRF（跨站请求伪造）</li>\n</ul>\n<p>浏览器兼容性：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-9af3b5778f6a052e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"axios-browser-support.png\"></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>Vue项目中使用如下命令安装：<br><code>npm install axios --save</code><br>也可以使用cdn：</p>\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p><a href=\"https://github.com/DragonFlyXD/poetryclub-frontend/blob/master/src/api/index.js\" target=\"_blank\" rel=\"noopener\">参考的git代码库</a><br>api/index.js 文件：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios from 'axios'</span><br><span class=\"line\"><span class=\"keyword\">import</span> QS from 'qs'</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> api = axios.create(&#123;</span><br><span class=\"line\">  baseURL: 'http:<span class=\"comment\">//www.dragonflyxd.com/api/', //接口前缀（域名）</span></span><br><span class=\"line\">  method: '<span class=\"type\">GET'</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    '<span class=\"type\">Content</span>-<span class=\"type\">Type'</span>: 'application/x-www-form-urlencoded',</span><br><span class=\"line\">    '<span class=\"type\">Accept'</span>: 'application/json'</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  params: &#123;&#125;,</span><br><span class=\"line\">  timeout: <span class=\"number\">10000</span>,</span><br><span class=\"line\">  withCredentials: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  responseType: 'json',</span><br><span class=\"line\">  maxContentLength: <span class=\"number\">2000</span>,</span><br><span class=\"line\">  validateStatus: function (status) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> status &gt;= <span class=\"number\">200</span> &amp;&amp; status &lt; <span class=\"number\">500</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  maxRedirects: <span class=\"number\">5</span>,</span><br><span class=\"line\">  transformRequest: [data =&gt; <span class=\"type\">QS</span>.stringify(data)],</span><br><span class=\"line\">  paramsSerializer: params =&gt; <span class=\"type\">QS</span>.stringify(params),</span><br><span class=\"line\">  data: &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// http request 拦截器</span></span><br><span class=\"line\">api.interceptors.request.use(config =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// http response 拦截器</span></span><br><span class=\"line\">api.interceptors.response.use(response =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> response</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">export <span class=\"keyword\">default</span> api</span><br></pre></td></tr></table></figure></p>\n<p>页面上调用：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> api from '@/api/index'</span><br><span class=\"line\"></span><br><span class=\"line\">api.post('/mk_login', data)</span><br><span class=\"line\">          .then(res =&gt; &#123;</span><br><span class=\"line\">                console.log(res.data); <span class=\"comment\">//后台返回的数据</span></span><br><span class=\"line\">                <span class=\"comment\">//if(res.data.status)&#123;</span></span><br><span class=\"line\">                  <span class=\"comment\">// 登录成功</span></span><br><span class=\"line\">                  <span class=\"comment\">//this.setUserInfo2(data);</span></span><br><span class=\"line\">                 <span class=\"comment\">// this.$router.replace('/home');</span></span><br><span class=\"line\">                <span class=\"comment\">//&#125;</span></span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">              .<span class=\"keyword\">catch</span>(error =&gt; &#123;</span><br><span class=\"line\">                console.log(<span class=\"string\">\"login异常：\"</span>)</span><br><span class=\"line\">                console.log(error)</span><br><span class=\"line\">              &#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>由于IE9不支持Promise，因此需要在项目入口main.js中打个补丁,否则无法发出请求：<br><code>import &#39;babel-polyfill&#39;</code><br>如上，已经能在IE9+上发起网络请求，但是IE9上有个问题：response.data为undefined,因此需要对返回的数据针对不同浏览器进行处理，在API.js中加入如下拦截器：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 响应拦截</span></span><br><span class=\"line\">axios.interceptors.response.use(function (response) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> data</span><br><span class=\"line\">  <span class=\"comment\">// IE9时response.data是undefined，因此需要使用response.request.responseText(Stringify后的字符串)</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(response.data == undefined)&#123;</span><br><span class=\"line\">    data = response.request.responseText</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    data = response.data</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 判断data不是Object时，解析成Object</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!(data instanceof <span class=\"type\">Object</span>))&#123;</span><br><span class=\"line\">    data = <span class=\"type\">JSON</span>.parse(data)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data</span><br><span class=\"line\">&#125;, function (error) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>axios跨域请求问题： <code>No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource.</code><br>网上搜了不少资料，很多都说需要前端配置，比如下面2种方式：</p>\n<ol>\n<li>代理：config/index.js: proxyTable相关设置</li>\n<li>浏览器chrome装个插件：Allow-Control-Allow-Origin 做本地开发</li>\n</ol>\n<p>实际上，我这里配置了上面的也没用，只需要后台那边配置就行（后台开发人员知道的，你跟他沟通一下就行），比如下面两种方式：</p>\n<ol>\n<li>Servlet，MVC都可以，Web.xml<br><a href=\"https://www.cnblogs.com/best/p/8202370.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/best/p/8202370.html</a><ol>\n<li>Spring MVC，修改Spring 配置文件，低Spring版本不支持<br><a href=\"https://www.cnblogs.com/best/p/8202370.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/best/p/8202370.html</a></li>\n</ol>\n</li>\n</ol>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"http://www.cnblogs.com/coolslider/p/7838309.html\" target=\"_blank\" rel=\"noopener\">浅谈 Axios 在 Vue 项目中的使用</a></li>\n<li><a href=\"http://www.cnblogs.com/libin-1/p/6607945.html\" target=\"_blank\" rel=\"noopener\">vue axios全攻略</a></li>\n<li><a href=\"http://www.cnblogs.com/changzhenan/p/8430760.html\" target=\"_blank\" rel=\"noopener\">axios post提交的Content-Type</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/28396592\" target=\"_blank\" rel=\"noopener\">axios —— 极简封装的艺术</a></li>\n</ul>"},{"layout":"pages","title":"Vue2 ：百度地图bmap","date":"2018-05-19T04:22:00.000Z","_content":"\n百度地图JavaScript API是一套由JavaScript语言编写的应用程序接口，可帮助您在网站中构建功能丰富、交互性强的地图应用，支持PC端和移动端基于浏览器的地图应用开发，且支持HTML5特性的地图开发。\n\n该套API免费对外开放。自v1.5版本起，您需先申请密钥（ak）才可使用，接口无使用次数限制。\n\n地址传送门：[http://lbsyun.baidu.com/index.php?title=jspopular](http://lbsyun.baidu.com/index.php?title=jspopular)\n<!-- more -->\n\n## 申请密钥\n[点击此处](http://lbsyun.baidu.com/index.php?title=jspopular)申请密钥，然后在首页index.html的head引入下面的js代码：\n`<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=密钥\"></script>`\n**注意：**\n建议先写个简单的html确认密钥正确可用后，再讲其引入vue的项目中。因为有些教程这里引入的js的src末尾带有 `&callback=init` ，这个参数导致了报错（见下图），而始终无法正常使用百度地图api。\n![vue-map-01.png](https://upload-images.jianshu.io/upload_images/1464420-bddb2b10d74130f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## webpack 配置文件\n如果只是第一步，你调用百度地图api时，报错： `Bmap is not defined` ，那么就配置 webpack 配置文件（webpack.base.conf.js）的module.exports中加个externals：\n```swift\nmodule.exports = {\n  context: path.resolve(__dirname, '../'),\n  entry: { app: './src/main.js' },\n  //百度地图配置20180518\n  externals: {\n    \"BMap\": \"BMap\"\n  },\n...\n}\n```\n## 调用\n```swift\n<template>\n    <!--地图容器-->\n    <div id=\"fli\" class=\"fli\"></div>\n</template>\n<script>\n  export default {\n    name:'',\n    data () {\n      return {\n      }\n    },\n    mounted(){\n      var map = new BMap.Map('fli',{enableMapClick:true});    // 创建Map实例\n      map.centerAndZoom(new BMap.Point(104.06, 30.67), 11);  // 初始化地图,设置中心点坐标和地图级别\n\n      //添加地图类型控件\n      map.addControl(new BMap.MapTypeControl({\n        mapTypes:[\n          BMAP_NORMAL_MAP,\n          BMAP_HYBRID_MAP\n        ]}));\n      map.setCurrentCity(\"成都\");          // 设置地图显示的城市 此项是必须设置的\n      map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放\n  },\n}\n</script>\n<style scoped>\n  .fli{\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    margin: 0;\n  }\n</style>\n```\n## 另一种方式：异步加载\n跟[百度api官网](http://lbsyun.baidu.com/index.php?title=jspopular/guide/introduction)里的异步加载很像。首先跟入口 js（main.js）一样，新建一个 map.js 。（ak 就是你的密钥）\n```swift\nexport function MP(ak) {  \n  return new Promise(function (resolve, reject) {  \n    window.onload = function () {  \n      resolve(BMap)  \n    }  \n    var script = document.createElement(\"script\");  \n    script.type = \"text/javascript\";  \n    script.src = \"http://api.map.baidu.com/api?v=2.0&ak=\"+ak+\"&callback=init\";  \n    script.onerror = reject;  \n    document.head.appendChild(script);  \n  })  \n}  \n```\n在页面中调用：\n```swift \nimport {MP} from '@/map.js'  \nexport default {\n    data () {\n      return {\n        ak:'', // 这里就是百度地图密钥\n      }\n    },\n    mounted(){\n      this.$nextTick(function() {\n        var _this = this;\n        MP(_this.ak).then(BMap => {\n          // 百度地图API功能\n          ...\n        })\n      })\n    },\n}\n```\n**注意：**\n说到 src 末尾的 callback 参数，是否需要，值又是什么（ init, initialize ），自己去试验，随便写个简单的html，调试通了再引入vue。\n\n*小提示：*\n* 使用BMap的时候不需要import了，import反而会报错：BMap is not defined \n* 注意一定要给bmap的div设置高度，否则会看不见\n\n#### 参考\n* [前端框架Vue（9）——百度地图使用](https://blog.csdn.net/docallen/article/details/70877925)\n* [vue调用百度地图api时Bmap没有定义的解决办法](https://blog.csdn.net/sinat_35515778/article/details/72677390)\n","source":"_posts/vue-bmap.md","raw":"---\nlayout: pages\ntitle: Vue2 ：百度地图bmap\ndate: 2018-05-19 12:22:00\ncategories:\n- Vue2\ntags:\n- Vue2\n- 百度地图\n---\n\n百度地图JavaScript API是一套由JavaScript语言编写的应用程序接口，可帮助您在网站中构建功能丰富、交互性强的地图应用，支持PC端和移动端基于浏览器的地图应用开发，且支持HTML5特性的地图开发。\n\n该套API免费对外开放。自v1.5版本起，您需先申请密钥（ak）才可使用，接口无使用次数限制。\n\n地址传送门：[http://lbsyun.baidu.com/index.php?title=jspopular](http://lbsyun.baidu.com/index.php?title=jspopular)\n<!-- more -->\n\n## 申请密钥\n[点击此处](http://lbsyun.baidu.com/index.php?title=jspopular)申请密钥，然后在首页index.html的head引入下面的js代码：\n`<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=密钥\"></script>`\n**注意：**\n建议先写个简单的html确认密钥正确可用后，再讲其引入vue的项目中。因为有些教程这里引入的js的src末尾带有 `&callback=init` ，这个参数导致了报错（见下图），而始终无法正常使用百度地图api。\n![vue-map-01.png](https://upload-images.jianshu.io/upload_images/1464420-bddb2b10d74130f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## webpack 配置文件\n如果只是第一步，你调用百度地图api时，报错： `Bmap is not defined` ，那么就配置 webpack 配置文件（webpack.base.conf.js）的module.exports中加个externals：\n```swift\nmodule.exports = {\n  context: path.resolve(__dirname, '../'),\n  entry: { app: './src/main.js' },\n  //百度地图配置20180518\n  externals: {\n    \"BMap\": \"BMap\"\n  },\n...\n}\n```\n## 调用\n```swift\n<template>\n    <!--地图容器-->\n    <div id=\"fli\" class=\"fli\"></div>\n</template>\n<script>\n  export default {\n    name:'',\n    data () {\n      return {\n      }\n    },\n    mounted(){\n      var map = new BMap.Map('fli',{enableMapClick:true});    // 创建Map实例\n      map.centerAndZoom(new BMap.Point(104.06, 30.67), 11);  // 初始化地图,设置中心点坐标和地图级别\n\n      //添加地图类型控件\n      map.addControl(new BMap.MapTypeControl({\n        mapTypes:[\n          BMAP_NORMAL_MAP,\n          BMAP_HYBRID_MAP\n        ]}));\n      map.setCurrentCity(\"成都\");          // 设置地图显示的城市 此项是必须设置的\n      map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放\n  },\n}\n</script>\n<style scoped>\n  .fli{\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    margin: 0;\n  }\n</style>\n```\n## 另一种方式：异步加载\n跟[百度api官网](http://lbsyun.baidu.com/index.php?title=jspopular/guide/introduction)里的异步加载很像。首先跟入口 js（main.js）一样，新建一个 map.js 。（ak 就是你的密钥）\n```swift\nexport function MP(ak) {  \n  return new Promise(function (resolve, reject) {  \n    window.onload = function () {  \n      resolve(BMap)  \n    }  \n    var script = document.createElement(\"script\");  \n    script.type = \"text/javascript\";  \n    script.src = \"http://api.map.baidu.com/api?v=2.0&ak=\"+ak+\"&callback=init\";  \n    script.onerror = reject;  \n    document.head.appendChild(script);  \n  })  \n}  \n```\n在页面中调用：\n```swift \nimport {MP} from '@/map.js'  \nexport default {\n    data () {\n      return {\n        ak:'', // 这里就是百度地图密钥\n      }\n    },\n    mounted(){\n      this.$nextTick(function() {\n        var _this = this;\n        MP(_this.ak).then(BMap => {\n          // 百度地图API功能\n          ...\n        })\n      })\n    },\n}\n```\n**注意：**\n说到 src 末尾的 callback 参数，是否需要，值又是什么（ init, initialize ），自己去试验，随便写个简单的html，调试通了再引入vue。\n\n*小提示：*\n* 使用BMap的时候不需要import了，import反而会报错：BMap is not defined \n* 注意一定要给bmap的div设置高度，否则会看不见\n\n#### 参考\n* [前端框架Vue（9）——百度地图使用](https://blog.csdn.net/docallen/article/details/70877925)\n* [vue调用百度地图api时Bmap没有定义的解决办法](https://blog.csdn.net/sinat_35515778/article/details/72677390)\n","slug":"vue-bmap","published":1,"updated":"2018-05-29T09:20:28.656Z","comments":1,"photos":[],"link":"","_id":"cji0ejm5f0026g4l1ilk5ny3h","content":"<p>百度地图JavaScript API是一套由JavaScript语言编写的应用程序接口，可帮助您在网站中构建功能丰富、交互性强的地图应用，支持PC端和移动端基于浏览器的地图应用开发，且支持HTML5特性的地图开发。</p>\n<p>该套API免费对外开放。自v1.5版本起，您需先申请密钥（ak）才可使用，接口无使用次数限制。</p>\n<p>地址传送门：<a href=\"http://lbsyun.baidu.com/index.php?title=jspopular\" target=\"_blank\" rel=\"noopener\">http://lbsyun.baidu.com/index.php?title=jspopular</a><br><a id=\"more\"></a></p>\n<h2 id=\"申请密钥\"><a href=\"#申请密钥\" class=\"headerlink\" title=\"申请密钥\"></a>申请密钥</h2><p><a href=\"http://lbsyun.baidu.com/index.php?title=jspopular\" target=\"_blank\" rel=\"noopener\">点击此处</a>申请密钥，然后在首页index.html的head引入下面的js代码：<br><code>&lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/api?v=2.0&amp;ak=密钥&quot;&gt;&lt;/script&gt;</code><br><strong>注意：</strong><br>建议先写个简单的html确认密钥正确可用后，再讲其引入vue的项目中。因为有些教程这里引入的js的src末尾带有 <code>&amp;callback=init</code> ，这个参数导致了报错（见下图），而始终无法正常使用百度地图api。<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-bddb2b10d74130f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"vue-map-01.png\"></p>\n<h2 id=\"webpack-配置文件\"><a href=\"#webpack-配置文件\" class=\"headerlink\" title=\"webpack 配置文件\"></a>webpack 配置文件</h2><p>如果只是第一步，你调用百度地图api时，报错： <code>Bmap is not defined</code> ，那么就配置 webpack 配置文件（webpack.base.conf.js）的module.exports中加个externals：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  context: path.resolve(__dirname, '../'),</span><br><span class=\"line\">  entry: &#123; app: './src/main.js' &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//百度地图配置20180518</span></span><br><span class=\"line\">  externals: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"BMap\"</span>: <span class=\"string\">\"BMap\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!--地图容器--&gt;</span><br><span class=\"line\">    &lt;div id=<span class=\"string\">\"fli\"</span> <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">fli</span>\"&gt;&lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">export</span> <span class=\"title\">default</span> </span>&#123;</span><br><span class=\"line\">    name:'',</span><br><span class=\"line\">    data () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> <span class=\"built_in\">map</span> = new <span class=\"type\">BMap</span>.<span class=\"type\">Map</span>('fli',&#123;enableMapClick:<span class=\"literal\">true</span>&#125;);    <span class=\"comment\">// 创建Map实例</span></span><br><span class=\"line\">      <span class=\"built_in\">map</span>.centerAndZoom(new <span class=\"type\">BMap</span>.<span class=\"type\">Point</span>(<span class=\"number\">104.06</span>, <span class=\"number\">30.67</span>), <span class=\"number\">11</span>);  <span class=\"comment\">// 初始化地图,设置中心点坐标和地图级别</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//添加地图类型控件</span></span><br><span class=\"line\">      <span class=\"built_in\">map</span>.addControl(new <span class=\"type\">BMap</span>.<span class=\"type\">MapTypeControl</span>(&#123;</span><br><span class=\"line\">        mapTypes:[</span><br><span class=\"line\">          <span class=\"type\">BMAP_NORMAL_MAP</span>,</span><br><span class=\"line\">          <span class=\"type\">BMAP_HYBRID_MAP</span></span><br><span class=\"line\">        ]&#125;));</span><br><span class=\"line\">      <span class=\"built_in\">map</span>.setCurrentCity(<span class=\"string\">\"成都\"</span>);          <span class=\"comment\">// 设置地图显示的城市 此项是必须设置的</span></span><br><span class=\"line\">      <span class=\"built_in\">map</span>.enableScrollWheelZoom(<span class=\"literal\">true</span>);     <span class=\"comment\">//开启鼠标滚轮缩放</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">  .fli&#123;</span><br><span class=\"line\">    width: <span class=\"number\">100</span>%;</span><br><span class=\"line\">    height: <span class=\"number\">100</span>%;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">    margin: <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"另一种方式：异步加载\"><a href=\"#另一种方式：异步加载\" class=\"headerlink\" title=\"另一种方式：异步加载\"></a>另一种方式：异步加载</h2><p>跟<a href=\"http://lbsyun.baidu.com/index.php?title=jspopular/guide/introduction\" target=\"_blank\" rel=\"noopener\">百度api官网</a>里的异步加载很像。首先跟入口 js（main.js）一样，新建一个 map.js 。（ak 就是你的密钥）<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function <span class=\"type\">MP</span>(ak) &#123;  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> new <span class=\"type\">Promise</span>(function (resolve, reject) &#123;  </span><br><span class=\"line\">    window.onload = function () &#123;  </span><br><span class=\"line\">      resolve(<span class=\"type\">BMap</span>)  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> script = document.createElement(<span class=\"string\">\"script\"</span>);  </span><br><span class=\"line\">    script.type = <span class=\"string\">\"text/javascript\"</span>;  </span><br><span class=\"line\">    script.src = <span class=\"string\">\"http://api.map.baidu.com/api?v=2.0&amp;ak=\"</span>+ak+<span class=\"string\">\"&amp;callback=init\"</span>;  </span><br><span class=\"line\">    script.onerror = reject;  </span><br><span class=\"line\">    document.head.appendChild(script);  </span><br><span class=\"line\">  &#125;)  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在页面中调用：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;MP&#125; from '@/map.js'  </span><br><span class=\"line\">export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ak:'', <span class=\"comment\">// 这里就是百度地图密钥</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted()&#123;</span><br><span class=\"line\">      this.$nextTick(function() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> _this = this;</span><br><span class=\"line\">        <span class=\"type\">MP</span>(_this.ak).then(<span class=\"type\">BMap</span> =&gt; &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 百度地图API功能</span></span><br><span class=\"line\">          ...</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>注意：</strong><br>说到 src 末尾的 callback 参数，是否需要，值又是什么（ init, initialize ），自己去试验，随便写个简单的html，调试通了再引入vue。</p>\n<p><em>小提示：</em></p>\n<ul>\n<li>使用BMap的时候不需要import了，import反而会报错：BMap is not defined </li>\n<li>注意一定要给bmap的div设置高度，否则会看不见</li>\n</ul>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://blog.csdn.net/docallen/article/details/70877925\" target=\"_blank\" rel=\"noopener\">前端框架Vue（9）——百度地图使用</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_35515778/article/details/72677390\" target=\"_blank\" rel=\"noopener\">vue调用百度地图api时Bmap没有定义的解决办法</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>百度地图JavaScript API是一套由JavaScript语言编写的应用程序接口，可帮助您在网站中构建功能丰富、交互性强的地图应用，支持PC端和移动端基于浏览器的地图应用开发，且支持HTML5特性的地图开发。</p>\n<p>该套API免费对外开放。自v1.5版本起，您需先申请密钥（ak）才可使用，接口无使用次数限制。</p>\n<p>地址传送门：<a href=\"http://lbsyun.baidu.com/index.php?title=jspopular\" target=\"_blank\" rel=\"noopener\">http://lbsyun.baidu.com/index.php?title=jspopular</a><br>","more":"</p>\n<h2 id=\"申请密钥\"><a href=\"#申请密钥\" class=\"headerlink\" title=\"申请密钥\"></a>申请密钥</h2><p><a href=\"http://lbsyun.baidu.com/index.php?title=jspopular\" target=\"_blank\" rel=\"noopener\">点击此处</a>申请密钥，然后在首页index.html的head引入下面的js代码：<br><code>&lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/api?v=2.0&amp;ak=密钥&quot;&gt;&lt;/script&gt;</code><br><strong>注意：</strong><br>建议先写个简单的html确认密钥正确可用后，再讲其引入vue的项目中。因为有些教程这里引入的js的src末尾带有 <code>&amp;callback=init</code> ，这个参数导致了报错（见下图），而始终无法正常使用百度地图api。<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-bddb2b10d74130f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"vue-map-01.png\"></p>\n<h2 id=\"webpack-配置文件\"><a href=\"#webpack-配置文件\" class=\"headerlink\" title=\"webpack 配置文件\"></a>webpack 配置文件</h2><p>如果只是第一步，你调用百度地图api时，报错： <code>Bmap is not defined</code> ，那么就配置 webpack 配置文件（webpack.base.conf.js）的module.exports中加个externals：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  context: path.resolve(__dirname, '../'),</span><br><span class=\"line\">  entry: &#123; app: './src/main.js' &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//百度地图配置20180518</span></span><br><span class=\"line\">  externals: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"BMap\"</span>: <span class=\"string\">\"BMap\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!--地图容器--&gt;</span><br><span class=\"line\">    &lt;div id=<span class=\"string\">\"fli\"</span> <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">fli</span>\"&gt;&lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">export</span> <span class=\"title\">default</span> </span>&#123;</span><br><span class=\"line\">    name:'',</span><br><span class=\"line\">    data () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> <span class=\"built_in\">map</span> = new <span class=\"type\">BMap</span>.<span class=\"type\">Map</span>('fli',&#123;enableMapClick:<span class=\"literal\">true</span>&#125;);    <span class=\"comment\">// 创建Map实例</span></span><br><span class=\"line\">      <span class=\"built_in\">map</span>.centerAndZoom(new <span class=\"type\">BMap</span>.<span class=\"type\">Point</span>(<span class=\"number\">104.06</span>, <span class=\"number\">30.67</span>), <span class=\"number\">11</span>);  <span class=\"comment\">// 初始化地图,设置中心点坐标和地图级别</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//添加地图类型控件</span></span><br><span class=\"line\">      <span class=\"built_in\">map</span>.addControl(new <span class=\"type\">BMap</span>.<span class=\"type\">MapTypeControl</span>(&#123;</span><br><span class=\"line\">        mapTypes:[</span><br><span class=\"line\">          <span class=\"type\">BMAP_NORMAL_MAP</span>,</span><br><span class=\"line\">          <span class=\"type\">BMAP_HYBRID_MAP</span></span><br><span class=\"line\">        ]&#125;));</span><br><span class=\"line\">      <span class=\"built_in\">map</span>.setCurrentCity(<span class=\"string\">\"成都\"</span>);          <span class=\"comment\">// 设置地图显示的城市 此项是必须设置的</span></span><br><span class=\"line\">      <span class=\"built_in\">map</span>.enableScrollWheelZoom(<span class=\"literal\">true</span>);     <span class=\"comment\">//开启鼠标滚轮缩放</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">  .fli&#123;</span><br><span class=\"line\">    width: <span class=\"number\">100</span>%;</span><br><span class=\"line\">    height: <span class=\"number\">100</span>%;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">    margin: <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"另一种方式：异步加载\"><a href=\"#另一种方式：异步加载\" class=\"headerlink\" title=\"另一种方式：异步加载\"></a>另一种方式：异步加载</h2><p>跟<a href=\"http://lbsyun.baidu.com/index.php?title=jspopular/guide/introduction\" target=\"_blank\" rel=\"noopener\">百度api官网</a>里的异步加载很像。首先跟入口 js（main.js）一样，新建一个 map.js 。（ak 就是你的密钥）<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function <span class=\"type\">MP</span>(ak) &#123;  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> new <span class=\"type\">Promise</span>(function (resolve, reject) &#123;  </span><br><span class=\"line\">    window.onload = function () &#123;  </span><br><span class=\"line\">      resolve(<span class=\"type\">BMap</span>)  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> script = document.createElement(<span class=\"string\">\"script\"</span>);  </span><br><span class=\"line\">    script.type = <span class=\"string\">\"text/javascript\"</span>;  </span><br><span class=\"line\">    script.src = <span class=\"string\">\"http://api.map.baidu.com/api?v=2.0&amp;ak=\"</span>+ak+<span class=\"string\">\"&amp;callback=init\"</span>;  </span><br><span class=\"line\">    script.onerror = reject;  </span><br><span class=\"line\">    document.head.appendChild(script);  </span><br><span class=\"line\">  &#125;)  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在页面中调用：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;MP&#125; from '@/map.js'  </span><br><span class=\"line\">export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ak:'', <span class=\"comment\">// 这里就是百度地图密钥</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted()&#123;</span><br><span class=\"line\">      this.$nextTick(function() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> _this = this;</span><br><span class=\"line\">        <span class=\"type\">MP</span>(_this.ak).then(<span class=\"type\">BMap</span> =&gt; &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 百度地图API功能</span></span><br><span class=\"line\">          ...</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>注意：</strong><br>说到 src 末尾的 callback 参数，是否需要，值又是什么（ init, initialize ），自己去试验，随便写个简单的html，调试通了再引入vue。</p>\n<p><em>小提示：</em></p>\n<ul>\n<li>使用BMap的时候不需要import了，import反而会报错：BMap is not defined </li>\n<li>注意一定要给bmap的div设置高度，否则会看不见</li>\n</ul>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://blog.csdn.net/docallen/article/details/70877925\" target=\"_blank\" rel=\"noopener\">前端框架Vue（9）——百度地图使用</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_35515778/article/details/72677390\" target=\"_blank\" rel=\"noopener\">vue调用百度地图api时Bmap没有定义的解决办法</a></li>\n</ul>"},{"layout":"pages","title":"Vue2 ：百度图表 Echarts","date":"2018-05-19T04:22:00.000Z","_content":"\n在后台管理系统中，图表是一个很普遍的元素。目前常用的图标插件有 [charts](http://www.chartjs.org/),  [Echarts](http://echarts.baidu.com/index.html), [highcharts](http://www.highcharts.com/)。这次将介绍 Echarts 在 Vue 项目中的应用。\n<!-- more -->\n\n## 一、安装插件\nnpm 安装 Echarts ，进入项目目录：\n`npm install echarts -S`\n和 axios 类似，echarts 也不能通过 Vue.use() 进行全局调用\n通常是在需要使用图表的 .vue 文件中直接引入：\n`import echarts from 'echarts' `\n**另外一只方式：挂到vue上，再使用：**\n在 main.js 中引入，然后修改原型链：\n```swift\nimport echarts from 'echarts' \nVue.prototype.$echarts = echarts \n```\n然后就可以全局使用了\n`let myChart = this.$echarts.init(document.getElementById('myChart'))`\n## 二、创建图表\n需要注意的是，图表的容器必须指定宽高，也就是说 width，height 不能使用百分比，只能用 px。\n简单封装：Echarts.vue\n```swift\n<template>\n  <div style=\"width: 500px;height: 300px\" :id=\"id\" :class=\"className\"></div>\n</template>\n<script>\n  import * as echarts from 'echarts';\n  export default {\n    props: ['options','id','className'],\n    data: function () {\n      return { }\n    },\n    mounted: function(){\n      var myChart = echarts.init(document.getElementById(this.id));\n      myChart.setOption(this.options);\n    }\n  }\n</script>\n```\n然后使用：\n```swift\n<template>\n  <div class=\"center\">\n    <h3>ECharts 入门示例</h3>\n    <Echarts id=\"main\" :options='options' class=\"echarts\" style=\"width: 500px;height: 300px\"></Echarts>\n    <Echarts id=\"main2\" :options='optionsLine' class=\"echarts\" style=\"width: 500px;height: 300px\"></Echarts>\n  </div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  import Echarts from '@/components/Echarts/Echarts.vue'; //组件\n\n  export default {\n    data: function () {\n      return {\n        options:{\n          title: {\n            text: '柱形图Bar'\n          },\n          tooltip: {},\n          xAxis: {\n            data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\n          },\n          yAxis: {},\n          series: [{\n            name: '销量',\n            type: 'bar',\n            data: [5, 20, 36, 10, 10, 20]\n          }]\n        },\n        optionsLine: {\n          title: {\n            text: '线状图Line'\n          },\n          xAxis: {\n            type: 'category',\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: [820, 932, 901, 934, 1290, 1330, 1320],\n            type: 'line'\n          }]\n        },\n      }\n    },\n    components: {\n      'Echarts': Echarts,\n    }\n  }\n</script>\n\n<style>\n  .echarts{\n    float: left;\n  }\n</style>\n\n```\n\n## 三、按需引入\n上面引入的 echarts 包含了所有图表，但有时候我们只需要一两个基本图表，这时候完整的 echarts 就显得累赘。\n假如只需要创建一个饼图，那么可以这么做：\n```swift\n  // 引入基本模板\n  let echarts = require('echarts/lib/echarts')\n  // 引入饼图组件\n  require('echarts/lib/chart/pie')\n  // 引入提示框和图例组件\n  require('echarts/lib/component/tooltip')\n  require('echarts/lib/component/legend')\n```\n可以按需引入的模块列表见 [https://github.com/ecomfe/echarts/blob/master/index.js](https://github.com/ecomfe/echarts/blob/master/index.js)\n\n*其他*\n如果在页面加载之后，仍需要图表自适应宽高，就需要用到 echarts 的[媒体查询](http://echarts.baidu.com/tutorial.html#%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94)\n\n#### 参考\n* [在Vue上初级使用ECharts](https://blog.csdn.net/u013069892/article/details/70256596)\n* [在vue-cli项目中使用echarts](http://www.cnblogs.com/Smiled/p/7686316.html)\n*  [Vue 爬坑之路（八）—— 使用 Echarts 创建图表](http://www.cnblogs.com/wisewrong/p/6558001.html)\n* [做一个具有异步加载特性的 echarts-vue 组件](https://segmentfault.com/a/1190000011230007)\n* [vue 将echarts封装为组件一键使用](https://segmentfault.com/a/1190000011429939)\n","source":"_posts/vue-echarts.md","raw":"---\nlayout: pages\ntitle: Vue2 ：百度图表 Echarts\ndate: 2018-05-19 12:22:00\ncategories:\n- Vue2\ntags:\n- Vue2\n- Echarts\n---\n\n在后台管理系统中，图表是一个很普遍的元素。目前常用的图标插件有 [charts](http://www.chartjs.org/),  [Echarts](http://echarts.baidu.com/index.html), [highcharts](http://www.highcharts.com/)。这次将介绍 Echarts 在 Vue 项目中的应用。\n<!-- more -->\n\n## 一、安装插件\nnpm 安装 Echarts ，进入项目目录：\n`npm install echarts -S`\n和 axios 类似，echarts 也不能通过 Vue.use() 进行全局调用\n通常是在需要使用图表的 .vue 文件中直接引入：\n`import echarts from 'echarts' `\n**另外一只方式：挂到vue上，再使用：**\n在 main.js 中引入，然后修改原型链：\n```swift\nimport echarts from 'echarts' \nVue.prototype.$echarts = echarts \n```\n然后就可以全局使用了\n`let myChart = this.$echarts.init(document.getElementById('myChart'))`\n## 二、创建图表\n需要注意的是，图表的容器必须指定宽高，也就是说 width，height 不能使用百分比，只能用 px。\n简单封装：Echarts.vue\n```swift\n<template>\n  <div style=\"width: 500px;height: 300px\" :id=\"id\" :class=\"className\"></div>\n</template>\n<script>\n  import * as echarts from 'echarts';\n  export default {\n    props: ['options','id','className'],\n    data: function () {\n      return { }\n    },\n    mounted: function(){\n      var myChart = echarts.init(document.getElementById(this.id));\n      myChart.setOption(this.options);\n    }\n  }\n</script>\n```\n然后使用：\n```swift\n<template>\n  <div class=\"center\">\n    <h3>ECharts 入门示例</h3>\n    <Echarts id=\"main\" :options='options' class=\"echarts\" style=\"width: 500px;height: 300px\"></Echarts>\n    <Echarts id=\"main2\" :options='optionsLine' class=\"echarts\" style=\"width: 500px;height: 300px\"></Echarts>\n  </div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  import Echarts from '@/components/Echarts/Echarts.vue'; //组件\n\n  export default {\n    data: function () {\n      return {\n        options:{\n          title: {\n            text: '柱形图Bar'\n          },\n          tooltip: {},\n          xAxis: {\n            data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\n          },\n          yAxis: {},\n          series: [{\n            name: '销量',\n            type: 'bar',\n            data: [5, 20, 36, 10, 10, 20]\n          }]\n        },\n        optionsLine: {\n          title: {\n            text: '线状图Line'\n          },\n          xAxis: {\n            type: 'category',\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: [820, 932, 901, 934, 1290, 1330, 1320],\n            type: 'line'\n          }]\n        },\n      }\n    },\n    components: {\n      'Echarts': Echarts,\n    }\n  }\n</script>\n\n<style>\n  .echarts{\n    float: left;\n  }\n</style>\n\n```\n\n## 三、按需引入\n上面引入的 echarts 包含了所有图表，但有时候我们只需要一两个基本图表，这时候完整的 echarts 就显得累赘。\n假如只需要创建一个饼图，那么可以这么做：\n```swift\n  // 引入基本模板\n  let echarts = require('echarts/lib/echarts')\n  // 引入饼图组件\n  require('echarts/lib/chart/pie')\n  // 引入提示框和图例组件\n  require('echarts/lib/component/tooltip')\n  require('echarts/lib/component/legend')\n```\n可以按需引入的模块列表见 [https://github.com/ecomfe/echarts/blob/master/index.js](https://github.com/ecomfe/echarts/blob/master/index.js)\n\n*其他*\n如果在页面加载之后，仍需要图表自适应宽高，就需要用到 echarts 的[媒体查询](http://echarts.baidu.com/tutorial.html#%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94)\n\n#### 参考\n* [在Vue上初级使用ECharts](https://blog.csdn.net/u013069892/article/details/70256596)\n* [在vue-cli项目中使用echarts](http://www.cnblogs.com/Smiled/p/7686316.html)\n*  [Vue 爬坑之路（八）—— 使用 Echarts 创建图表](http://www.cnblogs.com/wisewrong/p/6558001.html)\n* [做一个具有异步加载特性的 echarts-vue 组件](https://segmentfault.com/a/1190000011230007)\n* [vue 将echarts封装为组件一键使用](https://segmentfault.com/a/1190000011429939)\n","slug":"vue-echarts","published":1,"updated":"2018-05-29T09:18:52.658Z","comments":1,"photos":[],"link":"","_id":"cji0ejm5j0028g4l1vz7hcfdb","content":"<p>在后台管理系统中，图表是一个很普遍的元素。目前常用的图标插件有 <a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">charts</a>,  <a href=\"http://echarts.baidu.com/index.html\" target=\"_blank\" rel=\"noopener\">Echarts</a>, <a href=\"http://www.highcharts.com/\" target=\"_blank\" rel=\"noopener\">highcharts</a>。这次将介绍 Echarts 在 Vue 项目中的应用。<br><a id=\"more\"></a></p>\n<h2 id=\"一、安装插件\"><a href=\"#一、安装插件\" class=\"headerlink\" title=\"一、安装插件\"></a>一、安装插件</h2><p>npm 安装 Echarts ，进入项目目录：<br><code>npm install echarts -S</code><br>和 axios 类似，echarts 也不能通过 Vue.use() 进行全局调用<br>通常是在需要使用图表的 .vue 文件中直接引入：<br><code>import echarts from &#39;echarts&#39;</code><br><strong>另外一只方式：挂到vue上，再使用：</strong><br>在 main.js 中引入，然后修改原型链：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> echarts from 'echarts' </span><br><span class=\"line\"><span class=\"type\">Vue</span>.prototype.$echarts = echarts</span><br></pre></td></tr></table></figure></p>\n<p>然后就可以全局使用了<br><code>let myChart = this.$echarts.init(document.getElementById(&#39;myChart&#39;))</code></p>\n<h2 id=\"二、创建图表\"><a href=\"#二、创建图表\" class=\"headerlink\" title=\"二、创建图表\"></a>二、创建图表</h2><p>需要注意的是，图表的容器必须指定宽高，也就是说 width，height 不能使用百分比，只能用 px。<br>简单封装：Echarts.vue<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div style=<span class=\"string\">\"width: 500px;height: 300px\"</span> :id=<span class=\"string\">\"id\"</span> :<span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">className</span>\"&gt;&lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">import</span> * <span class=\"title\">as</span> <span class=\"title\">echarts</span> <span class=\"title\">from</span> '<span class=\"title\">echarts</span>';</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">export</span> <span class=\"title\">default</span> </span>&#123;</span><br><span class=\"line\">    props: ['options','id','className'],</span><br><span class=\"line\">    data: function () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123; &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted: function()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> myChart = echarts.<span class=\"keyword\">init</span>(document.getElementById(this.id));</span><br><span class=\"line\">      myChart.setOption(this.options);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>然后使用：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">center</span>\"&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">h3</span>&gt;<span class=\"title\">ECharts</span> 入门示例&lt;/<span class=\"title\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">Echarts</span> <span class=\"title\">id</span>=\"<span class=\"title\">main</span>\" :<span class=\"title\">options</span>='<span class=\"title\">options</span>' <span class=\"title\">class</span>=\"<span class=\"title\">echarts</span>\" <span class=\"title\">style</span>=\"<span class=\"title\">width</span>: 500<span class=\"title\">px</span>;<span class=\"title\">height</span>: 300<span class=\"title\">px</span>\"&gt;&lt;/<span class=\"title\">Echarts</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">Echarts</span> <span class=\"title\">id</span>=\"<span class=\"title\">main2</span>\" :<span class=\"title\">options</span>='<span class=\"title\">optionsLine</span>' <span class=\"title\">class</span>=\"<span class=\"title\">echarts</span>\" <span class=\"title\">style</span>=\"<span class=\"title\">width</span>: 500<span class=\"title\">px</span>;<span class=\"title\">height</span>: 300<span class=\"title\">px</span>\"&gt;&lt;/<span class=\"title\">Echarts</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  &lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">import</span> * <span class=\"title\">as</span> <span class=\"title\">echarts</span> <span class=\"title\">from</span> '<span class=\"title\">echarts</span>';</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">import</span> <span class=\"title\">Echarts</span> <span class=\"title\">from</span> '@/<span class=\"title\">components</span>/<span class=\"title\">Echarts</span>/<span class=\"title\">Echarts</span>.<span class=\"title\">vue</span>'; //组件</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">export</span> <span class=\"title\">default</span> </span>&#123;</span><br><span class=\"line\">    data: function () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        options:&#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">            text: '柱形图<span class=\"type\">Bar'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          tooltip: &#123;&#125;,</span><br><span class=\"line\">          xAxis: &#123;</span><br><span class=\"line\">            data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          yAxis: &#123;&#125;,</span><br><span class=\"line\">          series: [&#123;</span><br><span class=\"line\">            name: '销量',</span><br><span class=\"line\">            type: 'bar',</span><br><span class=\"line\">            data: [<span class=\"number\">5</span>, <span class=\"number\">20</span>, <span class=\"number\">36</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">20</span>]</span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        optionsLine: &#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">            text: '线状图<span class=\"type\">Line'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          xAxis: &#123;</span><br><span class=\"line\">            type: 'category',</span><br><span class=\"line\">            data: ['<span class=\"type\">Mon'</span>, '<span class=\"type\">Tue'</span>, '<span class=\"type\">Wed'</span>, '<span class=\"type\">Thu'</span>, '<span class=\"type\">Fri'</span>, '<span class=\"type\">Sat'</span>, '<span class=\"type\">Sun'</span>]</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          yAxis: &#123;</span><br><span class=\"line\">            type: 'value'</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          series: [&#123;</span><br><span class=\"line\">            data: [<span class=\"number\">820</span>, <span class=\"number\">932</span>, <span class=\"number\">901</span>, <span class=\"number\">934</span>, <span class=\"number\">1290</span>, <span class=\"number\">1330</span>, <span class=\"number\">1320</span>],</span><br><span class=\"line\">            type: 'line'</span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    components: &#123;</span><br><span class=\"line\">      '<span class=\"type\">Echarts'</span>: <span class=\"type\">Echarts</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  .echarts&#123;</span><br><span class=\"line\">    float: <span class=\"keyword\">left</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"三、按需引入\"><a href=\"#三、按需引入\" class=\"headerlink\" title=\"三、按需引入\"></a>三、按需引入</h2><p>上面引入的 echarts 包含了所有图表，但有时候我们只需要一两个基本图表，这时候完整的 echarts 就显得累赘。<br>假如只需要创建一个饼图，那么可以这么做：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入基本模板</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> echarts = require('echarts/lib/echarts')</span><br><span class=\"line\"><span class=\"comment\">// 引入饼图组件</span></span><br><span class=\"line\">require('echarts/lib/chart/pie')</span><br><span class=\"line\"><span class=\"comment\">// 引入提示框和图例组件</span></span><br><span class=\"line\">require('echarts/lib/component/tooltip')</span><br><span class=\"line\">require('echarts/lib/component/legend')</span><br></pre></td></tr></table></figure></p>\n<p>可以按需引入的模块列表见 <a href=\"https://github.com/ecomfe/echarts/blob/master/index.js\" target=\"_blank\" rel=\"noopener\">https://github.com/ecomfe/echarts/blob/master/index.js</a></p>\n<p><em>其他</em><br>如果在页面加载之后，仍需要图表自适应宽高，就需要用到 echarts 的<a href=\"http://echarts.baidu.com/tutorial.html#%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94\" target=\"_blank\" rel=\"noopener\">媒体查询</a></p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://blog.csdn.net/u013069892/article/details/70256596\" target=\"_blank\" rel=\"noopener\">在Vue上初级使用ECharts</a></li>\n<li><a href=\"http://www.cnblogs.com/Smiled/p/7686316.html\" target=\"_blank\" rel=\"noopener\">在vue-cli项目中使用echarts</a></li>\n<li><a href=\"http://www.cnblogs.com/wisewrong/p/6558001.html\" target=\"_blank\" rel=\"noopener\">Vue 爬坑之路（八）—— 使用 Echarts 创建图表</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000011230007\" target=\"_blank\" rel=\"noopener\">做一个具有异步加载特性的 echarts-vue 组件</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000011429939\" target=\"_blank\" rel=\"noopener\">vue 将echarts封装为组件一键使用</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>在后台管理系统中，图表是一个很普遍的元素。目前常用的图标插件有 <a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">charts</a>,  <a href=\"http://echarts.baidu.com/index.html\" target=\"_blank\" rel=\"noopener\">Echarts</a>, <a href=\"http://www.highcharts.com/\" target=\"_blank\" rel=\"noopener\">highcharts</a>。这次将介绍 Echarts 在 Vue 项目中的应用。<br>","more":"</p>\n<h2 id=\"一、安装插件\"><a href=\"#一、安装插件\" class=\"headerlink\" title=\"一、安装插件\"></a>一、安装插件</h2><p>npm 安装 Echarts ，进入项目目录：<br><code>npm install echarts -S</code><br>和 axios 类似，echarts 也不能通过 Vue.use() 进行全局调用<br>通常是在需要使用图表的 .vue 文件中直接引入：<br><code>import echarts from &#39;echarts&#39;</code><br><strong>另外一只方式：挂到vue上，再使用：</strong><br>在 main.js 中引入，然后修改原型链：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> echarts from 'echarts' </span><br><span class=\"line\"><span class=\"type\">Vue</span>.prototype.$echarts = echarts</span><br></pre></td></tr></table></figure></p>\n<p>然后就可以全局使用了<br><code>let myChart = this.$echarts.init(document.getElementById(&#39;myChart&#39;))</code></p>\n<h2 id=\"二、创建图表\"><a href=\"#二、创建图表\" class=\"headerlink\" title=\"二、创建图表\"></a>二、创建图表</h2><p>需要注意的是，图表的容器必须指定宽高，也就是说 width，height 不能使用百分比，只能用 px。<br>简单封装：Echarts.vue<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div style=<span class=\"string\">\"width: 500px;height: 300px\"</span> :id=<span class=\"string\">\"id\"</span> :<span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">className</span>\"&gt;&lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">import</span> * <span class=\"title\">as</span> <span class=\"title\">echarts</span> <span class=\"title\">from</span> '<span class=\"title\">echarts</span>';</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">export</span> <span class=\"title\">default</span> </span>&#123;</span><br><span class=\"line\">    props: ['options','id','className'],</span><br><span class=\"line\">    data: function () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123; &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted: function()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> myChart = echarts.<span class=\"keyword\">init</span>(document.getElementById(this.id));</span><br><span class=\"line\">      myChart.setOption(this.options);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>然后使用：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span>=\"<span class=\"title\">center</span>\"&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">h3</span>&gt;<span class=\"title\">ECharts</span> 入门示例&lt;/<span class=\"title\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">Echarts</span> <span class=\"title\">id</span>=\"<span class=\"title\">main</span>\" :<span class=\"title\">options</span>='<span class=\"title\">options</span>' <span class=\"title\">class</span>=\"<span class=\"title\">echarts</span>\" <span class=\"title\">style</span>=\"<span class=\"title\">width</span>: 500<span class=\"title\">px</span>;<span class=\"title\">height</span>: 300<span class=\"title\">px</span>\"&gt;&lt;/<span class=\"title\">Echarts</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">Echarts</span> <span class=\"title\">id</span>=\"<span class=\"title\">main2</span>\" :<span class=\"title\">options</span>='<span class=\"title\">optionsLine</span>' <span class=\"title\">class</span>=\"<span class=\"title\">echarts</span>\" <span class=\"title\">style</span>=\"<span class=\"title\">width</span>: 500<span class=\"title\">px</span>;<span class=\"title\">height</span>: 300<span class=\"title\">px</span>\"&gt;&lt;/<span class=\"title\">Echarts</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  &lt;/<span class=\"title\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">import</span> * <span class=\"title\">as</span> <span class=\"title\">echarts</span> <span class=\"title\">from</span> '<span class=\"title\">echarts</span>';</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">import</span> <span class=\"title\">Echarts</span> <span class=\"title\">from</span> '@/<span class=\"title\">components</span>/<span class=\"title\">Echarts</span>/<span class=\"title\">Echarts</span>.<span class=\"title\">vue</span>'; //组件</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">export</span> <span class=\"title\">default</span> </span>&#123;</span><br><span class=\"line\">    data: function () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        options:&#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">            text: '柱形图<span class=\"type\">Bar'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          tooltip: &#123;&#125;,</span><br><span class=\"line\">          xAxis: &#123;</span><br><span class=\"line\">            data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          yAxis: &#123;&#125;,</span><br><span class=\"line\">          series: [&#123;</span><br><span class=\"line\">            name: '销量',</span><br><span class=\"line\">            type: 'bar',</span><br><span class=\"line\">            data: [<span class=\"number\">5</span>, <span class=\"number\">20</span>, <span class=\"number\">36</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">20</span>]</span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        optionsLine: &#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">            text: '线状图<span class=\"type\">Line'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          xAxis: &#123;</span><br><span class=\"line\">            type: 'category',</span><br><span class=\"line\">            data: ['<span class=\"type\">Mon'</span>, '<span class=\"type\">Tue'</span>, '<span class=\"type\">Wed'</span>, '<span class=\"type\">Thu'</span>, '<span class=\"type\">Fri'</span>, '<span class=\"type\">Sat'</span>, '<span class=\"type\">Sun'</span>]</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          yAxis: &#123;</span><br><span class=\"line\">            type: 'value'</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          series: [&#123;</span><br><span class=\"line\">            data: [<span class=\"number\">820</span>, <span class=\"number\">932</span>, <span class=\"number\">901</span>, <span class=\"number\">934</span>, <span class=\"number\">1290</span>, <span class=\"number\">1330</span>, <span class=\"number\">1320</span>],</span><br><span class=\"line\">            type: 'line'</span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    components: &#123;</span><br><span class=\"line\">      '<span class=\"type\">Echarts'</span>: <span class=\"type\">Echarts</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  .echarts&#123;</span><br><span class=\"line\">    float: <span class=\"keyword\">left</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"三、按需引入\"><a href=\"#三、按需引入\" class=\"headerlink\" title=\"三、按需引入\"></a>三、按需引入</h2><p>上面引入的 echarts 包含了所有图表，但有时候我们只需要一两个基本图表，这时候完整的 echarts 就显得累赘。<br>假如只需要创建一个饼图，那么可以这么做：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入基本模板</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> echarts = require('echarts/lib/echarts')</span><br><span class=\"line\"><span class=\"comment\">// 引入饼图组件</span></span><br><span class=\"line\">require('echarts/lib/chart/pie')</span><br><span class=\"line\"><span class=\"comment\">// 引入提示框和图例组件</span></span><br><span class=\"line\">require('echarts/lib/component/tooltip')</span><br><span class=\"line\">require('echarts/lib/component/legend')</span><br></pre></td></tr></table></figure></p>\n<p>可以按需引入的模块列表见 <a href=\"https://github.com/ecomfe/echarts/blob/master/index.js\" target=\"_blank\" rel=\"noopener\">https://github.com/ecomfe/echarts/blob/master/index.js</a></p>\n<p><em>其他</em><br>如果在页面加载之后，仍需要图表自适应宽高，就需要用到 echarts 的<a href=\"http://echarts.baidu.com/tutorial.html#%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94\" target=\"_blank\" rel=\"noopener\">媒体查询</a></p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://blog.csdn.net/u013069892/article/details/70256596\" target=\"_blank\" rel=\"noopener\">在Vue上初级使用ECharts</a></li>\n<li><a href=\"http://www.cnblogs.com/Smiled/p/7686316.html\" target=\"_blank\" rel=\"noopener\">在vue-cli项目中使用echarts</a></li>\n<li><a href=\"http://www.cnblogs.com/wisewrong/p/6558001.html\" target=\"_blank\" rel=\"noopener\">Vue 爬坑之路（八）—— 使用 Echarts 创建图表</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000011230007\" target=\"_blank\" rel=\"noopener\">做一个具有异步加载特性的 echarts-vue 组件</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000011429939\" target=\"_blank\" rel=\"noopener\">vue 将echarts封装为组件一键使用</a></li>\n</ul>"},{"layout":"pages","title":"vue+element ui 之一：环境搭建和项目创建","date":"2018-05-06T05:22:00.000Z","_content":"\n替换老技术ext.js，故而用[Element UI](http://element-cn.eleme.io/#/zh-CN/component/installation)。\n\nnode安装（npm跟node是配套的，无须单独安装），去[官网](https://nodejs.org/en/)下载安装就行。如果你已经有了，但是版本低了，需要升级，可以参考[此文](https://www.jianshu.com/p/c46a45d177cb)。\n**Vue + Element UI 的项目搭建有两种方式：**\n<!-- more -->\n\n## 一、直接用 Element 的项目模板\nElement 脚手架方式，[点此去](https://github.com/ElementUI/element-starter)：\n```swift\n# 克隆项目 \n$ git clone https://github.com/ElementUI/element-starter.git\n# 查看目录\n$ ls\n# 进入项目目录\n$ cd element-starter\n# 安装相关依赖包\n$ yarn\n# 运行\n$ npm run dev\n# 打包压缩\n$ npm run build\n```\n\n## 二、先搭建Vue项目，再引入Element UI\n注：\n1、查看 node,npm,vue,webpack 版本：`xx -v`，命令不对是，用`xx -help`查看相关命令。比如：`node -v`，`node -help`。（特例：vue 查看版本 `vue -V`）\n2、需要再多个项目用的的用全局安装   `npm install xx -g 或 --global`，只是某个项目里用到的，进入该项目目录，再安装 `npm install xx   --save-dev 或 -D`。\n\n```swift\n# 安装node和npm（直接用的官网的安装文件安装的），查看一下版本号可以确认安装成功\n$ node -v\n$ npm -v\n# 安装vue，查看版本 vue -V\n$ npm install vue@2.5.2 -g\n# 全局安装 vue-cli\n$ npm install vue-cli -g\n# 安装webpack\n$ npm install webpack -g\n# 创建一个基于 webpack 模板的新项目my-project\n$ vue init webpack my-project\n# 进入项目目录\n$ cd my-project\n# 安装依赖，走你\n$ npm install XX\n# 运行项目\n$ npm run dev\n# 打包项目\n$ npm run build\n# 到此，vue的脚手架项目创建完成\n# 再引入element ui相关东西（i: install, -D: --save -dev）：\n$ npm i element-ui@2.3.6 -D\n```\n## 相关目录情况\n项目创建完后的相关目录介绍如下图：\n![20180227145151434.png](https://upload-images.jianshu.io/upload_images/1464420-7036af73aa0a1ea9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**注意：**\n### assets和static目录：\nassets存相对路径用的图片，会打包进js里，不方便更换图片，如logo,导航的背景图和icon等等。\nstatic存绝对路径用的图片，可随时更换，如商品图片和产品图片等等。\n做了一个小测试：同时在两个目录下,放入同名的css和图片。在打包后，css不会有影响，因为命令不同，图片最终会被static覆盖。看下图：\n![assets-static.png](https://upload-images.jianshu.io/upload_images/1464420-7641e610d28c2900.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n### index.js配置文件比较重要，需要熟悉里面的每项配置。\n```swift\n// see http://vuejs-templates.github.io/webpack for documentation.\nvar path = require('path')//使用Node自带的文件路径插件\nmodule.exports = {\n  //生产环境配置\n  build: {\n     //http://vuejs-templates.github.io/webpack/backend.html\n    // 使用 config/prod.env.js 中定义的编译环境\n    env: require('./prod.env'),\n    index: path.resolve(__dirname, '../dist/index.html'),   // 编译注入的 index.html 文件,必须是本地的绝对路径\n    assetsRoot: path.resolve(__dirname, '../dist'),   // 编译输出的静态资源根路径\n    assetsSubDirectory: 'static',    // 编译输出的二级目录\n    assetsPublicPath: '/',    // 编译发布上线路径的根目录，可配置为资源服务器域名或 CDN 域名\n    productionSourceMap: true,    //生成用于生产构建的源映射\n    // https://webpack.js.org/configuration/devtool/#production\n    devtool: '#source-map',\n    // Gzip off by default as many popular static hosts such as\n    // Surge or Netlify already gzip all static assets for you.\n    // Before setting to `true`, make sure to:\n    // npm install --save-dev compression-webpack-plugin\n    productionGzip: false,    // 是否开启 gzip\n    productionGzipExtensions: ['js', 'css'],    // 需要使用 gzip 压缩的文件扩展名\n    // Run the build command with an extra argument to\n    // View the bundle analyzer report after build finishes:\n    // `npm run build --report`\n    // Set to `true` or `false` to always turn it on or off\n    bundleAnalyzerReport: process.env.npm_config_report    //一个实用工具,用于分析项目的依赖关系https://www.npmjs.com/package/webpack-bundle-analyzer\n  },\n  //开发环境\n  dev: {\n    // Paths\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/',\n    proxyTable: {},\n\n    env: require('./dev.env'),    // 使用 config/dev.env.js 中定义的编译环境\n    port: 8081,    // 运行测试页面的端口\n    autoOpenBrowser: true,    //是否自动打开浏览器\n    assetsSubDirectory: 'static',    // 编译输出的二级目录\n    assetsPublicPath: '/',    // 编译发布上线路径的根目录，可配置为资源服务器域名或 CDN 域名\n    proxyTable: {\n        //https://github.com/chimurai/http-proxy-middleware,配置方式\n    },    // 需要 proxyTable 代理的接口（可跨域）http://vuejs-templates.github.io/webpack/proxy.html\n    /**\n     * Source Maps\n     */\n    // https://webpack.js.org/configuration/devtool/#development\n    devtool: 'cheap-module-eval-source-map',\n    // If you have problems debugging vue-files in devtools,\n    // set this to false - it *may* help\n    // https://vue-loader.vuejs.org/en/options.html#cachebusting\n    cacheBusting: true,\n    cssSourceMap: true   // 是否开启 cssSourceMap\n  }\n}\n```\n\n#### 参考：\n* [Element UI](http://element-cn.eleme.io/#/zh-CN)\n* [Vue项目目录结构注解附assets与static目录的区别](https://blog.csdn.net/Fabulous1111/article/details/79388403)\n* [Vue-webpack项目配置详解](https://blog.csdn.net/air_hjj/article/details/77374920)\n\n\n","source":"_posts/vue-element-01.md","raw":"---\nlayout: pages\ntitle: vue+element ui 之一：环境搭建和项目创建\ndate: 2018-05-06 13:22:00\ncategories:\n- Vue2\ntags:\n- Vue2\n- Element\n---\n\n替换老技术ext.js，故而用[Element UI](http://element-cn.eleme.io/#/zh-CN/component/installation)。\n\nnode安装（npm跟node是配套的，无须单独安装），去[官网](https://nodejs.org/en/)下载安装就行。如果你已经有了，但是版本低了，需要升级，可以参考[此文](https://www.jianshu.com/p/c46a45d177cb)。\n**Vue + Element UI 的项目搭建有两种方式：**\n<!-- more -->\n\n## 一、直接用 Element 的项目模板\nElement 脚手架方式，[点此去](https://github.com/ElementUI/element-starter)：\n```swift\n# 克隆项目 \n$ git clone https://github.com/ElementUI/element-starter.git\n# 查看目录\n$ ls\n# 进入项目目录\n$ cd element-starter\n# 安装相关依赖包\n$ yarn\n# 运行\n$ npm run dev\n# 打包压缩\n$ npm run build\n```\n\n## 二、先搭建Vue项目，再引入Element UI\n注：\n1、查看 node,npm,vue,webpack 版本：`xx -v`，命令不对是，用`xx -help`查看相关命令。比如：`node -v`，`node -help`。（特例：vue 查看版本 `vue -V`）\n2、需要再多个项目用的的用全局安装   `npm install xx -g 或 --global`，只是某个项目里用到的，进入该项目目录，再安装 `npm install xx   --save-dev 或 -D`。\n\n```swift\n# 安装node和npm（直接用的官网的安装文件安装的），查看一下版本号可以确认安装成功\n$ node -v\n$ npm -v\n# 安装vue，查看版本 vue -V\n$ npm install vue@2.5.2 -g\n# 全局安装 vue-cli\n$ npm install vue-cli -g\n# 安装webpack\n$ npm install webpack -g\n# 创建一个基于 webpack 模板的新项目my-project\n$ vue init webpack my-project\n# 进入项目目录\n$ cd my-project\n# 安装依赖，走你\n$ npm install XX\n# 运行项目\n$ npm run dev\n# 打包项目\n$ npm run build\n# 到此，vue的脚手架项目创建完成\n# 再引入element ui相关东西（i: install, -D: --save -dev）：\n$ npm i element-ui@2.3.6 -D\n```\n## 相关目录情况\n项目创建完后的相关目录介绍如下图：\n![20180227145151434.png](https://upload-images.jianshu.io/upload_images/1464420-7036af73aa0a1ea9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**注意：**\n### assets和static目录：\nassets存相对路径用的图片，会打包进js里，不方便更换图片，如logo,导航的背景图和icon等等。\nstatic存绝对路径用的图片，可随时更换，如商品图片和产品图片等等。\n做了一个小测试：同时在两个目录下,放入同名的css和图片。在打包后，css不会有影响，因为命令不同，图片最终会被static覆盖。看下图：\n![assets-static.png](https://upload-images.jianshu.io/upload_images/1464420-7641e610d28c2900.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n### index.js配置文件比较重要，需要熟悉里面的每项配置。\n```swift\n// see http://vuejs-templates.github.io/webpack for documentation.\nvar path = require('path')//使用Node自带的文件路径插件\nmodule.exports = {\n  //生产环境配置\n  build: {\n     //http://vuejs-templates.github.io/webpack/backend.html\n    // 使用 config/prod.env.js 中定义的编译环境\n    env: require('./prod.env'),\n    index: path.resolve(__dirname, '../dist/index.html'),   // 编译注入的 index.html 文件,必须是本地的绝对路径\n    assetsRoot: path.resolve(__dirname, '../dist'),   // 编译输出的静态资源根路径\n    assetsSubDirectory: 'static',    // 编译输出的二级目录\n    assetsPublicPath: '/',    // 编译发布上线路径的根目录，可配置为资源服务器域名或 CDN 域名\n    productionSourceMap: true,    //生成用于生产构建的源映射\n    // https://webpack.js.org/configuration/devtool/#production\n    devtool: '#source-map',\n    // Gzip off by default as many popular static hosts such as\n    // Surge or Netlify already gzip all static assets for you.\n    // Before setting to `true`, make sure to:\n    // npm install --save-dev compression-webpack-plugin\n    productionGzip: false,    // 是否开启 gzip\n    productionGzipExtensions: ['js', 'css'],    // 需要使用 gzip 压缩的文件扩展名\n    // Run the build command with an extra argument to\n    // View the bundle analyzer report after build finishes:\n    // `npm run build --report`\n    // Set to `true` or `false` to always turn it on or off\n    bundleAnalyzerReport: process.env.npm_config_report    //一个实用工具,用于分析项目的依赖关系https://www.npmjs.com/package/webpack-bundle-analyzer\n  },\n  //开发环境\n  dev: {\n    // Paths\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/',\n    proxyTable: {},\n\n    env: require('./dev.env'),    // 使用 config/dev.env.js 中定义的编译环境\n    port: 8081,    // 运行测试页面的端口\n    autoOpenBrowser: true,    //是否自动打开浏览器\n    assetsSubDirectory: 'static',    // 编译输出的二级目录\n    assetsPublicPath: '/',    // 编译发布上线路径的根目录，可配置为资源服务器域名或 CDN 域名\n    proxyTable: {\n        //https://github.com/chimurai/http-proxy-middleware,配置方式\n    },    // 需要 proxyTable 代理的接口（可跨域）http://vuejs-templates.github.io/webpack/proxy.html\n    /**\n     * Source Maps\n     */\n    // https://webpack.js.org/configuration/devtool/#development\n    devtool: 'cheap-module-eval-source-map',\n    // If you have problems debugging vue-files in devtools,\n    // set this to false - it *may* help\n    // https://vue-loader.vuejs.org/en/options.html#cachebusting\n    cacheBusting: true,\n    cssSourceMap: true   // 是否开启 cssSourceMap\n  }\n}\n```\n\n#### 参考：\n* [Element UI](http://element-cn.eleme.io/#/zh-CN)\n* [Vue项目目录结构注解附assets与static目录的区别](https://blog.csdn.net/Fabulous1111/article/details/79388403)\n* [Vue-webpack项目配置详解](https://blog.csdn.net/air_hjj/article/details/77374920)\n\n\n","slug":"vue-element-01","published":1,"updated":"2018-05-30T08:11:20.217Z","comments":1,"photos":[],"link":"","_id":"cji0ejm5o002bg4l15xa2314u","content":"<p>替换老技术ext.js，故而用<a href=\"http://element-cn.eleme.io/#/zh-CN/component/installation\" target=\"_blank\" rel=\"noopener\">Element UI</a>。</p>\n<p>node安装（npm跟node是配套的，无须单独安装），去<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">官网</a>下载安装就行。如果你已经有了，但是版本低了，需要升级，可以参考<a href=\"https://www.jianshu.com/p/c46a45d177cb\" target=\"_blank\" rel=\"noopener\">此文</a>。<br><strong>Vue + Element UI 的项目搭建有两种方式：</strong><br><a id=\"more\"></a></p>\n<h2 id=\"一、直接用-Element-的项目模板\"><a href=\"#一、直接用-Element-的项目模板\" class=\"headerlink\" title=\"一、直接用 Element 的项目模板\"></a>一、直接用 Element 的项目模板</h2><p>Element 脚手架方式，<a href=\"https://github.com/ElementUI/element-starter\" target=\"_blank\" rel=\"noopener\">点此去</a>：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 克隆项目 </span><br><span class=\"line\">$ git clone https:<span class=\"comment\">//github.com/ElementUI/element-starter.git</span></span><br><span class=\"line\"># 查看目录</span><br><span class=\"line\">$ ls</span><br><span class=\"line\"># 进入项目目录</span><br><span class=\"line\">$ cd element-starter</span><br><span class=\"line\"># 安装相关依赖包</span><br><span class=\"line\">$ yarn</span><br><span class=\"line\"># 运行</span><br><span class=\"line\">$ npm run dev</span><br><span class=\"line\"># 打包压缩</span><br><span class=\"line\">$ npm run build</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"二、先搭建Vue项目，再引入Element-UI\"><a href=\"#二、先搭建Vue项目，再引入Element-UI\" class=\"headerlink\" title=\"二、先搭建Vue项目，再引入Element UI\"></a>二、先搭建Vue项目，再引入Element UI</h2><p>注：<br>1、查看 node,npm,vue,webpack 版本：<code>xx -v</code>，命令不对是，用<code>xx -help</code>查看相关命令。比如：<code>node -v</code>，<code>node -help</code>。（特例：vue 查看版本 <code>vue -V</code>）<br>2、需要再多个项目用的的用全局安装   <code>npm install xx -g 或 --global</code>，只是某个项目里用到的，进入该项目目录，再安装 <code>npm install xx   --save-dev 或 -D</code>。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装node和npm（直接用的官网的安装文件安装的），查看一下版本号可以确认安装成功</span><br><span class=\"line\">$ node -v</span><br><span class=\"line\">$ npm -v</span><br><span class=\"line\"># 安装vue，查看版本 vue -<span class=\"type\">V</span></span><br><span class=\"line\">$ npm install vue@<span class=\"number\">2.5</span>.<span class=\"number\">2</span> -g</span><br><span class=\"line\"># 全局安装 vue-cli</span><br><span class=\"line\">$ npm install vue-cli -g</span><br><span class=\"line\"># 安装webpack</span><br><span class=\"line\">$ npm install webpack -g</span><br><span class=\"line\"># 创建一个基于 webpack 模板的新项目my-project</span><br><span class=\"line\">$ vue <span class=\"keyword\">init</span> webpack my-project</span><br><span class=\"line\"># 进入项目目录</span><br><span class=\"line\">$ cd my-project</span><br><span class=\"line\"># 安装依赖，走你</span><br><span class=\"line\">$ npm install <span class=\"type\">XX</span></span><br><span class=\"line\"># 运行项目</span><br><span class=\"line\">$ npm run dev</span><br><span class=\"line\"># 打包项目</span><br><span class=\"line\">$ npm run build</span><br><span class=\"line\"># 到此，vue的脚手架项目创建完成</span><br><span class=\"line\"># 再引入element ui相关东西（i: install, -<span class=\"type\">D</span>: --save -dev）：</span><br><span class=\"line\">$ npm i element-ui@<span class=\"number\">2.3</span>.<span class=\"number\">6</span> -<span class=\"type\">D</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"相关目录情况\"><a href=\"#相关目录情况\" class=\"headerlink\" title=\"相关目录情况\"></a>相关目录情况</h2><p>项目创建完后的相关目录介绍如下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-7036af73aa0a1ea9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"20180227145151434.png\"></p>\n<p><strong>注意：</strong></p>\n<h3 id=\"assets和static目录：\"><a href=\"#assets和static目录：\" class=\"headerlink\" title=\"assets和static目录：\"></a>assets和static目录：</h3><p>assets存相对路径用的图片，会打包进js里，不方便更换图片，如logo,导航的背景图和icon等等。<br>static存绝对路径用的图片，可随时更换，如商品图片和产品图片等等。<br>做了一个小测试：同时在两个目录下,放入同名的css和图片。在打包后，css不会有影响，因为命令不同，图片最终会被static覆盖。看下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-7641e610d28c2900.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"assets-static.png\"></p>\n<h3 id=\"index-js配置文件比较重要，需要熟悉里面的每项配置。\"><a href=\"#index-js配置文件比较重要，需要熟悉里面的每项配置。\" class=\"headerlink\" title=\"index.js配置文件比较重要，需要熟悉里面的每项配置。\"></a>index.js配置文件比较重要，需要熟悉里面的每项配置。</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// see http://vuejs-templates.github.io/webpack for documentation.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = require('path')<span class=\"comment\">//使用Node自带的文件路径插件</span></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">//生产环境配置</span></span><br><span class=\"line\">  build: &#123;</span><br><span class=\"line\">     <span class=\"comment\">//http://vuejs-templates.github.io/webpack/backend.html</span></span><br><span class=\"line\">    <span class=\"comment\">// 使用 config/prod.env.js 中定义的编译环境</span></span><br><span class=\"line\">    env: require('./prod.env'),</span><br><span class=\"line\">    index: path.resolve(__dirname, '../dist/index.html'),   <span class=\"comment\">// 编译注入的 index.html 文件,必须是本地的绝对路径</span></span><br><span class=\"line\">    assetsRoot: path.resolve(__dirname, '../dist'),   <span class=\"comment\">// 编译输出的静态资源根路径</span></span><br><span class=\"line\">    assetsSubDirectory: '<span class=\"keyword\">static</span>',    <span class=\"comment\">// 编译输出的二级目录</span></span><br><span class=\"line\">    assetsPublicPath: '/',    <span class=\"comment\">// 编译发布上线路径的根目录，可配置为资源服务器域名或 CDN 域名</span></span><br><span class=\"line\">    productionSourceMap: <span class=\"literal\">true</span>,    <span class=\"comment\">//生成用于生产构建的源映射</span></span><br><span class=\"line\">    <span class=\"comment\">// https://webpack.js.org/configuration/devtool/#production</span></span><br><span class=\"line\">    devtool: '#source-<span class=\"built_in\">map</span>',</span><br><span class=\"line\">    <span class=\"comment\">// Gzip off by default as many popular static hosts such as</span></span><br><span class=\"line\">    <span class=\"comment\">// Surge or Netlify already gzip all static assets for you.</span></span><br><span class=\"line\">    <span class=\"comment\">// Before setting to `true`, make sure to:</span></span><br><span class=\"line\">    <span class=\"comment\">// npm install --save-dev compression-webpack-plugin</span></span><br><span class=\"line\">    productionGzip: <span class=\"literal\">false</span>,    <span class=\"comment\">// 是否开启 gzip</span></span><br><span class=\"line\">    productionGzipExtensions: ['js', 'css'],    <span class=\"comment\">// 需要使用 gzip 压缩的文件扩展名</span></span><br><span class=\"line\">    <span class=\"comment\">// Run the build command with an extra argument to</span></span><br><span class=\"line\">    <span class=\"comment\">// View the bundle analyzer report after build finishes:</span></span><br><span class=\"line\">    <span class=\"comment\">// `npm run build --report`</span></span><br><span class=\"line\">    <span class=\"comment\">// Set to `true` or `false` to always turn it on or off</span></span><br><span class=\"line\">    bundleAnalyzerReport: process.env.npm_config_report    <span class=\"comment\">//一个实用工具,用于分析项目的依赖关系https://www.npmjs.com/package/webpack-bundle-analyzer</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//开发环境</span></span><br><span class=\"line\">  dev: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Paths</span></span><br><span class=\"line\">    assetsSubDirectory: '<span class=\"keyword\">static</span>',</span><br><span class=\"line\">    assetsPublicPath: '/',</span><br><span class=\"line\">    proxyTable: &#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    env: require('./dev.env'),    <span class=\"comment\">// 使用 config/dev.env.js 中定义的编译环境</span></span><br><span class=\"line\">    port: <span class=\"number\">8081</span>,    <span class=\"comment\">// 运行测试页面的端口</span></span><br><span class=\"line\">    autoOpenBrowser: <span class=\"literal\">true</span>,    <span class=\"comment\">//是否自动打开浏览器</span></span><br><span class=\"line\">    assetsSubDirectory: '<span class=\"keyword\">static</span>',    <span class=\"comment\">// 编译输出的二级目录</span></span><br><span class=\"line\">    assetsPublicPath: '/',    <span class=\"comment\">// 编译发布上线路径的根目录，可配置为资源服务器域名或 CDN 域名</span></span><br><span class=\"line\">    proxyTable: &#123;</span><br><span class=\"line\">        <span class=\"comment\">//https://github.com/chimurai/http-proxy-middleware,配置方式</span></span><br><span class=\"line\">    &#125;,    <span class=\"comment\">// 需要 proxyTable 代理的接口（可跨域）http://vuejs-templates.github.io/webpack/proxy.html</span></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Source Maps</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"comment\">// https://webpack.js.org/configuration/devtool/#development</span></span><br><span class=\"line\">    devtool: 'cheap-module-eval-source-<span class=\"built_in\">map</span>',</span><br><span class=\"line\">    <span class=\"comment\">// If you have problems debugging vue-files in devtools,</span></span><br><span class=\"line\">    <span class=\"comment\">// set this to false - it *may* help</span></span><br><span class=\"line\">    <span class=\"comment\">// https://vue-loader.vuejs.org/en/options.html#cachebusting</span></span><br><span class=\"line\">    cacheBusting: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    cssSourceMap: <span class=\"literal\">true</span>   <span class=\"comment\">// 是否开启 cssSourceMap</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://element-cn.eleme.io/#/zh-CN\" target=\"_blank\" rel=\"noopener\">Element UI</a></li>\n<li><a href=\"https://blog.csdn.net/Fabulous1111/article/details/79388403\" target=\"_blank\" rel=\"noopener\">Vue项目目录结构注解附assets与static目录的区别</a></li>\n<li><a href=\"https://blog.csdn.net/air_hjj/article/details/77374920\" target=\"_blank\" rel=\"noopener\">Vue-webpack项目配置详解</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>替换老技术ext.js，故而用<a href=\"http://element-cn.eleme.io/#/zh-CN/component/installation\" target=\"_blank\" rel=\"noopener\">Element UI</a>。</p>\n<p>node安装（npm跟node是配套的，无须单独安装），去<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">官网</a>下载安装就行。如果你已经有了，但是版本低了，需要升级，可以参考<a href=\"https://www.jianshu.com/p/c46a45d177cb\" target=\"_blank\" rel=\"noopener\">此文</a>。<br><strong>Vue + Element UI 的项目搭建有两种方式：</strong><br>","more":"</p>\n<h2 id=\"一、直接用-Element-的项目模板\"><a href=\"#一、直接用-Element-的项目模板\" class=\"headerlink\" title=\"一、直接用 Element 的项目模板\"></a>一、直接用 Element 的项目模板</h2><p>Element 脚手架方式，<a href=\"https://github.com/ElementUI/element-starter\" target=\"_blank\" rel=\"noopener\">点此去</a>：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 克隆项目 </span><br><span class=\"line\">$ git clone https:<span class=\"comment\">//github.com/ElementUI/element-starter.git</span></span><br><span class=\"line\"># 查看目录</span><br><span class=\"line\">$ ls</span><br><span class=\"line\"># 进入项目目录</span><br><span class=\"line\">$ cd element-starter</span><br><span class=\"line\"># 安装相关依赖包</span><br><span class=\"line\">$ yarn</span><br><span class=\"line\"># 运行</span><br><span class=\"line\">$ npm run dev</span><br><span class=\"line\"># 打包压缩</span><br><span class=\"line\">$ npm run build</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"二、先搭建Vue项目，再引入Element-UI\"><a href=\"#二、先搭建Vue项目，再引入Element-UI\" class=\"headerlink\" title=\"二、先搭建Vue项目，再引入Element UI\"></a>二、先搭建Vue项目，再引入Element UI</h2><p>注：<br>1、查看 node,npm,vue,webpack 版本：<code>xx -v</code>，命令不对是，用<code>xx -help</code>查看相关命令。比如：<code>node -v</code>，<code>node -help</code>。（特例：vue 查看版本 <code>vue -V</code>）<br>2、需要再多个项目用的的用全局安装   <code>npm install xx -g 或 --global</code>，只是某个项目里用到的，进入该项目目录，再安装 <code>npm install xx   --save-dev 或 -D</code>。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装node和npm（直接用的官网的安装文件安装的），查看一下版本号可以确认安装成功</span><br><span class=\"line\">$ node -v</span><br><span class=\"line\">$ npm -v</span><br><span class=\"line\"># 安装vue，查看版本 vue -<span class=\"type\">V</span></span><br><span class=\"line\">$ npm install vue@<span class=\"number\">2.5</span>.<span class=\"number\">2</span> -g</span><br><span class=\"line\"># 全局安装 vue-cli</span><br><span class=\"line\">$ npm install vue-cli -g</span><br><span class=\"line\"># 安装webpack</span><br><span class=\"line\">$ npm install webpack -g</span><br><span class=\"line\"># 创建一个基于 webpack 模板的新项目my-project</span><br><span class=\"line\">$ vue <span class=\"keyword\">init</span> webpack my-project</span><br><span class=\"line\"># 进入项目目录</span><br><span class=\"line\">$ cd my-project</span><br><span class=\"line\"># 安装依赖，走你</span><br><span class=\"line\">$ npm install <span class=\"type\">XX</span></span><br><span class=\"line\"># 运行项目</span><br><span class=\"line\">$ npm run dev</span><br><span class=\"line\"># 打包项目</span><br><span class=\"line\">$ npm run build</span><br><span class=\"line\"># 到此，vue的脚手架项目创建完成</span><br><span class=\"line\"># 再引入element ui相关东西（i: install, -<span class=\"type\">D</span>: --save -dev）：</span><br><span class=\"line\">$ npm i element-ui@<span class=\"number\">2.3</span>.<span class=\"number\">6</span> -<span class=\"type\">D</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"相关目录情况\"><a href=\"#相关目录情况\" class=\"headerlink\" title=\"相关目录情况\"></a>相关目录情况</h2><p>项目创建完后的相关目录介绍如下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-7036af73aa0a1ea9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"20180227145151434.png\"></p>\n<p><strong>注意：</strong></p>\n<h3 id=\"assets和static目录：\"><a href=\"#assets和static目录：\" class=\"headerlink\" title=\"assets和static目录：\"></a>assets和static目录：</h3><p>assets存相对路径用的图片，会打包进js里，不方便更换图片，如logo,导航的背景图和icon等等。<br>static存绝对路径用的图片，可随时更换，如商品图片和产品图片等等。<br>做了一个小测试：同时在两个目录下,放入同名的css和图片。在打包后，css不会有影响，因为命令不同，图片最终会被static覆盖。看下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-7641e610d28c2900.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"assets-static.png\"></p>\n<h3 id=\"index-js配置文件比较重要，需要熟悉里面的每项配置。\"><a href=\"#index-js配置文件比较重要，需要熟悉里面的每项配置。\" class=\"headerlink\" title=\"index.js配置文件比较重要，需要熟悉里面的每项配置。\"></a>index.js配置文件比较重要，需要熟悉里面的每项配置。</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// see http://vuejs-templates.github.io/webpack for documentation.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = require('path')<span class=\"comment\">//使用Node自带的文件路径插件</span></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">//生产环境配置</span></span><br><span class=\"line\">  build: &#123;</span><br><span class=\"line\">     <span class=\"comment\">//http://vuejs-templates.github.io/webpack/backend.html</span></span><br><span class=\"line\">    <span class=\"comment\">// 使用 config/prod.env.js 中定义的编译环境</span></span><br><span class=\"line\">    env: require('./prod.env'),</span><br><span class=\"line\">    index: path.resolve(__dirname, '../dist/index.html'),   <span class=\"comment\">// 编译注入的 index.html 文件,必须是本地的绝对路径</span></span><br><span class=\"line\">    assetsRoot: path.resolve(__dirname, '../dist'),   <span class=\"comment\">// 编译输出的静态资源根路径</span></span><br><span class=\"line\">    assetsSubDirectory: '<span class=\"keyword\">static</span>',    <span class=\"comment\">// 编译输出的二级目录</span></span><br><span class=\"line\">    assetsPublicPath: '/',    <span class=\"comment\">// 编译发布上线路径的根目录，可配置为资源服务器域名或 CDN 域名</span></span><br><span class=\"line\">    productionSourceMap: <span class=\"literal\">true</span>,    <span class=\"comment\">//生成用于生产构建的源映射</span></span><br><span class=\"line\">    <span class=\"comment\">// https://webpack.js.org/configuration/devtool/#production</span></span><br><span class=\"line\">    devtool: '#source-<span class=\"built_in\">map</span>',</span><br><span class=\"line\">    <span class=\"comment\">// Gzip off by default as many popular static hosts such as</span></span><br><span class=\"line\">    <span class=\"comment\">// Surge or Netlify already gzip all static assets for you.</span></span><br><span class=\"line\">    <span class=\"comment\">// Before setting to `true`, make sure to:</span></span><br><span class=\"line\">    <span class=\"comment\">// npm install --save-dev compression-webpack-plugin</span></span><br><span class=\"line\">    productionGzip: <span class=\"literal\">false</span>,    <span class=\"comment\">// 是否开启 gzip</span></span><br><span class=\"line\">    productionGzipExtensions: ['js', 'css'],    <span class=\"comment\">// 需要使用 gzip 压缩的文件扩展名</span></span><br><span class=\"line\">    <span class=\"comment\">// Run the build command with an extra argument to</span></span><br><span class=\"line\">    <span class=\"comment\">// View the bundle analyzer report after build finishes:</span></span><br><span class=\"line\">    <span class=\"comment\">// `npm run build --report`</span></span><br><span class=\"line\">    <span class=\"comment\">// Set to `true` or `false` to always turn it on or off</span></span><br><span class=\"line\">    bundleAnalyzerReport: process.env.npm_config_report    <span class=\"comment\">//一个实用工具,用于分析项目的依赖关系https://www.npmjs.com/package/webpack-bundle-analyzer</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//开发环境</span></span><br><span class=\"line\">  dev: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Paths</span></span><br><span class=\"line\">    assetsSubDirectory: '<span class=\"keyword\">static</span>',</span><br><span class=\"line\">    assetsPublicPath: '/',</span><br><span class=\"line\">    proxyTable: &#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    env: require('./dev.env'),    <span class=\"comment\">// 使用 config/dev.env.js 中定义的编译环境</span></span><br><span class=\"line\">    port: <span class=\"number\">8081</span>,    <span class=\"comment\">// 运行测试页面的端口</span></span><br><span class=\"line\">    autoOpenBrowser: <span class=\"literal\">true</span>,    <span class=\"comment\">//是否自动打开浏览器</span></span><br><span class=\"line\">    assetsSubDirectory: '<span class=\"keyword\">static</span>',    <span class=\"comment\">// 编译输出的二级目录</span></span><br><span class=\"line\">    assetsPublicPath: '/',    <span class=\"comment\">// 编译发布上线路径的根目录，可配置为资源服务器域名或 CDN 域名</span></span><br><span class=\"line\">    proxyTable: &#123;</span><br><span class=\"line\">        <span class=\"comment\">//https://github.com/chimurai/http-proxy-middleware,配置方式</span></span><br><span class=\"line\">    &#125;,    <span class=\"comment\">// 需要 proxyTable 代理的接口（可跨域）http://vuejs-templates.github.io/webpack/proxy.html</span></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Source Maps</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"comment\">// https://webpack.js.org/configuration/devtool/#development</span></span><br><span class=\"line\">    devtool: 'cheap-module-eval-source-<span class=\"built_in\">map</span>',</span><br><span class=\"line\">    <span class=\"comment\">// If you have problems debugging vue-files in devtools,</span></span><br><span class=\"line\">    <span class=\"comment\">// set this to false - it *may* help</span></span><br><span class=\"line\">    <span class=\"comment\">// https://vue-loader.vuejs.org/en/options.html#cachebusting</span></span><br><span class=\"line\">    cacheBusting: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    cssSourceMap: <span class=\"literal\">true</span>   <span class=\"comment\">// 是否开启 cssSourceMap</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://element-cn.eleme.io/#/zh-CN\" target=\"_blank\" rel=\"noopener\">Element UI</a></li>\n<li><a href=\"https://blog.csdn.net/Fabulous1111/article/details/79388403\" target=\"_blank\" rel=\"noopener\">Vue项目目录结构注解附assets与static目录的区别</a></li>\n<li><a href=\"https://blog.csdn.net/air_hjj/article/details/77374920\" target=\"_blank\" rel=\"noopener\">Vue-webpack项目配置详解</a></li>\n</ul>"},{"layout":"pages","title":"vue+element ui 之二：开发配置 webstorm","date":"2018-05-06T07:22:00.000Z","_content":"\n## 浏览器插件安装\nchrome浏览器：Vue.js devtools插件，去应用商店装上此插件。然后找到此插件对应的 manifest.json（用everything搜或磁盘搜索，当搜出多个目录下的 manifest.json 文件时，根据插件的标签签名（如nhdogjmejiglipccpnnnanhbledajbpd）或安装时间（如2018/4/27）可以找到），将`\"persistent\": false,`改为`\"persistent\": true,`。如下图：\n![manifest.json.png](https://upload-images.jianshu.io/upload_images/1464420-4dbf647ae5e49f3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## webstorm相关配置\n* 添加vue插件: vue.js\n![1.png](https://upload-images.jianshu.io/upload_images/1464420-652fd98934d1dd5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n* 设置js版本：es6\n![2.png](https://upload-images.jianshu.io/upload_images/1464420-4b2304cf931c3152.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n* 添加vue.js文件模版\n![3.png](https://upload-images.jianshu.io/upload_images/1464420-00d5ec6c639a353c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n* 配置babel（类似sass）：es6 转 es5\n安装：`$ npm install -g babel`\n配置：\n![4.png](https://upload-images.jianshu.io/upload_images/1464420-ccd019fc8fcac030.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n* webstorm内存配置：bin目录下WebStorm.exe.vmoptions和WebStorm64.exe.vmoptions两个文件，修改如下(-Xms和-Xmx配置)：\n```swift\n-server\n-Xms512m\n-Xmx1024m\n-XX:ReservedCodeCacheSize=240m\n-XX:+UseConcMarkSweepGC\n-XX:SoftRefLRUPolicyMSPerMB=50\n-ea\n-Dsun.io.useCanonCaches=false\n-Djava.net.preferIPv4Stack=true\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:-OmitStackTraceInFastThrow\n```\n（ps：这里-Xms最大值不能超过1024，否则webstorm将无法打开）\n* 开发调试配置npm（或者node或[JavaScript debug](http://www.jb51.net/article/115478.htm)）\n![5.png](https://upload-images.jianshu.io/upload_images/1464420-a6c5681baa9c08f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 参考\n* [利用webstrom调试Vue.js单页面程序的方法教程](http://www.jb51.net/article/115478.htm)\n* [webstorm创建和调试vue项目](https://blog.csdn.net/wm5920/article/details/78872548)\n* [解决webstorm卡顿问题](https://blog.csdn.net/qq673318522/article/details/50583831/)\n* [vue开发环境搭建（WebStorm）](https://blog.csdn.net/nero__a/article/details/62228646)\n* [webstorm 设置ES6语法支持以及添加vuejs开发配置](https://blog.csdn.net/diligentkong/article/details/75040651)\n* [webstorm开发vue，进行一些配置](https://blog.csdn.net/s8460049/article/details/53856534)\n* [Vue.js devtools：调试vue.js应用的浏览器扩展 Chrome插件图文教程](http://www.cnplugins.com/devtool/vuejs-devtools/)\n","source":"_posts/vue-element-02.md","raw":"---\nlayout: pages\ntitle: vue+element ui 之二：开发配置 webstorm\ndate: 2018-05-06 15:22:00\ncategories:\n- Vue2\ntags:\n- Vue2\n- Element\n- webstorm\n---\n\n## 浏览器插件安装\nchrome浏览器：Vue.js devtools插件，去应用商店装上此插件。然后找到此插件对应的 manifest.json（用everything搜或磁盘搜索，当搜出多个目录下的 manifest.json 文件时，根据插件的标签签名（如nhdogjmejiglipccpnnnanhbledajbpd）或安装时间（如2018/4/27）可以找到），将`\"persistent\": false,`改为`\"persistent\": true,`。如下图：\n![manifest.json.png](https://upload-images.jianshu.io/upload_images/1464420-4dbf647ae5e49f3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## webstorm相关配置\n* 添加vue插件: vue.js\n![1.png](https://upload-images.jianshu.io/upload_images/1464420-652fd98934d1dd5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n* 设置js版本：es6\n![2.png](https://upload-images.jianshu.io/upload_images/1464420-4b2304cf931c3152.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n* 添加vue.js文件模版\n![3.png](https://upload-images.jianshu.io/upload_images/1464420-00d5ec6c639a353c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n* 配置babel（类似sass）：es6 转 es5\n安装：`$ npm install -g babel`\n配置：\n![4.png](https://upload-images.jianshu.io/upload_images/1464420-ccd019fc8fcac030.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n* webstorm内存配置：bin目录下WebStorm.exe.vmoptions和WebStorm64.exe.vmoptions两个文件，修改如下(-Xms和-Xmx配置)：\n```swift\n-server\n-Xms512m\n-Xmx1024m\n-XX:ReservedCodeCacheSize=240m\n-XX:+UseConcMarkSweepGC\n-XX:SoftRefLRUPolicyMSPerMB=50\n-ea\n-Dsun.io.useCanonCaches=false\n-Djava.net.preferIPv4Stack=true\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:-OmitStackTraceInFastThrow\n```\n（ps：这里-Xms最大值不能超过1024，否则webstorm将无法打开）\n* 开发调试配置npm（或者node或[JavaScript debug](http://www.jb51.net/article/115478.htm)）\n![5.png](https://upload-images.jianshu.io/upload_images/1464420-a6c5681baa9c08f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 参考\n* [利用webstrom调试Vue.js单页面程序的方法教程](http://www.jb51.net/article/115478.htm)\n* [webstorm创建和调试vue项目](https://blog.csdn.net/wm5920/article/details/78872548)\n* [解决webstorm卡顿问题](https://blog.csdn.net/qq673318522/article/details/50583831/)\n* [vue开发环境搭建（WebStorm）](https://blog.csdn.net/nero__a/article/details/62228646)\n* [webstorm 设置ES6语法支持以及添加vuejs开发配置](https://blog.csdn.net/diligentkong/article/details/75040651)\n* [webstorm开发vue，进行一些配置](https://blog.csdn.net/s8460049/article/details/53856534)\n* [Vue.js devtools：调试vue.js应用的浏览器扩展 Chrome插件图文教程](http://www.cnplugins.com/devtool/vuejs-devtools/)\n","slug":"vue-element-02","published":1,"updated":"2018-05-29T09:28:34.353Z","comments":1,"photos":[],"link":"","_id":"cji0ejm5u002dg4l12oyl96md","content":"<h2 id=\"浏览器插件安装\"><a href=\"#浏览器插件安装\" class=\"headerlink\" title=\"浏览器插件安装\"></a>浏览器插件安装</h2><p>chrome浏览器：Vue.js devtools插件，去应用商店装上此插件。然后找到此插件对应的 manifest.json（用everything搜或磁盘搜索，当搜出多个目录下的 manifest.json 文件时，根据插件的标签签名（如nhdogjmejiglipccpnnnanhbledajbpd）或安装时间（如2018/4/27）可以找到），将<code>&quot;persistent&quot;: false,</code>改为<code>&quot;persistent&quot;: true,</code>。如下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-4dbf647ae5e49f3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"manifest.json.png\"></p>\n<h2 id=\"webstorm相关配置\"><a href=\"#webstorm相关配置\" class=\"headerlink\" title=\"webstorm相关配置\"></a>webstorm相关配置</h2><ul>\n<li>添加vue插件: vue.js<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-652fd98934d1dd5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></li>\n<li>设置js版本：es6<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-4b2304cf931c3152.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"2.png\"></li>\n<li>添加vue.js文件模版<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-00d5ec6c639a353c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"3.png\"></li>\n<li>配置babel（类似sass）：es6 转 es5<br>安装：<code>$ npm install -g babel</code><br>配置：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-ccd019fc8fcac030.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"4.png\"></li>\n<li>webstorm内存配置：bin目录下WebStorm.exe.vmoptions和WebStorm64.exe.vmoptions两个文件，修改如下(-Xms和-Xmx配置)：<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-server</span><br><span class=\"line\">-<span class=\"type\">Xms512m</span></span><br><span class=\"line\">-<span class=\"type\">Xmx1024m</span></span><br><span class=\"line\">-<span class=\"type\">XX</span>:<span class=\"type\">ReservedCodeCacheSize</span>=240m</span><br><span class=\"line\">-<span class=\"type\">XX</span>:+<span class=\"type\">UseConcMarkSweepGC</span></span><br><span class=\"line\">-<span class=\"type\">XX</span>:<span class=\"type\">SoftRefLRUPolicyMSPerMB</span>=<span class=\"number\">50</span></span><br><span class=\"line\">-ea</span><br><span class=\"line\">-<span class=\"type\">Dsun</span>.io.useCanonCaches=<span class=\"literal\">false</span></span><br><span class=\"line\">-<span class=\"type\">Djava</span>.net.preferIPv4Stack=<span class=\"literal\">true</span></span><br><span class=\"line\">-<span class=\"type\">XX</span>:+<span class=\"type\">HeapDumpOnOutOfMemoryError</span></span><br><span class=\"line\">-<span class=\"type\">XX</span>:-<span class=\"type\">OmitStackTraceInFastThrow</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>（ps：这里-Xms最大值不能超过1024，否则webstorm将无法打开）</p>\n<ul>\n<li>开发调试配置npm（或者node或<a href=\"http://www.jb51.net/article/115478.htm\" target=\"_blank\" rel=\"noopener\">JavaScript debug</a>）<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-a6c5681baa9c08f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"5.png\"></li>\n</ul>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"http://www.jb51.net/article/115478.htm\" target=\"_blank\" rel=\"noopener\">利用webstrom调试Vue.js单页面程序的方法教程</a></li>\n<li><a href=\"https://blog.csdn.net/wm5920/article/details/78872548\" target=\"_blank\" rel=\"noopener\">webstorm创建和调试vue项目</a></li>\n<li><a href=\"https://blog.csdn.net/qq673318522/article/details/50583831/\" target=\"_blank\" rel=\"noopener\">解决webstorm卡顿问题</a></li>\n<li><a href=\"https://blog.csdn.net/nero__a/article/details/62228646\" target=\"_blank\" rel=\"noopener\">vue开发环境搭建（WebStorm）</a></li>\n<li><a href=\"https://blog.csdn.net/diligentkong/article/details/75040651\" target=\"_blank\" rel=\"noopener\">webstorm 设置ES6语法支持以及添加vuejs开发配置</a></li>\n<li><a href=\"https://blog.csdn.net/s8460049/article/details/53856534\" target=\"_blank\" rel=\"noopener\">webstorm开发vue，进行一些配置</a></li>\n<li><a href=\"http://www.cnplugins.com/devtool/vuejs-devtools/\" target=\"_blank\" rel=\"noopener\">Vue.js devtools：调试vue.js应用的浏览器扩展 Chrome插件图文教程</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"浏览器插件安装\"><a href=\"#浏览器插件安装\" class=\"headerlink\" title=\"浏览器插件安装\"></a>浏览器插件安装</h2><p>chrome浏览器：Vue.js devtools插件，去应用商店装上此插件。然后找到此插件对应的 manifest.json（用everything搜或磁盘搜索，当搜出多个目录下的 manifest.json 文件时，根据插件的标签签名（如nhdogjmejiglipccpnnnanhbledajbpd）或安装时间（如2018/4/27）可以找到），将<code>&quot;persistent&quot;: false,</code>改为<code>&quot;persistent&quot;: true,</code>。如下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-4dbf647ae5e49f3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"manifest.json.png\"></p>\n<h2 id=\"webstorm相关配置\"><a href=\"#webstorm相关配置\" class=\"headerlink\" title=\"webstorm相关配置\"></a>webstorm相关配置</h2><ul>\n<li>添加vue插件: vue.js<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-652fd98934d1dd5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></li>\n<li>设置js版本：es6<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-4b2304cf931c3152.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"2.png\"></li>\n<li>添加vue.js文件模版<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-00d5ec6c639a353c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"3.png\"></li>\n<li>配置babel（类似sass）：es6 转 es5<br>安装：<code>$ npm install -g babel</code><br>配置：<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-ccd019fc8fcac030.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"4.png\"></li>\n<li>webstorm内存配置：bin目录下WebStorm.exe.vmoptions和WebStorm64.exe.vmoptions两个文件，修改如下(-Xms和-Xmx配置)：<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-server</span><br><span class=\"line\">-<span class=\"type\">Xms512m</span></span><br><span class=\"line\">-<span class=\"type\">Xmx1024m</span></span><br><span class=\"line\">-<span class=\"type\">XX</span>:<span class=\"type\">ReservedCodeCacheSize</span>=240m</span><br><span class=\"line\">-<span class=\"type\">XX</span>:+<span class=\"type\">UseConcMarkSweepGC</span></span><br><span class=\"line\">-<span class=\"type\">XX</span>:<span class=\"type\">SoftRefLRUPolicyMSPerMB</span>=<span class=\"number\">50</span></span><br><span class=\"line\">-ea</span><br><span class=\"line\">-<span class=\"type\">Dsun</span>.io.useCanonCaches=<span class=\"literal\">false</span></span><br><span class=\"line\">-<span class=\"type\">Djava</span>.net.preferIPv4Stack=<span class=\"literal\">true</span></span><br><span class=\"line\">-<span class=\"type\">XX</span>:+<span class=\"type\">HeapDumpOnOutOfMemoryError</span></span><br><span class=\"line\">-<span class=\"type\">XX</span>:-<span class=\"type\">OmitStackTraceInFastThrow</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>（ps：这里-Xms最大值不能超过1024，否则webstorm将无法打开）</p>\n<ul>\n<li>开发调试配置npm（或者node或<a href=\"http://www.jb51.net/article/115478.htm\" target=\"_blank\" rel=\"noopener\">JavaScript debug</a>）<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-a6c5681baa9c08f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"5.png\"></li>\n</ul>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"http://www.jb51.net/article/115478.htm\" target=\"_blank\" rel=\"noopener\">利用webstrom调试Vue.js单页面程序的方法教程</a></li>\n<li><a href=\"https://blog.csdn.net/wm5920/article/details/78872548\" target=\"_blank\" rel=\"noopener\">webstorm创建和调试vue项目</a></li>\n<li><a href=\"https://blog.csdn.net/qq673318522/article/details/50583831/\" target=\"_blank\" rel=\"noopener\">解决webstorm卡顿问题</a></li>\n<li><a href=\"https://blog.csdn.net/nero__a/article/details/62228646\" target=\"_blank\" rel=\"noopener\">vue开发环境搭建（WebStorm）</a></li>\n<li><a href=\"https://blog.csdn.net/diligentkong/article/details/75040651\" target=\"_blank\" rel=\"noopener\">webstorm 设置ES6语法支持以及添加vuejs开发配置</a></li>\n<li><a href=\"https://blog.csdn.net/s8460049/article/details/53856534\" target=\"_blank\" rel=\"noopener\">webstorm开发vue，进行一些配置</a></li>\n<li><a href=\"http://www.cnplugins.com/devtool/vuejs-devtools/\" target=\"_blank\" rel=\"noopener\">Vue.js devtools：调试vue.js应用的浏览器扩展 Chrome插件图文教程</a></li>\n</ul>\n"},{"layout":"pages","title":"vue 使用预编译器 sass","date":"2018-06-04T06:30:00.000Z","_content":"\n在基于 webpack 项目模板创建的项目（`vue init webpack my-project`）中使用 sass。\n在 webpack 中，所有的预处理器需要匹配对应的 loader。vue-loader 允许你使用其它 webpack loader 处理 Vue 组件的某一部分。它会根据 lang 属性自动推断出要使用的 loader。\n<!-- more -->\n\n## sass 相关依赖包安装\n相关依赖包安装：\n\n```swift\nnpm install sass-loader node-sass --save-dev\n```\n\n## 使用\nsass 和 scss 语法不一样的，可以[参考此文档](http://sass.bootcss.com/docs/scss-for-sass-users/)。 下面列举 scss 版本的，对应的 sass 版本只需要将`lang=\"scss\"`改成`lang=\"sass\"`即可。\n\n页面内样式：\n\n```swift\n<style lang=\"scss\" scoped>\n  .sign {\n    height: 100%;\n    min-height: 750px;\n    text-align: center;\n    font-size: 14px;\n    background-color: #f1f1f1;\n    .tag {\n      display: inline-block;\n      height: 85%;\n      vertical-align: middle;\n    }\n  }\n</style>\n```\n\n引入样式文件：\n\n```swift\n<style lang=\"scss\" >\n  @import './assets/css/base.scss';\n\n  .demo {\t\t\n  }\n</style>\n```\n\n下面提供官方文档供参考和深入的配置：\n* [官方一：简单使用](http://vuejs-templates.github.io/webpack/pre-processors.html)\n* [官方二：深入的配置](https://vue-loader-v14.vuejs.org/zh-cn/configurations/pre-processors.html)\n\nps： 基于第二个文档，我配置过`sass-loader 警告`部分，总是报错。不配置这部分也能使用，后续解决了相关问题，再更新此文。\n","source":"_posts/vue-sass.md","raw":"---\nlayout: pages\ntitle: vue 使用预编译器 sass\ndate: 2018-06-04 14:30:00\ncategories:\n- vue\ntags:\n- vue\n- sass\n---\n\n在基于 webpack 项目模板创建的项目（`vue init webpack my-project`）中使用 sass。\n在 webpack 中，所有的预处理器需要匹配对应的 loader。vue-loader 允许你使用其它 webpack loader 处理 Vue 组件的某一部分。它会根据 lang 属性自动推断出要使用的 loader。\n<!-- more -->\n\n## sass 相关依赖包安装\n相关依赖包安装：\n\n```swift\nnpm install sass-loader node-sass --save-dev\n```\n\n## 使用\nsass 和 scss 语法不一样的，可以[参考此文档](http://sass.bootcss.com/docs/scss-for-sass-users/)。 下面列举 scss 版本的，对应的 sass 版本只需要将`lang=\"scss\"`改成`lang=\"sass\"`即可。\n\n页面内样式：\n\n```swift\n<style lang=\"scss\" scoped>\n  .sign {\n    height: 100%;\n    min-height: 750px;\n    text-align: center;\n    font-size: 14px;\n    background-color: #f1f1f1;\n    .tag {\n      display: inline-block;\n      height: 85%;\n      vertical-align: middle;\n    }\n  }\n</style>\n```\n\n引入样式文件：\n\n```swift\n<style lang=\"scss\" >\n  @import './assets/css/base.scss';\n\n  .demo {\t\t\n  }\n</style>\n```\n\n下面提供官方文档供参考和深入的配置：\n* [官方一：简单使用](http://vuejs-templates.github.io/webpack/pre-processors.html)\n* [官方二：深入的配置](https://vue-loader-v14.vuejs.org/zh-cn/configurations/pre-processors.html)\n\nps： 基于第二个文档，我配置过`sass-loader 警告`部分，总是报错。不配置这部分也能使用，后续解决了相关问题，再更新此文。\n","slug":"vue-sass","published":1,"updated":"2018-06-04T15:19:57.738Z","comments":1,"photos":[],"link":"","_id":"cji0ejm60002gg4l1waulsacj","content":"<p>在基于 webpack 项目模板创建的项目（<code>vue init webpack my-project</code>）中使用 sass。<br>在 webpack 中，所有的预处理器需要匹配对应的 loader。vue-loader 允许你使用其它 webpack loader 处理 Vue 组件的某一部分。它会根据 lang 属性自动推断出要使用的 loader。<br><a id=\"more\"></a></p>\n<h2 id=\"sass-相关依赖包安装\"><a href=\"#sass-相关依赖包安装\" class=\"headerlink\" title=\"sass 相关依赖包安装\"></a>sass 相关依赖包安装</h2><p>相关依赖包安装：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install sass-loader node-sass --save-dev</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>sass 和 scss 语法不一样的，可以<a href=\"http://sass.bootcss.com/docs/scss-for-sass-users/\" target=\"_blank\" rel=\"noopener\">参考此文档</a>。 下面列举 scss 版本的，对应的 sass 版本只需要将<code>lang=&quot;scss&quot;</code>改成<code>lang=&quot;sass&quot;</code>即可。</p>\n<p>页面内样式：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=<span class=\"string\">\"scss\"</span> scoped&gt;</span><br><span class=\"line\">  .sign &#123;</span><br><span class=\"line\">    height: <span class=\"number\">100</span>%;</span><br><span class=\"line\">    <span class=\"built_in\">min</span>-height: 750px;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    font-size: 14px;</span><br><span class=\"line\">    background-color: #f1f1f1;</span><br><span class=\"line\">    .tag &#123;</span><br><span class=\"line\">      display: inline-block;</span><br><span class=\"line\">      height: <span class=\"number\">85</span>%;</span><br><span class=\"line\">      vertical-align: middle;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>引入样式文件：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=<span class=\"string\">\"scss\"</span> &gt;</span><br><span class=\"line\">  @<span class=\"keyword\">import</span> './assets/css/base.scss';</span><br><span class=\"line\"></span><br><span class=\"line\">  .demo &#123;\t\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>下面提供官方文档供参考和深入的配置：</p>\n<ul>\n<li><a href=\"http://vuejs-templates.github.io/webpack/pre-processors.html\" target=\"_blank\" rel=\"noopener\">官方一：简单使用</a></li>\n<li><a href=\"https://vue-loader-v14.vuejs.org/zh-cn/configurations/pre-processors.html\" target=\"_blank\" rel=\"noopener\">官方二：深入的配置</a></li>\n</ul>\n<p>ps： 基于第二个文档，我配置过<code>sass-loader 警告</code>部分，总是报错。不配置这部分也能使用，后续解决了相关问题，再更新此文。</p>\n","site":{"data":{}},"excerpt":"<p>在基于 webpack 项目模板创建的项目（<code>vue init webpack my-project</code>）中使用 sass。<br>在 webpack 中，所有的预处理器需要匹配对应的 loader。vue-loader 允许你使用其它 webpack loader 处理 Vue 组件的某一部分。它会根据 lang 属性自动推断出要使用的 loader。<br>","more":"</p>\n<h2 id=\"sass-相关依赖包安装\"><a href=\"#sass-相关依赖包安装\" class=\"headerlink\" title=\"sass 相关依赖包安装\"></a>sass 相关依赖包安装</h2><p>相关依赖包安装：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install sass-loader node-sass --save-dev</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>sass 和 scss 语法不一样的，可以<a href=\"http://sass.bootcss.com/docs/scss-for-sass-users/\" target=\"_blank\" rel=\"noopener\">参考此文档</a>。 下面列举 scss 版本的，对应的 sass 版本只需要将<code>lang=&quot;scss&quot;</code>改成<code>lang=&quot;sass&quot;</code>即可。</p>\n<p>页面内样式：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=<span class=\"string\">\"scss\"</span> scoped&gt;</span><br><span class=\"line\">  .sign &#123;</span><br><span class=\"line\">    height: <span class=\"number\">100</span>%;</span><br><span class=\"line\">    <span class=\"built_in\">min</span>-height: 750px;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    font-size: 14px;</span><br><span class=\"line\">    background-color: #f1f1f1;</span><br><span class=\"line\">    .tag &#123;</span><br><span class=\"line\">      display: inline-block;</span><br><span class=\"line\">      height: <span class=\"number\">85</span>%;</span><br><span class=\"line\">      vertical-align: middle;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>引入样式文件：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=<span class=\"string\">\"scss\"</span> &gt;</span><br><span class=\"line\">  @<span class=\"keyword\">import</span> './assets/css/base.scss';</span><br><span class=\"line\"></span><br><span class=\"line\">  .demo &#123;\t\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>下面提供官方文档供参考和深入的配置：</p>\n<ul>\n<li><a href=\"http://vuejs-templates.github.io/webpack/pre-processors.html\" target=\"_blank\" rel=\"noopener\">官方一：简单使用</a></li>\n<li><a href=\"https://vue-loader-v14.vuejs.org/zh-cn/configurations/pre-processors.html\" target=\"_blank\" rel=\"noopener\">官方二：深入的配置</a></li>\n</ul>\n<p>ps： 基于第二个文档，我配置过<code>sass-loader 警告</code>部分，总是报错。不配置这部分也能使用，后续解决了相关问题，再更新此文。</p>"},{"layout":"pages","title":"Vue2 ：Mockjs 前端模拟假数据","date":"2018-05-19T04:22:00.000Z","_content":"\n在前后端分离的大环境下，前端需要后端的接口去完成页面的渲染，但是大部分的情况下,前后端需要同时进行开发，这种情况下,后端还没完成数据输出，前端只好写静态模拟数据。面临一些问题：数据太长了，将数据写在js文件里，完成后挨个改url；某些逻辑复杂的代码，加入或去除模拟数据时得小心翼翼；想要尽可能还原真实的数据，要么编写更多代码，要么手动修改模拟数据；特殊的格式，例如IP,随机数，图片，地址，需要去收集等等。\nMock.js 正是这样一款类库，可以帮我们模拟生成一堆数据，也能解决那些问题。\n<!-- more -->\n\n## 安装\n[mock官网](https://link.jianshu.com/?t=http://mockjs.com/)\nnpm安装：`npm install mockjs`\npackage文件中显示当前mockjs版本说明安装成功。\n*(也可以引入cdn：`<script src=\"http://mockjs.com/dist/mock.js\"></script>`)*\n\n## mockjs 文件\n在main.js同级下建立mock.js文件：\n```swift\n// 引入mockjs\nconst Mock = require('mockjs');\nconst qs = require('qs');\n// 获取 mock.Random 对象\nconst Random = Mock.Random;\n\n// 登录\nconst login = function() {\n  let status = false;//登录状态：ture--成功，false--失败\n  status = true;\n  return {\n    status: status\n  }\n}\n// 表格分页\nconst tblList = function(param) {\n  param = param.body || '';//获取传过来的参数\n  // console.log(qs.parse(param));//因为axios的post带参数被qs.stringfy()转换了，需要转回来。\n\tif(param == ''){\n\t  //无查询条件\n    let bookdata = Mock.mock({\n      'books|1-10': [{\n        'sid|+1': 1,\n        'date': '@date(\"yyyy-MM-dd\")',\n        'name': '@csentence()',\n        'address': '@county(true)',\n        'region': '双流区'\n      }]\n    });\n    // console.log(bookdata);\n    return bookdata;\n\n  }else{\n\t  //带查询条件\n    let paramObj = qs.parse(param);\n    console.log('input parameter：...');\n    console.log(paramObj);\n    let books = [];\n    for (let i = 0; i < 10; i++) {\n      let newBook = {\n        // thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码\n        date: Random.date(),\n        name: paramObj.name+Random.csentence(),\n        address: Random.county(true),\n        region: paramObj.region\n      }\n      books.push(newBook)\n    }\n    return {\n      books: books\n    }\n  }\n\n}\n//图书列表\nconst bookList = function(param) {\n  param = param.body || '';//获取传过来的参数\n  // console.log(qs.parse(param));\n  // 因为axios的post带参数被qs.stringfy()转换了，需要转回来。\n  let paramObj = qs.parse(param);\n  console.log(paramObj);\n  let nameInput = paramObj.name || '';\n  let books = [];\n  for (let i = 0; i < 10; i++) {\n    let temp = i+1;\n    let newBook = {\n      sid: temp,\n      // thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码\n      author: Random.name(2,4),\n      name: '《'+nameInput+Random.csentence()+\"》\",\n      publishAt: Random.date(),\n      description: Random.cparagraph()\n    }\n    books.push(newBook)\n  }\n  return {\n    books: books\n  }\n}\n//获取文件列表\nconst fileList = function (param) {\n  param = param.body || '';//获取传过来的参数\n  // console.log(qs.parse(param));\n  // 因为axios的post带参数被qs.stringfy()转换了，需要转回来。\n  let paramObj = qs.parse(param);\n  console.log(paramObj);\n  let files = [];\n  for (let i = 0; i < 3; i++) {\n    let newFile = {\n      name: paramObj.username + i +'.png',\n      url: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码\n    }\n    files.push(newFile)\n  }\n  return {\n    fileList: files\n  }\n}\n\n// Mock.mock( url, post/get , 返回的数据)；\nMock.mock('/mk_login', 'post', login);// 登录\nMock.mock('/mk_tbllist', 'post', tblList);// 表格分页\nMock.mock('/mk_booklist', 'post',bookList);// 图书列表\nMock.mock('/mk_fileupload', 'post',{});// 文件上传\nMock.mock('/mk_fetchFiles', 'post',fileList);// 获取文件列表\n```\n## main.js 引入mock\n在main.js中引入mock文件：\n` require('./mock'); `\n\n## 使用\nvue文件中访问该接口mock：\n*(调用的url接口和mock.js文件的Mock.mock( url, post/get , 返回的数据)的url接口一致，就能被mock拦截。)*\n```swift\napi.post('/mk_login', data)\n              .then(res => {\n                console.log(res.data);\n                if(res.data.status){\n                  // 登录成功\n                  this.setUserInfo2(data);\n                  this.$router.replace('/home');\n                }\n              })\n              .catch(error => {\n                console.log(\"login异常：\")\n                console.log(error)\n              })\n```\n\n#### 参考\n* [vue中mock.js使用](https://blog.csdn.net/hello_mujinhua/article/details/78426937)\n* [【Mock.js】前端模拟假数据，不用在手拼了](https://www.jianshu.com/p/8579b703a4c1)\n* [Mockjs,再也不用追着后端小伙伴要接口了](https://www.jianshu.com/p/dd23a6547114)\n* [使用Mock.js进行独立于后端的前端开发](https://segmentfault.com/a/1190000003087224)\n","source":"_posts/vue-mockjs.md","raw":"---\nlayout: pages\ntitle: Vue2 ：Mockjs 前端模拟假数据\ndate: 2018-05-19 12:22:00\ncategories:\n- Vue2\ntags:\n- Vue2\n- Mockjs\n---\n\n在前后端分离的大环境下，前端需要后端的接口去完成页面的渲染，但是大部分的情况下,前后端需要同时进行开发，这种情况下,后端还没完成数据输出，前端只好写静态模拟数据。面临一些问题：数据太长了，将数据写在js文件里，完成后挨个改url；某些逻辑复杂的代码，加入或去除模拟数据时得小心翼翼；想要尽可能还原真实的数据，要么编写更多代码，要么手动修改模拟数据；特殊的格式，例如IP,随机数，图片，地址，需要去收集等等。\nMock.js 正是这样一款类库，可以帮我们模拟生成一堆数据，也能解决那些问题。\n<!-- more -->\n\n## 安装\n[mock官网](https://link.jianshu.com/?t=http://mockjs.com/)\nnpm安装：`npm install mockjs`\npackage文件中显示当前mockjs版本说明安装成功。\n*(也可以引入cdn：`<script src=\"http://mockjs.com/dist/mock.js\"></script>`)*\n\n## mockjs 文件\n在main.js同级下建立mock.js文件：\n```swift\n// 引入mockjs\nconst Mock = require('mockjs');\nconst qs = require('qs');\n// 获取 mock.Random 对象\nconst Random = Mock.Random;\n\n// 登录\nconst login = function() {\n  let status = false;//登录状态：ture--成功，false--失败\n  status = true;\n  return {\n    status: status\n  }\n}\n// 表格分页\nconst tblList = function(param) {\n  param = param.body || '';//获取传过来的参数\n  // console.log(qs.parse(param));//因为axios的post带参数被qs.stringfy()转换了，需要转回来。\n\tif(param == ''){\n\t  //无查询条件\n    let bookdata = Mock.mock({\n      'books|1-10': [{\n        'sid|+1': 1,\n        'date': '@date(\"yyyy-MM-dd\")',\n        'name': '@csentence()',\n        'address': '@county(true)',\n        'region': '双流区'\n      }]\n    });\n    // console.log(bookdata);\n    return bookdata;\n\n  }else{\n\t  //带查询条件\n    let paramObj = qs.parse(param);\n    console.log('input parameter：...');\n    console.log(paramObj);\n    let books = [];\n    for (let i = 0; i < 10; i++) {\n      let newBook = {\n        // thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码\n        date: Random.date(),\n        name: paramObj.name+Random.csentence(),\n        address: Random.county(true),\n        region: paramObj.region\n      }\n      books.push(newBook)\n    }\n    return {\n      books: books\n    }\n  }\n\n}\n//图书列表\nconst bookList = function(param) {\n  param = param.body || '';//获取传过来的参数\n  // console.log(qs.parse(param));\n  // 因为axios的post带参数被qs.stringfy()转换了，需要转回来。\n  let paramObj = qs.parse(param);\n  console.log(paramObj);\n  let nameInput = paramObj.name || '';\n  let books = [];\n  for (let i = 0; i < 10; i++) {\n    let temp = i+1;\n    let newBook = {\n      sid: temp,\n      // thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码\n      author: Random.name(2,4),\n      name: '《'+nameInput+Random.csentence()+\"》\",\n      publishAt: Random.date(),\n      description: Random.cparagraph()\n    }\n    books.push(newBook)\n  }\n  return {\n    books: books\n  }\n}\n//获取文件列表\nconst fileList = function (param) {\n  param = param.body || '';//获取传过来的参数\n  // console.log(qs.parse(param));\n  // 因为axios的post带参数被qs.stringfy()转换了，需要转回来。\n  let paramObj = qs.parse(param);\n  console.log(paramObj);\n  let files = [];\n  for (let i = 0; i < 3; i++) {\n    let newFile = {\n      name: paramObj.username + i +'.png',\n      url: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码\n    }\n    files.push(newFile)\n  }\n  return {\n    fileList: files\n  }\n}\n\n// Mock.mock( url, post/get , 返回的数据)；\nMock.mock('/mk_login', 'post', login);// 登录\nMock.mock('/mk_tbllist', 'post', tblList);// 表格分页\nMock.mock('/mk_booklist', 'post',bookList);// 图书列表\nMock.mock('/mk_fileupload', 'post',{});// 文件上传\nMock.mock('/mk_fetchFiles', 'post',fileList);// 获取文件列表\n```\n## main.js 引入mock\n在main.js中引入mock文件：\n` require('./mock'); `\n\n## 使用\nvue文件中访问该接口mock：\n*(调用的url接口和mock.js文件的Mock.mock( url, post/get , 返回的数据)的url接口一致，就能被mock拦截。)*\n```swift\napi.post('/mk_login', data)\n              .then(res => {\n                console.log(res.data);\n                if(res.data.status){\n                  // 登录成功\n                  this.setUserInfo2(data);\n                  this.$router.replace('/home');\n                }\n              })\n              .catch(error => {\n                console.log(\"login异常：\")\n                console.log(error)\n              })\n```\n\n#### 参考\n* [vue中mock.js使用](https://blog.csdn.net/hello_mujinhua/article/details/78426937)\n* [【Mock.js】前端模拟假数据，不用在手拼了](https://www.jianshu.com/p/8579b703a4c1)\n* [Mockjs,再也不用追着后端小伙伴要接口了](https://www.jianshu.com/p/dd23a6547114)\n* [使用Mock.js进行独立于后端的前端开发](https://segmentfault.com/a/1190000003087224)\n","slug":"vue-mockjs","published":1,"updated":"2018-05-29T09:17:39.952Z","comments":1,"photos":[],"link":"","_id":"cji0ejm64002ig4l17w46nh1l","content":"<p>在前后端分离的大环境下，前端需要后端的接口去完成页面的渲染，但是大部分的情况下,前后端需要同时进行开发，这种情况下,后端还没完成数据输出，前端只好写静态模拟数据。面临一些问题：数据太长了，将数据写在js文件里，完成后挨个改url；某些逻辑复杂的代码，加入或去除模拟数据时得小心翼翼；想要尽可能还原真实的数据，要么编写更多代码，要么手动修改模拟数据；特殊的格式，例如IP,随机数，图片，地址，需要去收集等等。<br>Mock.js 正是这样一款类库，可以帮我们模拟生成一堆数据，也能解决那些问题。<br><a id=\"more\"></a></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p><a href=\"https://link.jianshu.com/?t=http://mockjs.com/\" target=\"_blank\" rel=\"noopener\">mock官网</a><br>npm安装：<code>npm install mockjs</code><br>package文件中显示当前mockjs版本说明安装成功。<br><em>(也可以引入cdn：<code>&lt;script src=&quot;http://mockjs.com/dist/mock.js&quot;&gt;&lt;/script&gt;</code>)</em></p>\n<h2 id=\"mockjs-文件\"><a href=\"#mockjs-文件\" class=\"headerlink\" title=\"mockjs 文件\"></a>mockjs 文件</h2><p>在main.js同级下建立mock.js文件：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入mockjs</span></span><br><span class=\"line\">const <span class=\"type\">Mock</span> = require('mockjs');</span><br><span class=\"line\">const qs = require('qs');</span><br><span class=\"line\"><span class=\"comment\">// 获取 mock.Random 对象</span></span><br><span class=\"line\">const <span class=\"type\">Random</span> = <span class=\"type\">Mock</span>.<span class=\"type\">Random</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 登录</span></span><br><span class=\"line\">const login = function() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> status = <span class=\"literal\">false</span>;<span class=\"comment\">//登录状态：ture--成功，false--失败</span></span><br><span class=\"line\">  status = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    status: status</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 表格分页</span></span><br><span class=\"line\">const tblList = function(param) &#123;</span><br><span class=\"line\">  param = param.body || '';<span class=\"comment\">//获取传过来的参数</span></span><br><span class=\"line\">  <span class=\"comment\">// console.log(qs.parse(param));//因为axios的post带参数被qs.stringfy()转换了，需要转回来。</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(param == '')&#123;</span><br><span class=\"line\">\t  <span class=\"comment\">//无查询条件</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> bookdata = <span class=\"type\">Mock</span>.mock(&#123;</span><br><span class=\"line\">      'books|<span class=\"number\">1</span>-<span class=\"number\">10</span>': [&#123;</span><br><span class=\"line\">        'sid|+<span class=\"number\">1</span>': <span class=\"number\">1</span>,</span><br><span class=\"line\">        'date': '@date(<span class=\"string\">\"yyyy-MM-dd\"</span>)',</span><br><span class=\"line\">        'name': '@csentence()',</span><br><span class=\"line\">        'address': '@county(<span class=\"literal\">true</span>)',</span><br><span class=\"line\">        'region': '双流区'</span><br><span class=\"line\">      &#125;]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// console.log(bookdata);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> bookdata;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t  <span class=\"comment\">//带查询条件</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> paramObj = qs.parse(param);</span><br><span class=\"line\">    console.log('input parameter：...');</span><br><span class=\"line\">    console.log(paramObj);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> books = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> newBook = &#123;</span><br><span class=\"line\">        <span class=\"comment\">// thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码</span></span><br><span class=\"line\">        date: <span class=\"type\">Random</span>.date(),</span><br><span class=\"line\">        name: paramObj.name+<span class=\"type\">Random</span>.csentence(),</span><br><span class=\"line\">        address: <span class=\"type\">Random</span>.county(<span class=\"literal\">true</span>),</span><br><span class=\"line\">        region: paramObj.region</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      books.push(newBook)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      books: books</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//图书列表</span></span><br><span class=\"line\">const bookList = function(param) &#123;</span><br><span class=\"line\">  param = param.body || '';<span class=\"comment\">//获取传过来的参数</span></span><br><span class=\"line\">  <span class=\"comment\">// console.log(qs.parse(param));</span></span><br><span class=\"line\">  <span class=\"comment\">// 因为axios的post带参数被qs.stringfy()转换了，需要转回来。</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> paramObj = qs.parse(param);</span><br><span class=\"line\">  console.log(paramObj);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> nameInput = paramObj.name || '';</span><br><span class=\"line\">  <span class=\"keyword\">let</span> books = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newBook = &#123;</span><br><span class=\"line\">      sid: temp,</span><br><span class=\"line\">      <span class=\"comment\">// thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码</span></span><br><span class=\"line\">      author: <span class=\"type\">Random</span>.name(<span class=\"number\">2</span>,<span class=\"number\">4</span>),</span><br><span class=\"line\">      name: '《'+nameInput+<span class=\"type\">Random</span>.csentence()+<span class=\"string\">\"》\"</span>,</span><br><span class=\"line\">      publishAt: <span class=\"type\">Random</span>.date(),</span><br><span class=\"line\">      description: <span class=\"type\">Random</span>.cparagraph()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    books.push(newBook)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    books: books</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//获取文件列表</span></span><br><span class=\"line\">const fileList = function (param) &#123;</span><br><span class=\"line\">  param = param.body || '';<span class=\"comment\">//获取传过来的参数</span></span><br><span class=\"line\">  <span class=\"comment\">// console.log(qs.parse(param));</span></span><br><span class=\"line\">  <span class=\"comment\">// 因为axios的post带参数被qs.stringfy()转换了，需要转回来。</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> paramObj = qs.parse(param);</span><br><span class=\"line\">  console.log(paramObj);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> files = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newFile = &#123;</span><br><span class=\"line\">      name: paramObj.username + i +'.png',</span><br><span class=\"line\">      url: <span class=\"type\">Random</span>.dataImage('300x250', 'mock的图片'), <span class=\"comment\">// Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    files.push(newFile)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    fileList: files</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Mock.mock( url, post/get , 返回的数据)；</span></span><br><span class=\"line\"><span class=\"type\">Mock</span>.mock('/mk_login', 'post', login);<span class=\"comment\">// 登录</span></span><br><span class=\"line\"><span class=\"type\">Mock</span>.mock('/mk_tbllist', 'post', tblList);<span class=\"comment\">// 表格分页</span></span><br><span class=\"line\"><span class=\"type\">Mock</span>.mock('/mk_booklist', 'post',bookList);<span class=\"comment\">// 图书列表</span></span><br><span class=\"line\"><span class=\"type\">Mock</span>.mock('/mk_fileupload', 'post',&#123;&#125;);<span class=\"comment\">// 文件上传</span></span><br><span class=\"line\"><span class=\"type\">Mock</span>.mock('/mk_fetchFiles', 'post',fileList);<span class=\"comment\">// 获取文件列表</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"main-js-引入mock\"><a href=\"#main-js-引入mock\" class=\"headerlink\" title=\"main.js 引入mock\"></a>main.js 引入mock</h2><p>在main.js中引入mock文件：<br><code>require(&#39;./mock&#39;);</code></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>vue文件中访问该接口mock：<br><em>(调用的url接口和mock.js文件的Mock.mock( url, post/get , 返回的数据)的url接口一致，就能被mock拦截。)</em><br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">api.post('/mk_login', data)</span><br><span class=\"line\">              .then(res =&gt; &#123;</span><br><span class=\"line\">                console.log(res.data);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(res.data.status)&#123;</span><br><span class=\"line\">                  <span class=\"comment\">// 登录成功</span></span><br><span class=\"line\">                  this.setUserInfo2(data);</span><br><span class=\"line\">                  this.$router.replace('/home');</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">              .<span class=\"keyword\">catch</span>(error =&gt; &#123;</span><br><span class=\"line\">                console.log(<span class=\"string\">\"login异常：\"</span>)</span><br><span class=\"line\">                console.log(error)</span><br><span class=\"line\">              &#125;)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://blog.csdn.net/hello_mujinhua/article/details/78426937\" target=\"_blank\" rel=\"noopener\">vue中mock.js使用</a></li>\n<li><a href=\"https://www.jianshu.com/p/8579b703a4c1\" target=\"_blank\" rel=\"noopener\">【Mock.js】前端模拟假数据，不用在手拼了</a></li>\n<li><a href=\"https://www.jianshu.com/p/dd23a6547114\" target=\"_blank\" rel=\"noopener\">Mockjs,再也不用追着后端小伙伴要接口了</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000003087224\" target=\"_blank\" rel=\"noopener\">使用Mock.js进行独立于后端的前端开发</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>在前后端分离的大环境下，前端需要后端的接口去完成页面的渲染，但是大部分的情况下,前后端需要同时进行开发，这种情况下,后端还没完成数据输出，前端只好写静态模拟数据。面临一些问题：数据太长了，将数据写在js文件里，完成后挨个改url；某些逻辑复杂的代码，加入或去除模拟数据时得小心翼翼；想要尽可能还原真实的数据，要么编写更多代码，要么手动修改模拟数据；特殊的格式，例如IP,随机数，图片，地址，需要去收集等等。<br>Mock.js 正是这样一款类库，可以帮我们模拟生成一堆数据，也能解决那些问题。<br>","more":"</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p><a href=\"https://link.jianshu.com/?t=http://mockjs.com/\" target=\"_blank\" rel=\"noopener\">mock官网</a><br>npm安装：<code>npm install mockjs</code><br>package文件中显示当前mockjs版本说明安装成功。<br><em>(也可以引入cdn：<code>&lt;script src=&quot;http://mockjs.com/dist/mock.js&quot;&gt;&lt;/script&gt;</code>)</em></p>\n<h2 id=\"mockjs-文件\"><a href=\"#mockjs-文件\" class=\"headerlink\" title=\"mockjs 文件\"></a>mockjs 文件</h2><p>在main.js同级下建立mock.js文件：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入mockjs</span></span><br><span class=\"line\">const <span class=\"type\">Mock</span> = require('mockjs');</span><br><span class=\"line\">const qs = require('qs');</span><br><span class=\"line\"><span class=\"comment\">// 获取 mock.Random 对象</span></span><br><span class=\"line\">const <span class=\"type\">Random</span> = <span class=\"type\">Mock</span>.<span class=\"type\">Random</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 登录</span></span><br><span class=\"line\">const login = function() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> status = <span class=\"literal\">false</span>;<span class=\"comment\">//登录状态：ture--成功，false--失败</span></span><br><span class=\"line\">  status = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    status: status</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 表格分页</span></span><br><span class=\"line\">const tblList = function(param) &#123;</span><br><span class=\"line\">  param = param.body || '';<span class=\"comment\">//获取传过来的参数</span></span><br><span class=\"line\">  <span class=\"comment\">// console.log(qs.parse(param));//因为axios的post带参数被qs.stringfy()转换了，需要转回来。</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(param == '')&#123;</span><br><span class=\"line\">\t  <span class=\"comment\">//无查询条件</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> bookdata = <span class=\"type\">Mock</span>.mock(&#123;</span><br><span class=\"line\">      'books|<span class=\"number\">1</span>-<span class=\"number\">10</span>': [&#123;</span><br><span class=\"line\">        'sid|+<span class=\"number\">1</span>': <span class=\"number\">1</span>,</span><br><span class=\"line\">        'date': '@date(<span class=\"string\">\"yyyy-MM-dd\"</span>)',</span><br><span class=\"line\">        'name': '@csentence()',</span><br><span class=\"line\">        'address': '@county(<span class=\"literal\">true</span>)',</span><br><span class=\"line\">        'region': '双流区'</span><br><span class=\"line\">      &#125;]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// console.log(bookdata);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> bookdata;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t  <span class=\"comment\">//带查询条件</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> paramObj = qs.parse(param);</span><br><span class=\"line\">    console.log('input parameter：...');</span><br><span class=\"line\">    console.log(paramObj);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> books = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> newBook = &#123;</span><br><span class=\"line\">        <span class=\"comment\">// thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码</span></span><br><span class=\"line\">        date: <span class=\"type\">Random</span>.date(),</span><br><span class=\"line\">        name: paramObj.name+<span class=\"type\">Random</span>.csentence(),</span><br><span class=\"line\">        address: <span class=\"type\">Random</span>.county(<span class=\"literal\">true</span>),</span><br><span class=\"line\">        region: paramObj.region</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      books.push(newBook)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      books: books</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//图书列表</span></span><br><span class=\"line\">const bookList = function(param) &#123;</span><br><span class=\"line\">  param = param.body || '';<span class=\"comment\">//获取传过来的参数</span></span><br><span class=\"line\">  <span class=\"comment\">// console.log(qs.parse(param));</span></span><br><span class=\"line\">  <span class=\"comment\">// 因为axios的post带参数被qs.stringfy()转换了，需要转回来。</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> paramObj = qs.parse(param);</span><br><span class=\"line\">  console.log(paramObj);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> nameInput = paramObj.name || '';</span><br><span class=\"line\">  <span class=\"keyword\">let</span> books = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newBook = &#123;</span><br><span class=\"line\">      sid: temp,</span><br><span class=\"line\">      <span class=\"comment\">// thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码</span></span><br><span class=\"line\">      author: <span class=\"type\">Random</span>.name(<span class=\"number\">2</span>,<span class=\"number\">4</span>),</span><br><span class=\"line\">      name: '《'+nameInput+<span class=\"type\">Random</span>.csentence()+<span class=\"string\">\"》\"</span>,</span><br><span class=\"line\">      publishAt: <span class=\"type\">Random</span>.date(),</span><br><span class=\"line\">      description: <span class=\"type\">Random</span>.cparagraph()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    books.push(newBook)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    books: books</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//获取文件列表</span></span><br><span class=\"line\">const fileList = function (param) &#123;</span><br><span class=\"line\">  param = param.body || '';<span class=\"comment\">//获取传过来的参数</span></span><br><span class=\"line\">  <span class=\"comment\">// console.log(qs.parse(param));</span></span><br><span class=\"line\">  <span class=\"comment\">// 因为axios的post带参数被qs.stringfy()转换了，需要转回来。</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> paramObj = qs.parse(param);</span><br><span class=\"line\">  console.log(paramObj);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> files = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newFile = &#123;</span><br><span class=\"line\">      name: paramObj.username + i +'.png',</span><br><span class=\"line\">      url: <span class=\"type\">Random</span>.dataImage('300x250', 'mock的图片'), <span class=\"comment\">// Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    files.push(newFile)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    fileList: files</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Mock.mock( url, post/get , 返回的数据)；</span></span><br><span class=\"line\"><span class=\"type\">Mock</span>.mock('/mk_login', 'post', login);<span class=\"comment\">// 登录</span></span><br><span class=\"line\"><span class=\"type\">Mock</span>.mock('/mk_tbllist', 'post', tblList);<span class=\"comment\">// 表格分页</span></span><br><span class=\"line\"><span class=\"type\">Mock</span>.mock('/mk_booklist', 'post',bookList);<span class=\"comment\">// 图书列表</span></span><br><span class=\"line\"><span class=\"type\">Mock</span>.mock('/mk_fileupload', 'post',&#123;&#125;);<span class=\"comment\">// 文件上传</span></span><br><span class=\"line\"><span class=\"type\">Mock</span>.mock('/mk_fetchFiles', 'post',fileList);<span class=\"comment\">// 获取文件列表</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"main-js-引入mock\"><a href=\"#main-js-引入mock\" class=\"headerlink\" title=\"main.js 引入mock\"></a>main.js 引入mock</h2><p>在main.js中引入mock文件：<br><code>require(&#39;./mock&#39;);</code></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>vue文件中访问该接口mock：<br><em>(调用的url接口和mock.js文件的Mock.mock( url, post/get , 返回的数据)的url接口一致，就能被mock拦截。)</em><br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">api.post('/mk_login', data)</span><br><span class=\"line\">              .then(res =&gt; &#123;</span><br><span class=\"line\">                console.log(res.data);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(res.data.status)&#123;</span><br><span class=\"line\">                  <span class=\"comment\">// 登录成功</span></span><br><span class=\"line\">                  this.setUserInfo2(data);</span><br><span class=\"line\">                  this.$router.replace('/home');</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">              .<span class=\"keyword\">catch</span>(error =&gt; &#123;</span><br><span class=\"line\">                console.log(<span class=\"string\">\"login异常：\"</span>)</span><br><span class=\"line\">                console.log(error)</span><br><span class=\"line\">              &#125;)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://blog.csdn.net/hello_mujinhua/article/details/78426937\" target=\"_blank\" rel=\"noopener\">vue中mock.js使用</a></li>\n<li><a href=\"https://www.jianshu.com/p/8579b703a4c1\" target=\"_blank\" rel=\"noopener\">【Mock.js】前端模拟假数据，不用在手拼了</a></li>\n<li><a href=\"https://www.jianshu.com/p/dd23a6547114\" target=\"_blank\" rel=\"noopener\">Mockjs,再也不用追着后端小伙伴要接口了</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000003087224\" target=\"_blank\" rel=\"noopener\">使用Mock.js进行独立于后端的前端开发</a></li>\n</ul>"},{"layout":"pages","title":"webstorm+gitlab 项目开发流程","date":"2018-06-04T03:00:00.000Z","_content":"\n以前都是作为一个 三方开发者 clone 别人的项目下来修改，现在需要自己作为项目的初始创建者发项目，碰到了不少坑。\n<!-- more -->\n\n## gitlab 创建项目和分支\n\n### 创建项目\n登录账号，找到自己的项目分组，new project 。（找管理员或领导给你分配对应的创建项目权限）\n![gitlab-01.png](https://upload-images.jianshu.io/upload_images/1464420-49461240e9930a9c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 创建分支\n这里跟 github 有点不太一样，github 创建一个项目后，有个默认的 master 分支。而 gitlab 没有，你注意上图中左边的目录，没有`Files`，也就是说看不到项目目录。\n当然，gitlab 提供了创建详细的步骤和命令。\n\n**ps：按照它给的步骤和命令一步一步执行完即可，此步骤不需要提交代码那部分，故而截图都没截。中间别漏掉一些命令，我试过，反正各种报错。**\n\n去 gitlab 上，进入到你创建的项目，可以看到`Files`，点进去后，能看到分支，就表示创建分支成功。\n![gitlab-02.png](https://upload-images.jianshu.io/upload_images/1464420-56940686abe6008d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## webstorm 提交项目代码\n当然，此步骤也可以直接用之前的 gitlab 创建项目步骤的命令方式提交。也可以用 webstorm 图形界面提交代码。看个人偏好了，我是实用主义者，图形界面省事。出现问题时，再开启命令模式。\n右键项目 --> Git --> Add --> Commit Directory... --> Push 。去 gitlab 确认代码是否提交成功。\n*（首次提交代码时会要求你输入账号和密码，就是你 gitlab 的账号和密码，然后勾上记住密码就行。）*\n![webstorm-pushcode.png](https://upload-images.jianshu.io/upload_images/1464420-39fb9ce497fdfa3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 总结\n上面是项目首次创建和代码提交的流程。\n如果你是三方开发者，你只需要clone 下来项目，然后修改提交代码就行。\nclone 项目：\nVCS --> Checkout from Version Control --> Git ，\n\n![webstorm-git0.png](https://upload-images.jianshu.io/upload_images/1464420-0a6ddf5c6704e80d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n输入相应的远程代码库 url ，本地代码库目录，项目名字。\n\n![webstorm-git1.png](https://upload-images.jianshu.io/upload_images/1464420-004fe94998dcfd76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n点击 test ，测试与远程代码库是否连接成功。输入相应的账号和密码，勾上记住密码。\n\n![webstorm-git2.png](https://upload-images.jianshu.io/upload_images/1464420-87fe58900786d2ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n项目 clone 下来后，本地修改调试代码。需要提交代码时，右键项目或修改的文件目录或文件，然后 Git --> Add --> Commit Directory... --> Push 。\n\n![webstorm-pushcode.png](https://upload-images.jianshu.io/upload_images/1464420-7169ea0520c44ff4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n\n\n","source":"_posts/webstorm-gitlab.md","raw":"---\nlayout: pages\ntitle: webstorm+gitlab 项目开发流程\ndate: 2018-06-04 11:00:00\ntags:\n- webstorm\n- gitlab\n---\n\n以前都是作为一个 三方开发者 clone 别人的项目下来修改，现在需要自己作为项目的初始创建者发项目，碰到了不少坑。\n<!-- more -->\n\n## gitlab 创建项目和分支\n\n### 创建项目\n登录账号，找到自己的项目分组，new project 。（找管理员或领导给你分配对应的创建项目权限）\n![gitlab-01.png](https://upload-images.jianshu.io/upload_images/1464420-49461240e9930a9c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 创建分支\n这里跟 github 有点不太一样，github 创建一个项目后，有个默认的 master 分支。而 gitlab 没有，你注意上图中左边的目录，没有`Files`，也就是说看不到项目目录。\n当然，gitlab 提供了创建详细的步骤和命令。\n\n**ps：按照它给的步骤和命令一步一步执行完即可，此步骤不需要提交代码那部分，故而截图都没截。中间别漏掉一些命令，我试过，反正各种报错。**\n\n去 gitlab 上，进入到你创建的项目，可以看到`Files`，点进去后，能看到分支，就表示创建分支成功。\n![gitlab-02.png](https://upload-images.jianshu.io/upload_images/1464420-56940686abe6008d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## webstorm 提交项目代码\n当然，此步骤也可以直接用之前的 gitlab 创建项目步骤的命令方式提交。也可以用 webstorm 图形界面提交代码。看个人偏好了，我是实用主义者，图形界面省事。出现问题时，再开启命令模式。\n右键项目 --> Git --> Add --> Commit Directory... --> Push 。去 gitlab 确认代码是否提交成功。\n*（首次提交代码时会要求你输入账号和密码，就是你 gitlab 的账号和密码，然后勾上记住密码就行。）*\n![webstorm-pushcode.png](https://upload-images.jianshu.io/upload_images/1464420-39fb9ce497fdfa3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 总结\n上面是项目首次创建和代码提交的流程。\n如果你是三方开发者，你只需要clone 下来项目，然后修改提交代码就行。\nclone 项目：\nVCS --> Checkout from Version Control --> Git ，\n\n![webstorm-git0.png](https://upload-images.jianshu.io/upload_images/1464420-0a6ddf5c6704e80d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n输入相应的远程代码库 url ，本地代码库目录，项目名字。\n\n![webstorm-git1.png](https://upload-images.jianshu.io/upload_images/1464420-004fe94998dcfd76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n点击 test ，测试与远程代码库是否连接成功。输入相应的账号和密码，勾上记住密码。\n\n![webstorm-git2.png](https://upload-images.jianshu.io/upload_images/1464420-87fe58900786d2ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n项目 clone 下来后，本地修改调试代码。需要提交代码时，右键项目或修改的文件目录或文件，然后 Git --> Add --> Commit Directory... --> Push 。\n\n![webstorm-pushcode.png](https://upload-images.jianshu.io/upload_images/1464420-7169ea0520c44ff4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n\n\n","slug":"webstorm-gitlab","published":1,"updated":"2018-06-04T15:20:08.284Z","comments":1,"photos":[],"link":"","_id":"cji0ejm6b002mg4l1aicf1gow","content":"<p>以前都是作为一个 三方开发者 clone 别人的项目下来修改，现在需要自己作为项目的初始创建者发项目，碰到了不少坑。<br><a id=\"more\"></a></p>\n<h2 id=\"gitlab-创建项目和分支\"><a href=\"#gitlab-创建项目和分支\" class=\"headerlink\" title=\"gitlab 创建项目和分支\"></a>gitlab 创建项目和分支</h2><h3 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h3><p>登录账号，找到自己的项目分组，new project 。（找管理员或领导给你分配对应的创建项目权限）<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-49461240e9930a9c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gitlab-01.png\"></p>\n<h3 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h3><p>这里跟 github 有点不太一样，github 创建一个项目后，有个默认的 master 分支。而 gitlab 没有，你注意上图中左边的目录，没有<code>Files</code>，也就是说看不到项目目录。<br>当然，gitlab 提供了创建详细的步骤和命令。</p>\n<p><strong>ps：按照它给的步骤和命令一步一步执行完即可，此步骤不需要提交代码那部分，故而截图都没截。中间别漏掉一些命令，我试过，反正各种报错。</strong></p>\n<p>去 gitlab 上，进入到你创建的项目，可以看到<code>Files</code>，点进去后，能看到分支，就表示创建分支成功。<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-56940686abe6008d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gitlab-02.png\"></p>\n<h2 id=\"webstorm-提交项目代码\"><a href=\"#webstorm-提交项目代码\" class=\"headerlink\" title=\"webstorm 提交项目代码\"></a>webstorm 提交项目代码</h2><p>当然，此步骤也可以直接用之前的 gitlab 创建项目步骤的命令方式提交。也可以用 webstorm 图形界面提交代码。看个人偏好了，我是实用主义者，图形界面省事。出现问题时，再开启命令模式。<br>右键项目 –&gt; Git –&gt; Add –&gt; Commit Directory… –&gt; Push 。去 gitlab 确认代码是否提交成功。<br><em>（首次提交代码时会要求你输入账号和密码，就是你 gitlab 的账号和密码，然后勾上记住密码就行。）</em><br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-39fb9ce497fdfa3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-pushcode.png\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>上面是项目首次创建和代码提交的流程。<br>如果你是三方开发者，你只需要clone 下来项目，然后修改提交代码就行。<br>clone 项目：<br>VCS –&gt; Checkout from Version Control –&gt; Git ，</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-0a6ddf5c6704e80d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-git0.png\"></p>\n<p>输入相应的远程代码库 url ，本地代码库目录，项目名字。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-004fe94998dcfd76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-git1.png\"></p>\n<p>点击 test ，测试与远程代码库是否连接成功。输入相应的账号和密码，勾上记住密码。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-87fe58900786d2ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-git2.png\"></p>\n<p>项目 clone 下来后，本地修改调试代码。需要提交代码时，右键项目或修改的文件目录或文件，然后 Git –&gt; Add –&gt; Commit Directory… –&gt; Push 。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-7169ea0520c44ff4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-pushcode.png\"></p>\n","site":{"data":{}},"excerpt":"<p>以前都是作为一个 三方开发者 clone 别人的项目下来修改，现在需要自己作为项目的初始创建者发项目，碰到了不少坑。<br>","more":"</p>\n<h2 id=\"gitlab-创建项目和分支\"><a href=\"#gitlab-创建项目和分支\" class=\"headerlink\" title=\"gitlab 创建项目和分支\"></a>gitlab 创建项目和分支</h2><h3 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h3><p>登录账号，找到自己的项目分组，new project 。（找管理员或领导给你分配对应的创建项目权限）<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-49461240e9930a9c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gitlab-01.png\"></p>\n<h3 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h3><p>这里跟 github 有点不太一样，github 创建一个项目后，有个默认的 master 分支。而 gitlab 没有，你注意上图中左边的目录，没有<code>Files</code>，也就是说看不到项目目录。<br>当然，gitlab 提供了创建详细的步骤和命令。</p>\n<p><strong>ps：按照它给的步骤和命令一步一步执行完即可，此步骤不需要提交代码那部分，故而截图都没截。中间别漏掉一些命令，我试过，反正各种报错。</strong></p>\n<p>去 gitlab 上，进入到你创建的项目，可以看到<code>Files</code>，点进去后，能看到分支，就表示创建分支成功。<br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-56940686abe6008d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"gitlab-02.png\"></p>\n<h2 id=\"webstorm-提交项目代码\"><a href=\"#webstorm-提交项目代码\" class=\"headerlink\" title=\"webstorm 提交项目代码\"></a>webstorm 提交项目代码</h2><p>当然，此步骤也可以直接用之前的 gitlab 创建项目步骤的命令方式提交。也可以用 webstorm 图形界面提交代码。看个人偏好了，我是实用主义者，图形界面省事。出现问题时，再开启命令模式。<br>右键项目 –&gt; Git –&gt; Add –&gt; Commit Directory… –&gt; Push 。去 gitlab 确认代码是否提交成功。<br><em>（首次提交代码时会要求你输入账号和密码，就是你 gitlab 的账号和密码，然后勾上记住密码就行。）</em><br><img src=\"https://upload-images.jianshu.io/upload_images/1464420-39fb9ce497fdfa3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-pushcode.png\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>上面是项目首次创建和代码提交的流程。<br>如果你是三方开发者，你只需要clone 下来项目，然后修改提交代码就行。<br>clone 项目：<br>VCS –&gt; Checkout from Version Control –&gt; Git ，</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-0a6ddf5c6704e80d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-git0.png\"></p>\n<p>输入相应的远程代码库 url ，本地代码库目录，项目名字。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-004fe94998dcfd76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-git1.png\"></p>\n<p>点击 test ，测试与远程代码库是否连接成功。输入相应的账号和密码，勾上记住密码。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-87fe58900786d2ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-git2.png\"></p>\n<p>项目 clone 下来后，本地修改调试代码。需要提交代码时，右键项目或修改的文件目录或文件，然后 Git –&gt; Add –&gt; Commit Directory… –&gt; Push 。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-7169ea0520c44ff4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-pushcode.png\"></p>"},{"layout":"pages","title":"-webkit-text-size-adjust使用汇总","date":"2016-02-05T09:00:00.000Z","_content":"\n**-webkit-text-size-adjust 的本职是用于mobile的**，见规范[ CSS Mobile Text Size Adjustment Module Level 1](https://drafts.csswg.org/css-size-adjust/) 和 apple 的 [Safari Web Content Guide](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/AdjustingtheTextSize/AdjustingtheTextSize.html#//apple_ref/doc/uid/TP40006510-SW16)。\n之所以现在的桌面版webkit浏览器支持他，是因为实际上这是一下bug。[Bug 56543 – CSS property \"-webkit-text-size-adjust\" means different things in Safari and iOS](https://bugs.webkit.org/show_bug.cgi?id=56543)这个bug在最新版的 WebKit Nightly Builds 里已经被修复了。*这属性现在的一般用处是防止iPhone在坚屏转向横屏时放大文字（注意，就算viewport设置了`maximum-scale=1.0` 文字还是会放大的）*。而且iPhone和iPad的默认设定是不一样的iPhone默认设定 `-webkit-text-size-adjust: auto;`iPad默认设定` -webkit-text-size-adjust: none;`所以iPad默认是不调节的。此属性还支持百分比，这在当前的桌面版的webkit浏览器是不支持的，所以如果不想让iPhone横坚屏切换的时候调节文字，用` -webkit-text-size-adjust: 100%; `绝对不能用` -webkit-text-size-adjust: none; `这会导致仍然支持 `-webkit-text-size-adjust: none;`的桌面版的webkit浏览器无法人为放大文字大小，严重影响可用性。关于如何在chrome里实现小于12px的文字。当然文字缩小到12px以下本来就一定程度影响到可用性了，建议无视chrome的这个特性。硬要实现的话，我想到的一个变通方法是先用js判断是否为chrome （至今还没听说有区分safari 和 chrome 的 css hack ）`var isChrome = !!window.chrome;`再用`-webkit-transform: scale( )` 缩小到合适值。如果你非得要`font-size:10px`(使用em单位时方便计算)，你会发现在chrome里最小还是12px，就算你设置了`font-size: 10px;-webkit-text-size-adjust: 100%;`(或`-webkit-text-size-adjust: none;`)也没用。原因如下：\n > -webkit-text-size-adjust: 100%|none; \n- 只对chrome27.0 版本以下有效，27.0以上版本无效；                \n- 只对英文才有效，对中文无效。\n\n在新版的chrome中，已经禁止了改属性,建议使用CSS3中的方法:`transform:scale(0.875);`当使用`transform:scale(0.875)`时; 不仅是文字变小了，整个文字所在的容器也同时会变小。\n\n#####综上所述：\n    采用-webkit-text-size-adjust: 100%;\n    必须要用小于12px字体时，用-webkit-transform: scale( ) 缩小到合适值。\n\n#####参考\n- [*CSS中-webkit-text-size-adjust:none如何兼容blink？*](http://www.zhihu.com/question/21012907)\n- [*-webkit-text-size-adjust:none;为什么在谷歌中不起作用？*](http://zhidao.baidu.com/link?url=dBqe8MCXUX7hpbjBDTm2EHQ4edmn3AA89Vqny0WJN_ZUGpfsFyjqj1-V9VrW6SdwBWPg61mL8kdJ-Ys2k5oVd5snj-CtRyUOBh4rRN2LKFy)\n","source":"_posts/webkit-text-size-adjust.md","raw":"---\nlayout: pages\ntitle: -webkit-text-size-adjust使用汇总\ndate: 2016-02-05 17:00:00\ntags:\n- css3\n---\n\n**-webkit-text-size-adjust 的本职是用于mobile的**，见规范[ CSS Mobile Text Size Adjustment Module Level 1](https://drafts.csswg.org/css-size-adjust/) 和 apple 的 [Safari Web Content Guide](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/AdjustingtheTextSize/AdjustingtheTextSize.html#//apple_ref/doc/uid/TP40006510-SW16)。\n之所以现在的桌面版webkit浏览器支持他，是因为实际上这是一下bug。[Bug 56543 – CSS property \"-webkit-text-size-adjust\" means different things in Safari and iOS](https://bugs.webkit.org/show_bug.cgi?id=56543)这个bug在最新版的 WebKit Nightly Builds 里已经被修复了。*这属性现在的一般用处是防止iPhone在坚屏转向横屏时放大文字（注意，就算viewport设置了`maximum-scale=1.0` 文字还是会放大的）*。而且iPhone和iPad的默认设定是不一样的iPhone默认设定 `-webkit-text-size-adjust: auto;`iPad默认设定` -webkit-text-size-adjust: none;`所以iPad默认是不调节的。此属性还支持百分比，这在当前的桌面版的webkit浏览器是不支持的，所以如果不想让iPhone横坚屏切换的时候调节文字，用` -webkit-text-size-adjust: 100%; `绝对不能用` -webkit-text-size-adjust: none; `这会导致仍然支持 `-webkit-text-size-adjust: none;`的桌面版的webkit浏览器无法人为放大文字大小，严重影响可用性。关于如何在chrome里实现小于12px的文字。当然文字缩小到12px以下本来就一定程度影响到可用性了，建议无视chrome的这个特性。硬要实现的话，我想到的一个变通方法是先用js判断是否为chrome （至今还没听说有区分safari 和 chrome 的 css hack ）`var isChrome = !!window.chrome;`再用`-webkit-transform: scale( )` 缩小到合适值。如果你非得要`font-size:10px`(使用em单位时方便计算)，你会发现在chrome里最小还是12px，就算你设置了`font-size: 10px;-webkit-text-size-adjust: 100%;`(或`-webkit-text-size-adjust: none;`)也没用。原因如下：\n > -webkit-text-size-adjust: 100%|none; \n- 只对chrome27.0 版本以下有效，27.0以上版本无效；                \n- 只对英文才有效，对中文无效。\n\n在新版的chrome中，已经禁止了改属性,建议使用CSS3中的方法:`transform:scale(0.875);`当使用`transform:scale(0.875)`时; 不仅是文字变小了，整个文字所在的容器也同时会变小。\n\n#####综上所述：\n    采用-webkit-text-size-adjust: 100%;\n    必须要用小于12px字体时，用-webkit-transform: scale( ) 缩小到合适值。\n\n#####参考\n- [*CSS中-webkit-text-size-adjust:none如何兼容blink？*](http://www.zhihu.com/question/21012907)\n- [*-webkit-text-size-adjust:none;为什么在谷歌中不起作用？*](http://zhidao.baidu.com/link?url=dBqe8MCXUX7hpbjBDTm2EHQ4edmn3AA89Vqny0WJN_ZUGpfsFyjqj1-V9VrW6SdwBWPg61mL8kdJ-Ys2k5oVd5snj-CtRyUOBh4rRN2LKFy)\n","slug":"webkit-text-size-adjust","published":1,"updated":"2018-05-30T02:22:33.021Z","comments":1,"photos":[],"link":"","_id":"cji0ejm6g002pg4l1aaowq5x3","content":"<p><strong>-webkit-text-size-adjust 的本职是用于mobile的</strong>，见规范<a href=\"https://drafts.csswg.org/css-size-adjust/\" target=\"_blank\" rel=\"noopener\"> CSS Mobile Text Size Adjustment Module Level 1</a> 和 apple 的 <a href=\"http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/AdjustingtheTextSize/AdjustingtheTextSize.html#//apple_ref/doc/uid/TP40006510-SW16\" target=\"_blank\" rel=\"noopener\">Safari Web Content Guide</a>。<br>之所以现在的桌面版webkit浏览器支持他，是因为实际上这是一下bug。<a href=\"https://bugs.webkit.org/show_bug.cgi?id=56543\" target=\"_blank\" rel=\"noopener\">Bug 56543 – CSS property “-webkit-text-size-adjust” means different things in Safari and iOS</a>这个bug在最新版的 WebKit Nightly Builds 里已经被修复了。<em>这属性现在的一般用处是防止iPhone在坚屏转向横屏时放大文字（注意，就算viewport设置了<code>maximum-scale=1.0</code> 文字还是会放大的）</em>。而且iPhone和iPad的默认设定是不一样的iPhone默认设定 <code>-webkit-text-size-adjust: auto;</code>iPad默认设定<code>-webkit-text-size-adjust: none;</code>所以iPad默认是不调节的。此属性还支持百分比，这在当前的桌面版的webkit浏览器是不支持的，所以如果不想让iPhone横坚屏切换的时候调节文字，用<code>-webkit-text-size-adjust: 100%;</code>绝对不能用<code>-webkit-text-size-adjust: none;</code>这会导致仍然支持 <code>-webkit-text-size-adjust: none;</code>的桌面版的webkit浏览器无法人为放大文字大小，严重影响可用性。关于如何在chrome里实现小于12px的文字。当然文字缩小到12px以下本来就一定程度影响到可用性了，建议无视chrome的这个特性。硬要实现的话，我想到的一个变通方法是先用js判断是否为chrome （至今还没听说有区分safari 和 chrome 的 css hack ）<code>var isChrome = !!window.chrome;</code>再用<code>-webkit-transform: scale( )</code> 缩小到合适值。如果你非得要<code>font-size:10px</code>(使用em单位时方便计算)，你会发现在chrome里最小还是12px，就算你设置了<code>font-size: 10px;-webkit-text-size-adjust: 100%;</code>(或<code>-webkit-text-size-adjust: none;</code>)也没用。原因如下：</p>\n<blockquote>\n<p>-webkit-text-size-adjust: 100%|none; </p>\n<ul>\n<li>只对chrome27.0 版本以下有效，27.0以上版本无效；                </li>\n<li>只对英文才有效，对中文无效。</li>\n</ul>\n</blockquote>\n<p>在新版的chrome中，已经禁止了改属性,建议使用CSS3中的方法:<code>transform:scale(0.875);</code>当使用<code>transform:scale(0.875)</code>时; 不仅是文字变小了，整个文字所在的容器也同时会变小。</p>\n<p>#####综上所述：<br>    采用-webkit-text-size-adjust: 100%;<br>    必须要用小于12px字体时，用-webkit-transform: scale( ) 缩小到合适值。</p>\n<p>#####参考</p>\n<ul>\n<li><a href=\"http://www.zhihu.com/question/21012907\" target=\"_blank\" rel=\"noopener\"><em>CSS中-webkit-text-size-adjust:none如何兼容blink？</em></a></li>\n<li><a href=\"http://zhidao.baidu.com/link?url=dBqe8MCXUX7hpbjBDTm2EHQ4edmn3AA89Vqny0WJN_ZUGpfsFyjqj1-V9VrW6SdwBWPg61mL8kdJ-Ys2k5oVd5snj-CtRyUOBh4rRN2LKFy\" target=\"_blank\" rel=\"noopener\"><em>-webkit-text-size-adjust:none;为什么在谷歌中不起作用？</em></a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>-webkit-text-size-adjust 的本职是用于mobile的</strong>，见规范<a href=\"https://drafts.csswg.org/css-size-adjust/\" target=\"_blank\" rel=\"noopener\"> CSS Mobile Text Size Adjustment Module Level 1</a> 和 apple 的 <a href=\"http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/AdjustingtheTextSize/AdjustingtheTextSize.html#//apple_ref/doc/uid/TP40006510-SW16\" target=\"_blank\" rel=\"noopener\">Safari Web Content Guide</a>。<br>之所以现在的桌面版webkit浏览器支持他，是因为实际上这是一下bug。<a href=\"https://bugs.webkit.org/show_bug.cgi?id=56543\" target=\"_blank\" rel=\"noopener\">Bug 56543 – CSS property “-webkit-text-size-adjust” means different things in Safari and iOS</a>这个bug在最新版的 WebKit Nightly Builds 里已经被修复了。<em>这属性现在的一般用处是防止iPhone在坚屏转向横屏时放大文字（注意，就算viewport设置了<code>maximum-scale=1.0</code> 文字还是会放大的）</em>。而且iPhone和iPad的默认设定是不一样的iPhone默认设定 <code>-webkit-text-size-adjust: auto;</code>iPad默认设定<code>-webkit-text-size-adjust: none;</code>所以iPad默认是不调节的。此属性还支持百分比，这在当前的桌面版的webkit浏览器是不支持的，所以如果不想让iPhone横坚屏切换的时候调节文字，用<code>-webkit-text-size-adjust: 100%;</code>绝对不能用<code>-webkit-text-size-adjust: none;</code>这会导致仍然支持 <code>-webkit-text-size-adjust: none;</code>的桌面版的webkit浏览器无法人为放大文字大小，严重影响可用性。关于如何在chrome里实现小于12px的文字。当然文字缩小到12px以下本来就一定程度影响到可用性了，建议无视chrome的这个特性。硬要实现的话，我想到的一个变通方法是先用js判断是否为chrome （至今还没听说有区分safari 和 chrome 的 css hack ）<code>var isChrome = !!window.chrome;</code>再用<code>-webkit-transform: scale( )</code> 缩小到合适值。如果你非得要<code>font-size:10px</code>(使用em单位时方便计算)，你会发现在chrome里最小还是12px，就算你设置了<code>font-size: 10px;-webkit-text-size-adjust: 100%;</code>(或<code>-webkit-text-size-adjust: none;</code>)也没用。原因如下：</p>\n<blockquote>\n<p>-webkit-text-size-adjust: 100%|none; </p>\n<ul>\n<li>只对chrome27.0 版本以下有效，27.0以上版本无效；                </li>\n<li>只对英文才有效，对中文无效。</li>\n</ul>\n</blockquote>\n<p>在新版的chrome中，已经禁止了改属性,建议使用CSS3中的方法:<code>transform:scale(0.875);</code>当使用<code>transform:scale(0.875)</code>时; 不仅是文字变小了，整个文字所在的容器也同时会变小。</p>\n<p>#####综上所述：<br>    采用-webkit-text-size-adjust: 100%;<br>    必须要用小于12px字体时，用-webkit-transform: scale( ) 缩小到合适值。</p>\n<p>#####参考</p>\n<ul>\n<li><a href=\"http://www.zhihu.com/question/21012907\" target=\"_blank\" rel=\"noopener\"><em>CSS中-webkit-text-size-adjust:none如何兼容blink？</em></a></li>\n<li><a href=\"http://zhidao.baidu.com/link?url=dBqe8MCXUX7hpbjBDTm2EHQ4edmn3AA89Vqny0WJN_ZUGpfsFyjqj1-V9VrW6SdwBWPg61mL8kdJ-Ys2k5oVd5snj-CtRyUOBh4rRN2LKFy\" target=\"_blank\" rel=\"noopener\"><em>-webkit-text-size-adjust:none;为什么在谷歌中不起作用？</em></a></li>\n</ul>\n"},{"layout":"pages","title":"webstorm 使用之 markdown 插件","date":"2016-03-21T09:00:00.000Z","_content":"\n[Markdown](http://www.markdown.cn/)的相关语法，自己去官网看，或网上搜资料很多的。这里讲一下webstorm安装使用markdown插件。\n<!-- more -->\n\n### 步骤\n1. 打开webstorm，File-->Setting-->输入plugin-->Install JetBrains plugin...-->输入markdown-->点击右边的“Install”,安装完，重启webstorm。\n![md1.jpg](http://upload-images.jianshu.io/upload_images/1464420-02c292cd9a97cd75.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n1. 新建test.md，然后编辑，如果没有效果的话。File-->Setting-->输入file type-->找到Markdown-->在下面的Registers Patterns添加上*.md。\n![md2.jpg](http://upload-images.jianshu.io/upload_images/1464420-345ec30ac8d8689c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 参考：\n* [用WebStorm编辑Markdown](http://www.360doc.com/content/14/1028/21/12129652_420703297.shtml)\n","source":"_posts/webstorm-plugin-markdown.md","raw":"---\nlayout: pages\ntitle: webstorm 使用之 markdown 插件\ndate: 2016-03-21 17:00:00\ntags:\n- webstorm\n- markdown\n---\n\n[Markdown](http://www.markdown.cn/)的相关语法，自己去官网看，或网上搜资料很多的。这里讲一下webstorm安装使用markdown插件。\n<!-- more -->\n\n### 步骤\n1. 打开webstorm，File-->Setting-->输入plugin-->Install JetBrains plugin...-->输入markdown-->点击右边的“Install”,安装完，重启webstorm。\n![md1.jpg](http://upload-images.jianshu.io/upload_images/1464420-02c292cd9a97cd75.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n1. 新建test.md，然后编辑，如果没有效果的话。File-->Setting-->输入file type-->找到Markdown-->在下面的Registers Patterns添加上*.md。\n![md2.jpg](http://upload-images.jianshu.io/upload_images/1464420-345ec30ac8d8689c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 参考：\n* [用WebStorm编辑Markdown](http://www.360doc.com/content/14/1028/21/12129652_420703297.shtml)\n","slug":"webstorm-plugin-markdown","published":1,"updated":"2018-05-30T01:41:22.654Z","comments":1,"photos":[],"link":"","_id":"cji0ejm6m002sg4l1ycq4qas6","content":"<p><a href=\"http://www.markdown.cn/\" target=\"_blank\" rel=\"noopener\">Markdown</a>的相关语法，自己去官网看，或网上搜资料很多的。这里讲一下webstorm安装使用markdown插件。<br><a id=\"more\"></a></p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ol>\n<li>打开webstorm，File–&gt;Setting–&gt;输入plugin–&gt;Install JetBrains plugin…–&gt;输入markdown–&gt;点击右边的“Install”,安装完，重启webstorm。<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-02c292cd9a97cd75.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"md1.jpg\"></li>\n<li>新建test.md，然后编辑，如果没有效果的话。File–&gt;Setting–&gt;输入file type–&gt;找到Markdown–&gt;在下面的Registers Patterns添加上*.md。<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-345ec30ac8d8689c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"md2.jpg\"></li>\n</ol>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://www.360doc.com/content/14/1028/21/12129652_420703297.shtml\" target=\"_blank\" rel=\"noopener\">用WebStorm编辑Markdown</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><a href=\"http://www.markdown.cn/\" target=\"_blank\" rel=\"noopener\">Markdown</a>的相关语法，自己去官网看，或网上搜资料很多的。这里讲一下webstorm安装使用markdown插件。<br>","more":"</p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ol>\n<li>打开webstorm，File–&gt;Setting–&gt;输入plugin–&gt;Install JetBrains plugin…–&gt;输入markdown–&gt;点击右边的“Install”,安装完，重启webstorm。<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-02c292cd9a97cd75.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"md1.jpg\"></li>\n<li>新建test.md，然后编辑，如果没有效果的话。File–&gt;Setting–&gt;输入file type–&gt;找到Markdown–&gt;在下面的Registers Patterns添加上*.md。<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-345ec30ac8d8689c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"md2.jpg\"></li>\n</ol>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><ul>\n<li><a href=\"http://www.360doc.com/content/14/1028/21/12129652_420703297.shtml\" target=\"_blank\" rel=\"noopener\">用WebStorm编辑Markdown</a></li>\n</ul>"},{"layout":"pages","title":"webstorm11--激活破解总结","date":"2018-05-29T09:20:00.000Z","_content":"\n网上的方法很多，什么注册机，输入 server 地址等等，特别是输入地址的，总会出现用了一段时间就会不行了，现在整理了网上了一些靠谱点的方法。\n<!-- more -->\n\n##　License server 输入网址\n注册时，在打开的　License Activation　窗口中选择　“License server”　，在输入框输入下面的网址：\n- [http://hb5.s.osidea.cc:1017](http://hb5.s.osidea.cc:1017/) （2018.4.23日）\n- [http://hb5.s.osidea.cc:1017](http://hb5.s.osidea.cc:1017/)(最新 18/05/10)\n- [http://im.js.cn:8888](http://im.js.cn:8888/) (新,感谢 [ qq_34394012 ])\n- [http://hb5.s.osidea.cc:1017](http://hb5.s.osidea.cc:1017/) ( 新,感谢[ [cometwo](https://blog.csdn.net/libin_1) ] )\n- [http://idea.lanyus.com](http://idea.lanyus.com/) ( 新.感谢[ weixin_38627258 ] )\n\n点击：Activate即可。\n\n网友分享 : [感谢 weixin_41405655 ]\n\n```swift\n===== LICENSE BEGIN =====\n37362-12042010\n00000!enirob\"h4FBnAgcpdNnIZydA\n9AikY7i7Ecn7GW7EvybU\"YwuAPkdCw\nQn7Fp!9FpNvujTEghtbTGz1DutM216\n===== LICENSE END =====\n```\n\n复制 license begin 和 license end 之间的一段代码可以用\n\n##　获取注册码\n打开网址（[IntelliJ IDEA 注册码](http://idea.lanyus.com/)），我们能看到下面的界面，直接点击获取激活码，将生成的激活码粘贴到 WebStorm 激活对话框中的 Lisence Code 输入框，点击OK即可破解。\n\n![webstorm-registe-code.png](https://upload-images.jianshu.io/upload_images/1464420-19867659962e83b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 使用破解补丁(推荐)\n### 1. 拿到 jar 破解补丁文件\n去我的百度网盘下载（2018版）：\n链接：https://pan.baidu.com/s/1O8-NW_e9rsoTrQ1u1qjs7w 密码：26mm\n或去[官网](http://idea.lanyus.com/)下载，如下图：\n\n![webstorm-registe-code2.png](https://upload-images.jianshu.io/upload_images/1464420-23ce880ac7e7b9b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 2. 修改配置文件\n将补丁复制到安装目录的bin目录下：\n`C:\\Program Files\\JetBrains\\WebStorm 2017.1.3\\bin`\n\n修改同目录下的 WebStorm.exe.vmoptions 和WebStorm64.exe.vmoptions，这两个文件一个是32位的，一个是64位的，建议同步修改。\n用文本编辑器打开之后，在文件最上面加一行代码 ：\n`-javaagent:C:\\Program Files\\JetBrains\\WebStorm 2017.1.3\\bin\\JetbrainsCrack-2.7-release-str.jar`\n\n![webstorm.png](https://upload-images.jianshu.io/upload_images/1464420-26cdf0414e0319db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n配置好之后，保存文件。在此再次启动 WebStorm ，就会看到下面所示界面，至此补丁激活就成功了。\n\n![webstorm-4.png](https://upload-images.jianshu.io/upload_images/1464420-2ca410f848d0165a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 自己搭建IntelliJ IDEA授权服务器\n比较繁琐，自己去折腾，给你个[传送门](http://blog.lanyus.com/archives/174.html)。\n","source":"_posts/webstorm-regitstcode.md","raw":"---\nlayout: pages\ntitle: webstorm11--激活破解总结\ndate: 2018-05-29 17:20:00\ncategories:\n- webstorm\ntags:\n- webstorm11\n---\n\n网上的方法很多，什么注册机，输入 server 地址等等，特别是输入地址的，总会出现用了一段时间就会不行了，现在整理了网上了一些靠谱点的方法。\n<!-- more -->\n\n##　License server 输入网址\n注册时，在打开的　License Activation　窗口中选择　“License server”　，在输入框输入下面的网址：\n- [http://hb5.s.osidea.cc:1017](http://hb5.s.osidea.cc:1017/) （2018.4.23日）\n- [http://hb5.s.osidea.cc:1017](http://hb5.s.osidea.cc:1017/)(最新 18/05/10)\n- [http://im.js.cn:8888](http://im.js.cn:8888/) (新,感谢 [ qq_34394012 ])\n- [http://hb5.s.osidea.cc:1017](http://hb5.s.osidea.cc:1017/) ( 新,感谢[ [cometwo](https://blog.csdn.net/libin_1) ] )\n- [http://idea.lanyus.com](http://idea.lanyus.com/) ( 新.感谢[ weixin_38627258 ] )\n\n点击：Activate即可。\n\n网友分享 : [感谢 weixin_41405655 ]\n\n```swift\n===== LICENSE BEGIN =====\n37362-12042010\n00000!enirob\"h4FBnAgcpdNnIZydA\n9AikY7i7Ecn7GW7EvybU\"YwuAPkdCw\nQn7Fp!9FpNvujTEghtbTGz1DutM216\n===== LICENSE END =====\n```\n\n复制 license begin 和 license end 之间的一段代码可以用\n\n##　获取注册码\n打开网址（[IntelliJ IDEA 注册码](http://idea.lanyus.com/)），我们能看到下面的界面，直接点击获取激活码，将生成的激活码粘贴到 WebStorm 激活对话框中的 Lisence Code 输入框，点击OK即可破解。\n\n![webstorm-registe-code.png](https://upload-images.jianshu.io/upload_images/1464420-19867659962e83b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 使用破解补丁(推荐)\n### 1. 拿到 jar 破解补丁文件\n去我的百度网盘下载（2018版）：\n链接：https://pan.baidu.com/s/1O8-NW_e9rsoTrQ1u1qjs7w 密码：26mm\n或去[官网](http://idea.lanyus.com/)下载，如下图：\n\n![webstorm-registe-code2.png](https://upload-images.jianshu.io/upload_images/1464420-23ce880ac7e7b9b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 2. 修改配置文件\n将补丁复制到安装目录的bin目录下：\n`C:\\Program Files\\JetBrains\\WebStorm 2017.1.3\\bin`\n\n修改同目录下的 WebStorm.exe.vmoptions 和WebStorm64.exe.vmoptions，这两个文件一个是32位的，一个是64位的，建议同步修改。\n用文本编辑器打开之后，在文件最上面加一行代码 ：\n`-javaagent:C:\\Program Files\\JetBrains\\WebStorm 2017.1.3\\bin\\JetbrainsCrack-2.7-release-str.jar`\n\n![webstorm.png](https://upload-images.jianshu.io/upload_images/1464420-26cdf0414e0319db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n配置好之后，保存文件。在此再次启动 WebStorm ，就会看到下面所示界面，至此补丁激活就成功了。\n\n![webstorm-4.png](https://upload-images.jianshu.io/upload_images/1464420-2ca410f848d0165a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 自己搭建IntelliJ IDEA授权服务器\n比较繁琐，自己去折腾，给你个[传送门](http://blog.lanyus.com/archives/174.html)。\n","slug":"webstorm-regitstcode","published":1,"updated":"2018-05-29T08:47:43.370Z","comments":1,"photos":[],"link":"","_id":"cji0ejm6s002xg4l11zbk34da","content":"<p>网上的方法很多，什么注册机，输入 server 地址等等，特别是输入地址的，总会出现用了一段时间就会不行了，现在整理了网上了一些靠谱点的方法。<br><a id=\"more\"></a></p>\n<p>##　License server 输入网址<br>注册时，在打开的　License Activation　窗口中选择　“License server”　，在输入框输入下面的网址：</p>\n<ul>\n<li><a href=\"http://hb5.s.osidea.cc:1017/\" target=\"_blank\" rel=\"noopener\">http://hb5.s.osidea.cc:1017</a> （2018.4.23日）</li>\n<li><a href=\"http://hb5.s.osidea.cc:1017/\" target=\"_blank\" rel=\"noopener\">http://hb5.s.osidea.cc:1017</a>(最新 18/05/10)</li>\n<li><a href=\"http://im.js.cn:8888/\" target=\"_blank\" rel=\"noopener\">http://im.js.cn:8888</a> (新,感谢 [ qq_34394012 ])</li>\n<li><a href=\"http://hb5.s.osidea.cc:1017/\" target=\"_blank\" rel=\"noopener\">http://hb5.s.osidea.cc:1017</a> ( 新,感谢[ <a href=\"https://blog.csdn.net/libin_1\" target=\"_blank\" rel=\"noopener\">cometwo</a> ] )</li>\n<li><a href=\"http://idea.lanyus.com/\" target=\"_blank\" rel=\"noopener\">http://idea.lanyus.com</a> ( 新.感谢[ weixin_38627258 ] )</li>\n</ul>\n<p>点击：Activate即可。</p>\n<p>网友分享 : [感谢 weixin_41405655 ]</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">===== <span class=\"type\">LICENSE</span> <span class=\"type\">BEGIN</span> =====</span><br><span class=\"line\"><span class=\"number\">37362</span>-<span class=\"number\">12042010</span></span><br><span class=\"line\"><span class=\"number\">00000</span>!enirob<span class=\"string\">\"h4FBnAgcpdNnIZydA</span></span><br><span class=\"line\"><span class=\"string\">9AikY7i7Ecn7GW7EvybU\"</span><span class=\"type\">YwuAPkdCw</span></span><br><span class=\"line\"><span class=\"type\">Qn7Fp</span>!9FpNvujTEghtbTGz1DutM216</span><br><span class=\"line\">===== <span class=\"type\">LICENSE</span> <span class=\"type\">END</span> =====</span><br></pre></td></tr></table></figure>\n<p>复制 license begin 和 license end 之间的一段代码可以用</p>\n<p>##　获取注册码<br>打开网址（<a href=\"http://idea.lanyus.com/\" target=\"_blank\" rel=\"noopener\">IntelliJ IDEA 注册码</a>），我们能看到下面的界面，直接点击获取激活码，将生成的激活码粘贴到 WebStorm 激活对话框中的 Lisence Code 输入框，点击OK即可破解。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-19867659962e83b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-registe-code.png\"></p>\n<h2 id=\"使用破解补丁-推荐\"><a href=\"#使用破解补丁-推荐\" class=\"headerlink\" title=\"使用破解补丁(推荐)\"></a>使用破解补丁(推荐)</h2><h3 id=\"1-拿到-jar-破解补丁文件\"><a href=\"#1-拿到-jar-破解补丁文件\" class=\"headerlink\" title=\"1. 拿到 jar 破解补丁文件\"></a>1. 拿到 jar 破解补丁文件</h3><p>去我的百度网盘下载（2018版）：<br>链接：<a href=\"https://pan.baidu.com/s/1O8-NW_e9rsoTrQ1u1qjs7w\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1O8-NW_e9rsoTrQ1u1qjs7w</a> 密码：26mm<br>或去<a href=\"http://idea.lanyus.com/\" target=\"_blank\" rel=\"noopener\">官网</a>下载，如下图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-23ce880ac7e7b9b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-registe-code2.png\"></p>\n<h3 id=\"2-修改配置文件\"><a href=\"#2-修改配置文件\" class=\"headerlink\" title=\"2. 修改配置文件\"></a>2. 修改配置文件</h3><p>将补丁复制到安装目录的bin目录下：<br><code>C:\\Program Files\\JetBrains\\WebStorm 2017.1.3\\bin</code></p>\n<p>修改同目录下的 WebStorm.exe.vmoptions 和WebStorm64.exe.vmoptions，这两个文件一个是32位的，一个是64位的，建议同步修改。<br>用文本编辑器打开之后，在文件最上面加一行代码 ：<br><code>-javaagent:C:\\Program Files\\JetBrains\\WebStorm 2017.1.3\\bin\\JetbrainsCrack-2.7-release-str.jar</code></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-26cdf0414e0319db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm.png\"></p>\n<p>配置好之后，保存文件。在此再次启动 WebStorm ，就会看到下面所示界面，至此补丁激活就成功了。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-2ca410f848d0165a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-4.png\"></p>\n<h2 id=\"自己搭建IntelliJ-IDEA授权服务器\"><a href=\"#自己搭建IntelliJ-IDEA授权服务器\" class=\"headerlink\" title=\"自己搭建IntelliJ IDEA授权服务器\"></a>自己搭建IntelliJ IDEA授权服务器</h2><p>比较繁琐，自己去折腾，给你个<a href=\"http://blog.lanyus.com/archives/174.html\" target=\"_blank\" rel=\"noopener\">传送门</a>。</p>\n","site":{"data":{}},"excerpt":"<p>网上的方法很多，什么注册机，输入 server 地址等等，特别是输入地址的，总会出现用了一段时间就会不行了，现在整理了网上了一些靠谱点的方法。<br>","more":"</p>\n<p>##　License server 输入网址<br>注册时，在打开的　License Activation　窗口中选择　“License server”　，在输入框输入下面的网址：</p>\n<ul>\n<li><a href=\"http://hb5.s.osidea.cc:1017/\" target=\"_blank\" rel=\"noopener\">http://hb5.s.osidea.cc:1017</a> （2018.4.23日）</li>\n<li><a href=\"http://hb5.s.osidea.cc:1017/\" target=\"_blank\" rel=\"noopener\">http://hb5.s.osidea.cc:1017</a>(最新 18/05/10)</li>\n<li><a href=\"http://im.js.cn:8888/\" target=\"_blank\" rel=\"noopener\">http://im.js.cn:8888</a> (新,感谢 [ qq_34394012 ])</li>\n<li><a href=\"http://hb5.s.osidea.cc:1017/\" target=\"_blank\" rel=\"noopener\">http://hb5.s.osidea.cc:1017</a> ( 新,感谢[ <a href=\"https://blog.csdn.net/libin_1\" target=\"_blank\" rel=\"noopener\">cometwo</a> ] )</li>\n<li><a href=\"http://idea.lanyus.com/\" target=\"_blank\" rel=\"noopener\">http://idea.lanyus.com</a> ( 新.感谢[ weixin_38627258 ] )</li>\n</ul>\n<p>点击：Activate即可。</p>\n<p>网友分享 : [感谢 weixin_41405655 ]</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">===== <span class=\"type\">LICENSE</span> <span class=\"type\">BEGIN</span> =====</span><br><span class=\"line\"><span class=\"number\">37362</span>-<span class=\"number\">12042010</span></span><br><span class=\"line\"><span class=\"number\">00000</span>!enirob<span class=\"string\">\"h4FBnAgcpdNnIZydA</span></span><br><span class=\"line\"><span class=\"string\">9AikY7i7Ecn7GW7EvybU\"</span><span class=\"type\">YwuAPkdCw</span></span><br><span class=\"line\"><span class=\"type\">Qn7Fp</span>!9FpNvujTEghtbTGz1DutM216</span><br><span class=\"line\">===== <span class=\"type\">LICENSE</span> <span class=\"type\">END</span> =====</span><br></pre></td></tr></table></figure>\n<p>复制 license begin 和 license end 之间的一段代码可以用</p>\n<p>##　获取注册码<br>打开网址（<a href=\"http://idea.lanyus.com/\" target=\"_blank\" rel=\"noopener\">IntelliJ IDEA 注册码</a>），我们能看到下面的界面，直接点击获取激活码，将生成的激活码粘贴到 WebStorm 激活对话框中的 Lisence Code 输入框，点击OK即可破解。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-19867659962e83b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-registe-code.png\"></p>\n<h2 id=\"使用破解补丁-推荐\"><a href=\"#使用破解补丁-推荐\" class=\"headerlink\" title=\"使用破解补丁(推荐)\"></a>使用破解补丁(推荐)</h2><h3 id=\"1-拿到-jar-破解补丁文件\"><a href=\"#1-拿到-jar-破解补丁文件\" class=\"headerlink\" title=\"1. 拿到 jar 破解补丁文件\"></a>1. 拿到 jar 破解补丁文件</h3><p>去我的百度网盘下载（2018版）：<br>链接：<a href=\"https://pan.baidu.com/s/1O8-NW_e9rsoTrQ1u1qjs7w\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1O8-NW_e9rsoTrQ1u1qjs7w</a> 密码：26mm<br>或去<a href=\"http://idea.lanyus.com/\" target=\"_blank\" rel=\"noopener\">官网</a>下载，如下图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-23ce880ac7e7b9b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-registe-code2.png\"></p>\n<h3 id=\"2-修改配置文件\"><a href=\"#2-修改配置文件\" class=\"headerlink\" title=\"2. 修改配置文件\"></a>2. 修改配置文件</h3><p>将补丁复制到安装目录的bin目录下：<br><code>C:\\Program Files\\JetBrains\\WebStorm 2017.1.3\\bin</code></p>\n<p>修改同目录下的 WebStorm.exe.vmoptions 和WebStorm64.exe.vmoptions，这两个文件一个是32位的，一个是64位的，建议同步修改。<br>用文本编辑器打开之后，在文件最上面加一行代码 ：<br><code>-javaagent:C:\\Program Files\\JetBrains\\WebStorm 2017.1.3\\bin\\JetbrainsCrack-2.7-release-str.jar</code></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-26cdf0414e0319db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm.png\"></p>\n<p>配置好之后，保存文件。在此再次启动 WebStorm ，就会看到下面所示界面，至此补丁激活就成功了。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1464420-2ca410f848d0165a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-4.png\"></p>\n<h2 id=\"自己搭建IntelliJ-IDEA授权服务器\"><a href=\"#自己搭建IntelliJ-IDEA授权服务器\" class=\"headerlink\" title=\"自己搭建IntelliJ IDEA授权服务器\"></a>自己搭建IntelliJ IDEA授权服务器</h2><p>比较繁琐，自己去折腾，给你个<a href=\"http://blog.lanyus.com/archives/174.html\" target=\"_blank\" rel=\"noopener\">传送门</a>。</p>"},{"layout":"pages","title":"webstorm11--常见配置（二）","date":"2016-03-15T04:00:00.000Z","_content":"\n如果你用过IDE类工具，脑海里都会出现一下常规配置项。比如主题配色，打开多个项目，配置端口（方便其他ip设备访问），文件编码（常规utf-8）,快捷键配置，字体大小颜色风格，插件配置，配置的导入导出（一次配置，到处用）等等。注：File -> Settings，进入配置界面后，尽量用搜索框来快速定位配置项位置。\n<!-- more -->\n\n##一、主题配色\n主题设置\n方法：File -> Settings -> Appearance & Behavior -> Appearance  ->Theme.\n![webstorm-setting-02.jpg](http://upload-images.jianshu.io/upload_images/1464420-64cd004473db254c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n配色设置\n方法：File -> Settings -> Editor -> Colors & Fonts->Scheme.（*注：如果你是从从Sublime text3转过来的朋友，比较偏好monokia配色的，可以参见此文 [webstorm入门1-主题和配色](http://frontenddev.org/article/webstorm-portal-1-subject-and-match-colors.html)*）\n![webstorm-setting-04.jpg](http://upload-images.jianshu.io/upload_images/1464420-904e1eddfec8658d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n##二、打开多个项目\nWebStorm默认情况下一次只能打开一个项目，这点很不爽，其实是可以设置的。（*注：如果你一开始就建了项目再来配置，记得要把左边显示的根路径移除，不然可能点击Add Content Root配置后也不一定能生效*）\n方法：File -> Settings -> Directories -> Add Content Root 中添加你当前的工程目录。\n\n![webstorm-setting-01.jpg](http://upload-images.jianshu.io/upload_images/1464420-27e6ba145c3b70b0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n##三、配置webserver选项（端口）\n方便其他ip设备访问(如手机等测试效果）\n方法：File -> Settings -> Build,Execution,Development -> Debugger ->port\n\n![webstorm-setting-05.jpg](http://upload-images.jianshu.io/upload_images/1464420-bb5a3b9981e70002.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n##四、设置文件的默认编码\n方法：File -> Settings -> Editor -> File Encodings -> IDE Encoding,Project Encoding.\n(*注：配置前和配置后都可以打开页面，在页面的右下角显示有编码，下面截图右下角就有*)\n\n![webstorm-setting-06.jpg](http://upload-images.jianshu.io/upload_images/1464420-77406cc11b2fbc19.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n##五、快捷键配置\n你可以使用默认快捷键配置，也可以根据自己的风格选择配置。习惯eclipse和myeclipse开发的可以配置成eclipse快捷键。\n方法：File -> Settings -> Keymap-> Keymaps\n\n![webstorm-setting-07.jpg](http://upload-images.jianshu.io/upload_images/1464420-973c0099130c94b3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n##六、emmet配置，语法等等\n上面提到了快捷键，webstorm自带emmet插件。用过zen coding的人应该都知道，emmet就是zen coding的升级版。当然，webstorm也不是支持所有的[emmet语法](http://emmet.evget.com/)，不过够用了。可以参考此文[Enabling Emmet Support](http://www.jetbrains.com/webstorm/help/enabling-emmet-support.html)看看具体情况。\n如下图，可以看到css自动加浏览器厂商前缀。\n\n![webstorm-setting-08.png](http://upload-images.jianshu.io/upload_images/1464420-b8b994a6f1f54964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n##七、行号，换行，参考线\n打开页面后，右击页面左边边界，弹窗选项，根据自己需要勾选就是，如下图：\n\n![webstorm-setting-09.png](http://upload-images.jianshu.io/upload_images/1464420-4a5e0d02296d1a71.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n##八、导入导出配置\n当你需要在其他电脑的webstorm上也想用自己编码风格时，将配置文件导入重启webstorm即可生效。\n导出方法：File -> Export Settings... ->自己选择选项和路径。用默认也可以。\n导入方法：File -> Import Settings... ->选择.jar文件路径。\n##九、插件配置\nwebstorm自带很多插件，你可以根据自己需要配置。我暂时未使用，如果你用到了，可以参考下面的一些文章。\n1. SVN、Git插件配置，CSS预处理语言的预编译、JS 实时压缩等等可以参考此文[webstorm入门2-配置](http://frontenddev.org/article/webstorm-portal-2-configuration.html)\n2. 使用css预编译器（sass,less）的朋友,可以省掉gulp、grunt类前端辅助工具,参考此文[webstorm入门5-sass、scss、less监听编译](http://frontenddev.org/article/4-sass-webstorm-primer-scss-less-to-monitor-compilation.html)\n\n####参考：\n- [webstorm入门1-主题和配色](http://frontenddev.org/article/webstorm-portal-1-subject-and-match-colors.html)\n- [webstorm入门5-sass、scss、less监听编译](http://frontenddev.org/article/4-sass-webstorm-primer-scss-less-to-monitor-compilation.html)\n- [webstorm入门2-配置](http://frontenddev.org/article/webstorm-portal-2-configuration.html)\n- [Enabling Emmet Support](http://www.jetbrains.com/webstorm/help/enabling-emmet-support.html)\n- [WebStorm 自定义字体+颜色+语法高亮+导入导出用户设置](http://www.cnblogs.com/dc10101/archive/2013/01/03/2842590.html)\n- [Emmet：HTML/CSS代码快速编写神器](http://www.iteye.com/news/27580)\n- [emmet语法](http://emmet.evget.com/)\n- [Webstorm10.0.3破解程序及汉化包下载、Webstorm配置入门指南](http://www.designlinks.cn/downloads/widget/47.html)\n- [webstorm 配置webserver选项，让其他ip设备可访问(如手机等测试效果）](http://www.ithao123.cn/content-36530.html)\n- [WebStorm 打开多个项目的方法](http://liuxiaofan.com/2013/12/19/1624.html)\n","source":"_posts/webstorm-setting-01.md","raw":"---\nlayout: pages\ntitle: webstorm11--常见配置（二）\ndate: 2016-03-15 12:00:00\ntags:\n- webstorm\n---\n\n如果你用过IDE类工具，脑海里都会出现一下常规配置项。比如主题配色，打开多个项目，配置端口（方便其他ip设备访问），文件编码（常规utf-8）,快捷键配置，字体大小颜色风格，插件配置，配置的导入导出（一次配置，到处用）等等。注：File -> Settings，进入配置界面后，尽量用搜索框来快速定位配置项位置。\n<!-- more -->\n\n##一、主题配色\n主题设置\n方法：File -> Settings -> Appearance & Behavior -> Appearance  ->Theme.\n![webstorm-setting-02.jpg](http://upload-images.jianshu.io/upload_images/1464420-64cd004473db254c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n配色设置\n方法：File -> Settings -> Editor -> Colors & Fonts->Scheme.（*注：如果你是从从Sublime text3转过来的朋友，比较偏好monokia配色的，可以参见此文 [webstorm入门1-主题和配色](http://frontenddev.org/article/webstorm-portal-1-subject-and-match-colors.html)*）\n![webstorm-setting-04.jpg](http://upload-images.jianshu.io/upload_images/1464420-904e1eddfec8658d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n##二、打开多个项目\nWebStorm默认情况下一次只能打开一个项目，这点很不爽，其实是可以设置的。（*注：如果你一开始就建了项目再来配置，记得要把左边显示的根路径移除，不然可能点击Add Content Root配置后也不一定能生效*）\n方法：File -> Settings -> Directories -> Add Content Root 中添加你当前的工程目录。\n\n![webstorm-setting-01.jpg](http://upload-images.jianshu.io/upload_images/1464420-27e6ba145c3b70b0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n##三、配置webserver选项（端口）\n方便其他ip设备访问(如手机等测试效果）\n方法：File -> Settings -> Build,Execution,Development -> Debugger ->port\n\n![webstorm-setting-05.jpg](http://upload-images.jianshu.io/upload_images/1464420-bb5a3b9981e70002.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n##四、设置文件的默认编码\n方法：File -> Settings -> Editor -> File Encodings -> IDE Encoding,Project Encoding.\n(*注：配置前和配置后都可以打开页面，在页面的右下角显示有编码，下面截图右下角就有*)\n\n![webstorm-setting-06.jpg](http://upload-images.jianshu.io/upload_images/1464420-77406cc11b2fbc19.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n##五、快捷键配置\n你可以使用默认快捷键配置，也可以根据自己的风格选择配置。习惯eclipse和myeclipse开发的可以配置成eclipse快捷键。\n方法：File -> Settings -> Keymap-> Keymaps\n\n![webstorm-setting-07.jpg](http://upload-images.jianshu.io/upload_images/1464420-973c0099130c94b3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n##六、emmet配置，语法等等\n上面提到了快捷键，webstorm自带emmet插件。用过zen coding的人应该都知道，emmet就是zen coding的升级版。当然，webstorm也不是支持所有的[emmet语法](http://emmet.evget.com/)，不过够用了。可以参考此文[Enabling Emmet Support](http://www.jetbrains.com/webstorm/help/enabling-emmet-support.html)看看具体情况。\n如下图，可以看到css自动加浏览器厂商前缀。\n\n![webstorm-setting-08.png](http://upload-images.jianshu.io/upload_images/1464420-b8b994a6f1f54964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n##七、行号，换行，参考线\n打开页面后，右击页面左边边界，弹窗选项，根据自己需要勾选就是，如下图：\n\n![webstorm-setting-09.png](http://upload-images.jianshu.io/upload_images/1464420-4a5e0d02296d1a71.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n##八、导入导出配置\n当你需要在其他电脑的webstorm上也想用自己编码风格时，将配置文件导入重启webstorm即可生效。\n导出方法：File -> Export Settings... ->自己选择选项和路径。用默认也可以。\n导入方法：File -> Import Settings... ->选择.jar文件路径。\n##九、插件配置\nwebstorm自带很多插件，你可以根据自己需要配置。我暂时未使用，如果你用到了，可以参考下面的一些文章。\n1. SVN、Git插件配置，CSS预处理语言的预编译、JS 实时压缩等等可以参考此文[webstorm入门2-配置](http://frontenddev.org/article/webstorm-portal-2-configuration.html)\n2. 使用css预编译器（sass,less）的朋友,可以省掉gulp、grunt类前端辅助工具,参考此文[webstorm入门5-sass、scss、less监听编译](http://frontenddev.org/article/4-sass-webstorm-primer-scss-less-to-monitor-compilation.html)\n\n####参考：\n- [webstorm入门1-主题和配色](http://frontenddev.org/article/webstorm-portal-1-subject-and-match-colors.html)\n- [webstorm入门5-sass、scss、less监听编译](http://frontenddev.org/article/4-sass-webstorm-primer-scss-less-to-monitor-compilation.html)\n- [webstorm入门2-配置](http://frontenddev.org/article/webstorm-portal-2-configuration.html)\n- [Enabling Emmet Support](http://www.jetbrains.com/webstorm/help/enabling-emmet-support.html)\n- [WebStorm 自定义字体+颜色+语法高亮+导入导出用户设置](http://www.cnblogs.com/dc10101/archive/2013/01/03/2842590.html)\n- [Emmet：HTML/CSS代码快速编写神器](http://www.iteye.com/news/27580)\n- [emmet语法](http://emmet.evget.com/)\n- [Webstorm10.0.3破解程序及汉化包下载、Webstorm配置入门指南](http://www.designlinks.cn/downloads/widget/47.html)\n- [webstorm 配置webserver选项，让其他ip设备可访问(如手机等测试效果）](http://www.ithao123.cn/content-36530.html)\n- [WebStorm 打开多个项目的方法](http://liuxiaofan.com/2013/12/19/1624.html)\n","slug":"webstorm-setting-01","published":1,"updated":"2018-05-30T01:42:03.031Z","comments":1,"photos":[],"link":"","_id":"cji0ejm6v002yg4l1tat8wd7g","content":"<p>如果你用过IDE类工具，脑海里都会出现一下常规配置项。比如主题配色，打开多个项目，配置端口（方便其他ip设备访问），文件编码（常规utf-8）,快捷键配置，字体大小颜色风格，插件配置，配置的导入导出（一次配置，到处用）等等。注：File -&gt; Settings，进入配置界面后，尽量用搜索框来快速定位配置项位置。<br><a id=\"more\"></a></p>\n<p>##一、主题配色<br>主题设置<br>方法：File -&gt; Settings -&gt; Appearance &amp; Behavior -&gt; Appearance  -&gt;Theme.<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-64cd004473db254c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-02.jpg\"><br>配色设置<br>方法：File -&gt; Settings -&gt; Editor -&gt; Colors &amp; Fonts-&gt;Scheme.（<em>注：如果你是从从Sublime text3转过来的朋友，比较偏好monokia配色的，可以参见此文 <a href=\"http://frontenddev.org/article/webstorm-portal-1-subject-and-match-colors.html\" target=\"_blank\" rel=\"noopener\">webstorm入门1-主题和配色</a></em>）<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-904e1eddfec8658d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-04.jpg\"></p>\n<p>##二、打开多个项目<br>WebStorm默认情况下一次只能打开一个项目，这点很不爽，其实是可以设置的。（<em>注：如果你一开始就建了项目再来配置，记得要把左边显示的根路径移除，不然可能点击Add Content Root配置后也不一定能生效</em>）<br>方法：File -&gt; Settings -&gt; Directories -&gt; Add Content Root 中添加你当前的工程目录。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-27e6ba145c3b70b0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-01.jpg\"></p>\n<p>##三、配置webserver选项（端口）<br>方便其他ip设备访问(如手机等测试效果）<br>方法：File -&gt; Settings -&gt; Build,Execution,Development -&gt; Debugger -&gt;port</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-bb5a3b9981e70002.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-05.jpg\"></p>\n<p>##四、设置文件的默认编码<br>方法：File -&gt; Settings -&gt; Editor -&gt; File Encodings -&gt; IDE Encoding,Project Encoding.<br>(<em>注：配置前和配置后都可以打开页面，在页面的右下角显示有编码，下面截图右下角就有</em>)</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-77406cc11b2fbc19.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-06.jpg\"></p>\n<p>##五、快捷键配置<br>你可以使用默认快捷键配置，也可以根据自己的风格选择配置。习惯eclipse和myeclipse开发的可以配置成eclipse快捷键。<br>方法：File -&gt; Settings -&gt; Keymap-&gt; Keymaps</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-973c0099130c94b3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-07.jpg\"></p>\n<p>##六、emmet配置，语法等等<br>上面提到了快捷键，webstorm自带emmet插件。用过zen coding的人应该都知道，emmet就是zen coding的升级版。当然，webstorm也不是支持所有的<a href=\"http://emmet.evget.com/\" target=\"_blank\" rel=\"noopener\">emmet语法</a>，不过够用了。可以参考此文<a href=\"http://www.jetbrains.com/webstorm/help/enabling-emmet-support.html\" target=\"_blank\" rel=\"noopener\">Enabling Emmet Support</a>看看具体情况。<br>如下图，可以看到css自动加浏览器厂商前缀。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-b8b994a6f1f54964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-08.png\"></p>\n<p>##七、行号，换行，参考线<br>打开页面后，右击页面左边边界，弹窗选项，根据自己需要勾选就是，如下图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-4a5e0d02296d1a71.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-09.png\"></p>\n<p>##八、导入导出配置<br>当你需要在其他电脑的webstorm上也想用自己编码风格时，将配置文件导入重启webstorm即可生效。<br>导出方法：File -&gt; Export Settings… -&gt;自己选择选项和路径。用默认也可以。<br>导入方法：File -&gt; Import Settings… -&gt;选择.jar文件路径。</p>\n<p>##九、插件配置<br>webstorm自带很多插件，你可以根据自己需要配置。我暂时未使用，如果你用到了，可以参考下面的一些文章。</p>\n<ol>\n<li>SVN、Git插件配置，CSS预处理语言的预编译、JS 实时压缩等等可以参考此文<a href=\"http://frontenddev.org/article/webstorm-portal-2-configuration.html\" target=\"_blank\" rel=\"noopener\">webstorm入门2-配置</a></li>\n<li>使用css预编译器（sass,less）的朋友,可以省掉gulp、grunt类前端辅助工具,参考此文<a href=\"http://frontenddev.org/article/4-sass-webstorm-primer-scss-less-to-monitor-compilation.html\" target=\"_blank\" rel=\"noopener\">webstorm入门5-sass、scss、less监听编译</a></li>\n</ol>\n<p>####参考：</p>\n<ul>\n<li><a href=\"http://frontenddev.org/article/webstorm-portal-1-subject-and-match-colors.html\" target=\"_blank\" rel=\"noopener\">webstorm入门1-主题和配色</a></li>\n<li><a href=\"http://frontenddev.org/article/4-sass-webstorm-primer-scss-less-to-monitor-compilation.html\" target=\"_blank\" rel=\"noopener\">webstorm入门5-sass、scss、less监听编译</a></li>\n<li><a href=\"http://frontenddev.org/article/webstorm-portal-2-configuration.html\" target=\"_blank\" rel=\"noopener\">webstorm入门2-配置</a></li>\n<li><a href=\"http://www.jetbrains.com/webstorm/help/enabling-emmet-support.html\" target=\"_blank\" rel=\"noopener\">Enabling Emmet Support</a></li>\n<li><a href=\"http://www.cnblogs.com/dc10101/archive/2013/01/03/2842590.html\" target=\"_blank\" rel=\"noopener\">WebStorm 自定义字体+颜色+语法高亮+导入导出用户设置</a></li>\n<li><a href=\"http://www.iteye.com/news/27580\" target=\"_blank\" rel=\"noopener\">Emmet：HTML/CSS代码快速编写神器</a></li>\n<li><a href=\"http://emmet.evget.com/\" target=\"_blank\" rel=\"noopener\">emmet语法</a></li>\n<li><a href=\"http://www.designlinks.cn/downloads/widget/47.html\" target=\"_blank\" rel=\"noopener\">Webstorm10.0.3破解程序及汉化包下载、Webstorm配置入门指南</a></li>\n<li><a href=\"http://www.ithao123.cn/content-36530.html\" target=\"_blank\" rel=\"noopener\">webstorm 配置webserver选项，让其他ip设备可访问(如手机等测试效果）</a></li>\n<li><a href=\"http://liuxiaofan.com/2013/12/19/1624.html\" target=\"_blank\" rel=\"noopener\">WebStorm 打开多个项目的方法</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>如果你用过IDE类工具，脑海里都会出现一下常规配置项。比如主题配色，打开多个项目，配置端口（方便其他ip设备访问），文件编码（常规utf-8）,快捷键配置，字体大小颜色风格，插件配置，配置的导入导出（一次配置，到处用）等等。注：File -&gt; Settings，进入配置界面后，尽量用搜索框来快速定位配置项位置。<br>","more":"</p>\n<p>##一、主题配色<br>主题设置<br>方法：File -&gt; Settings -&gt; Appearance &amp; Behavior -&gt; Appearance  -&gt;Theme.<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-64cd004473db254c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-02.jpg\"><br>配色设置<br>方法：File -&gt; Settings -&gt; Editor -&gt; Colors &amp; Fonts-&gt;Scheme.（<em>注：如果你是从从Sublime text3转过来的朋友，比较偏好monokia配色的，可以参见此文 <a href=\"http://frontenddev.org/article/webstorm-portal-1-subject-and-match-colors.html\" target=\"_blank\" rel=\"noopener\">webstorm入门1-主题和配色</a></em>）<br><img src=\"http://upload-images.jianshu.io/upload_images/1464420-904e1eddfec8658d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-04.jpg\"></p>\n<p>##二、打开多个项目<br>WebStorm默认情况下一次只能打开一个项目，这点很不爽，其实是可以设置的。（<em>注：如果你一开始就建了项目再来配置，记得要把左边显示的根路径移除，不然可能点击Add Content Root配置后也不一定能生效</em>）<br>方法：File -&gt; Settings -&gt; Directories -&gt; Add Content Root 中添加你当前的工程目录。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-27e6ba145c3b70b0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-01.jpg\"></p>\n<p>##三、配置webserver选项（端口）<br>方便其他ip设备访问(如手机等测试效果）<br>方法：File -&gt; Settings -&gt; Build,Execution,Development -&gt; Debugger -&gt;port</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-bb5a3b9981e70002.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-05.jpg\"></p>\n<p>##四、设置文件的默认编码<br>方法：File -&gt; Settings -&gt; Editor -&gt; File Encodings -&gt; IDE Encoding,Project Encoding.<br>(<em>注：配置前和配置后都可以打开页面，在页面的右下角显示有编码，下面截图右下角就有</em>)</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-77406cc11b2fbc19.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-06.jpg\"></p>\n<p>##五、快捷键配置<br>你可以使用默认快捷键配置，也可以根据自己的风格选择配置。习惯eclipse和myeclipse开发的可以配置成eclipse快捷键。<br>方法：File -&gt; Settings -&gt; Keymap-&gt; Keymaps</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-973c0099130c94b3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-07.jpg\"></p>\n<p>##六、emmet配置，语法等等<br>上面提到了快捷键，webstorm自带emmet插件。用过zen coding的人应该都知道，emmet就是zen coding的升级版。当然，webstorm也不是支持所有的<a href=\"http://emmet.evget.com/\" target=\"_blank\" rel=\"noopener\">emmet语法</a>，不过够用了。可以参考此文<a href=\"http://www.jetbrains.com/webstorm/help/enabling-emmet-support.html\" target=\"_blank\" rel=\"noopener\">Enabling Emmet Support</a>看看具体情况。<br>如下图，可以看到css自动加浏览器厂商前缀。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-b8b994a6f1f54964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-08.png\"></p>\n<p>##七、行号，换行，参考线<br>打开页面后，右击页面左边边界，弹窗选项，根据自己需要勾选就是，如下图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1464420-4a5e0d02296d1a71.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"webstorm-setting-09.png\"></p>\n<p>##八、导入导出配置<br>当你需要在其他电脑的webstorm上也想用自己编码风格时，将配置文件导入重启webstorm即可生效。<br>导出方法：File -&gt; Export Settings… -&gt;自己选择选项和路径。用默认也可以。<br>导入方法：File -&gt; Import Settings… -&gt;选择.jar文件路径。</p>\n<p>##九、插件配置<br>webstorm自带很多插件，你可以根据自己需要配置。我暂时未使用，如果你用到了，可以参考下面的一些文章。</p>\n<ol>\n<li>SVN、Git插件配置，CSS预处理语言的预编译、JS 实时压缩等等可以参考此文<a href=\"http://frontenddev.org/article/webstorm-portal-2-configuration.html\" target=\"_blank\" rel=\"noopener\">webstorm入门2-配置</a></li>\n<li>使用css预编译器（sass,less）的朋友,可以省掉gulp、grunt类前端辅助工具,参考此文<a href=\"http://frontenddev.org/article/4-sass-webstorm-primer-scss-less-to-monitor-compilation.html\" target=\"_blank\" rel=\"noopener\">webstorm入门5-sass、scss、less监听编译</a></li>\n</ol>\n<p>####参考：</p>\n<ul>\n<li><a href=\"http://frontenddev.org/article/webstorm-portal-1-subject-and-match-colors.html\" target=\"_blank\" rel=\"noopener\">webstorm入门1-主题和配色</a></li>\n<li><a href=\"http://frontenddev.org/article/4-sass-webstorm-primer-scss-less-to-monitor-compilation.html\" target=\"_blank\" rel=\"noopener\">webstorm入门5-sass、scss、less监听编译</a></li>\n<li><a href=\"http://frontenddev.org/article/webstorm-portal-2-configuration.html\" target=\"_blank\" rel=\"noopener\">webstorm入门2-配置</a></li>\n<li><a href=\"http://www.jetbrains.com/webstorm/help/enabling-emmet-support.html\" target=\"_blank\" rel=\"noopener\">Enabling Emmet Support</a></li>\n<li><a href=\"http://www.cnblogs.com/dc10101/archive/2013/01/03/2842590.html\" target=\"_blank\" rel=\"noopener\">WebStorm 自定义字体+颜色+语法高亮+导入导出用户设置</a></li>\n<li><a href=\"http://www.iteye.com/news/27580\" target=\"_blank\" rel=\"noopener\">Emmet：HTML/CSS代码快速编写神器</a></li>\n<li><a href=\"http://emmet.evget.com/\" target=\"_blank\" rel=\"noopener\">emmet语法</a></li>\n<li><a href=\"http://www.designlinks.cn/downloads/widget/47.html\" target=\"_blank\" rel=\"noopener\">Webstorm10.0.3破解程序及汉化包下载、Webstorm配置入门指南</a></li>\n<li><a href=\"http://www.ithao123.cn/content-36530.html\" target=\"_blank\" rel=\"noopener\">webstorm 配置webserver选项，让其他ip设备可访问(如手机等测试效果）</a></li>\n<li><a href=\"http://liuxiaofan.com/2013/12/19/1624.html\" target=\"_blank\" rel=\"noopener\">WebStorm 打开多个项目的方法</a></li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"cji0ejm0g0000g4l1npwrp0uv","category_id":"cji0ejm110002g4l17vnc1wi0","_id":"cji0ejm1w000cg4l1pegop6g4"},{"post_id":"cji0ejm180004g4l1s88v02zl","category_id":"cji0ejm1k0007g4l1wrfk4kvd","_id":"cji0ejm2h000ig4l1gstjinxz"},{"post_id":"cji0ejm20000fg4l1ecya4srm","category_id":"cji0ejm1x000dg4l10zjmf2pt","_id":"cji0ejm2v000og4l101p0w3rh"},{"post_id":"cji0ejm1d0005g4l110i02b1k","category_id":"cji0ejm1x000dg4l10zjmf2pt","_id":"cji0ejm33000sg4l1udc84gnf"},{"post_id":"cji0ejm29000hg4l1huvpqkh6","category_id":"cji0ejm1x000dg4l10zjmf2pt","_id":"cji0ejm37000ug4l19mw99ngb"},{"post_id":"cji0ejm2n000lg4l1b4subryi","category_id":"cji0ejm1x000dg4l10zjmf2pt","_id":"cji0ejm3c000xg4l1nphzwxc2"},{"post_id":"cji0ejm1h0006g4l11mukt0w5","category_id":"cji0ejm1x000dg4l10zjmf2pt","_id":"cji0ejm3h0010g4l1zikyvg2s"},{"post_id":"cji0ejm30000rg4l1wda41w9z","category_id":"cji0ejm1x000dg4l10zjmf2pt","_id":"cji0ejm3m0013g4l1i8ljvasm"},{"post_id":"cji0ejm1t000bg4l1u0czom7y","category_id":"cji0ejm1x000dg4l10zjmf2pt","_id":"cji0ejm3s0016g4l16nxu7ick"},{"post_id":"cji0ejm2t000ng4l1cx2ekalu","category_id":"cji0ejm38000vg4l1zm793pn9","_id":"cji0ejm3x0019g4l1f9876wqr"},{"post_id":"cji0ejm34000tg4l1tistyzn5","category_id":"cji0ejm3i0011g4l14zdcv398","_id":"cji0ejm47001fg4l16vjw49az"},{"post_id":"cji0ejm40001cg4l1wil4hful","category_id":"cji0ejm4a001hg4l1uedpviy6","_id":"cji0ejm4w001tg4l15m67uhfi"},{"post_id":"cji0ejm4q001qg4l1i0pzpwlj","category_id":"cji0ejm110002g4l17vnc1wi0","_id":"cji0ejm56001zg4l1016hatgs"},{"post_id":"cji0ejm4f001kg4l10lgkl0jb","category_id":"cji0ejm4p001pg4l1koli2vl5","_id":"cji0ejm5c0022g4l1epc0p81z"},{"post_id":"cji0ejm4y001vg4l1wyv0fcsf","category_id":"cji0ejm5d0023g4l1yydlvaal","_id":"cji0ejm5z002fg4l1ckw1uoq5"},{"post_id":"cji0ejm53001yg4l15rbnqp9x","category_id":"cji0ejm5d0023g4l1yydlvaal","_id":"cji0ejm69002kg4l195ic6nnn"},{"post_id":"cji0ejm4l001ng4l12b3c03ys","category_id":"cji0ejm51001wg4l14rcknmzs","_id":"cji0ejm6l002rg4l17fg204ak"},{"post_id":"cji0ejm4l001ng4l12b3c03ys","category_id":"cji0ejm5y002eg4l14h73bqgj","_id":"cji0ejm6r002wg4l1gmoyfmfy"},{"post_id":"cji0ejm590021g4l1mexeuolb","category_id":"cji0ejm6a002lg4l14oxfmtq0","_id":"cji0ejm6z0030g4l1ao7dvpyc"},{"post_id":"cji0ejm5f0026g4l1ilk5ny3h","category_id":"cji0ejm6a002lg4l14oxfmtq0","_id":"cji0ejm730033g4l15cz59328"},{"post_id":"cji0ejm5j0028g4l1vz7hcfdb","category_id":"cji0ejm6a002lg4l14oxfmtq0","_id":"cji0ejm780037g4l1twi5d0l5"},{"post_id":"cji0ejm5o002bg4l15xa2314u","category_id":"cji0ejm6a002lg4l14oxfmtq0","_id":"cji0ejm7e003cg4l13ih43qol"},{"post_id":"cji0ejm5u002dg4l12oyl96md","category_id":"cji0ejm6a002lg4l14oxfmtq0","_id":"cji0ejm7i003gg4l1jc4ekqsu"},{"post_id":"cji0ejm60002gg4l1waulsacj","category_id":"cji0ejm7d003bg4l1lvqliiwo","_id":"cji0ejm7s003lg4l1133y0xql"},{"post_id":"cji0ejm64002ig4l17w46nh1l","category_id":"cji0ejm6a002lg4l14oxfmtq0","_id":"cji0ejm7v003og4l1xro3wxec"},{"post_id":"cji0ejm6s002xg4l11zbk34da","category_id":"cji0ejm7r003kg4l1frv3egfl","_id":"cji0ejm7z003sg4l17xy8nnuc"}],"PostTag":[{"post_id":"cji0ejm0g0000g4l1npwrp0uv","tag_id":"cji0ejm170003g4l1x83wi8x7","_id":"cji0ejm1n0009g4l1b3m0683a"},{"post_id":"cji0ejm0v0001g4l1gz7x2owv","tag_id":"cji0ejm1l0008g4l1vvvthut6","_id":"cji0ejm27000gg4l1t41rrpj9"},{"post_id":"cji0ejm180004g4l1s88v02zl","tag_id":"cji0ejm1y000eg4l19qpl0atb","_id":"cji0ejm2s000mg4l1hlrsv34a"},{"post_id":"cji0ejm1d0005g4l110i02b1k","tag_id":"cji0ejm2j000kg4l1kmykj30r","_id":"cji0ejm3t0017g4l14zq9yp58"},{"post_id":"cji0ejm1d0005g4l110i02b1k","tag_id":"cji0ejm2z000qg4l1yocm046x","_id":"cji0ejm3y001ag4l1n2m64t92"},{"post_id":"cji0ejm1d0005g4l110i02b1k","tag_id":"cji0ejm3d000yg4l1wxl35sd5","_id":"cji0ejm43001dg4l1ahr4f2rd"},{"post_id":"cji0ejm1h0006g4l11mukt0w5","tag_id":"cji0ejm2z000qg4l1yocm046x","_id":"cji0ejm4e001jg4l1qa886el9"},{"post_id":"cji0ejm1h0006g4l11mukt0w5","tag_id":"cji0ejm3d000yg4l1wxl35sd5","_id":"cji0ejm4h001lg4l1k0mndz74"},{"post_id":"cji0ejm4b001ig4l1eoc8ra81","tag_id":"cji0ejm170003g4l1x83wi8x7","_id":"cji0ejm4o001og4l1dts8tiyz"},{"post_id":"cji0ejm4q001qg4l1i0pzpwlj","tag_id":"cji0ejm170003g4l1x83wi8x7","_id":"cji0ejm4y001ug4l10w5wtxsf"},{"post_id":"cji0ejm1o000ag4l10m2w15aq","tag_id":"cji0ejm2j000kg4l1kmykj30r","_id":"cji0ejm580020g4l1s62a07ud"},{"post_id":"cji0ejm1o000ag4l10m2w15aq","tag_id":"cji0ejm4i001mg4l1tvq0gd9r","_id":"cji0ejm5e0024g4l1qvmr68dx"},{"post_id":"cji0ejm1o000ag4l10m2w15aq","tag_id":"cji0ejm4t001rg4l1byje2swb","_id":"cji0ejm5i0027g4l1861obrd5"},{"post_id":"cji0ejm1o000ag4l10m2w15aq","tag_id":"cji0ejm1l0008g4l1vvvthut6","_id":"cji0ejm5n002ag4l11ej3vsu7"},{"post_id":"cji0ejm1t000bg4l1u0czom7y","tag_id":"cji0ejm2z000qg4l1yocm046x","_id":"cji0ejm68002jg4l1wr6y9unf"},{"post_id":"cji0ejm1t000bg4l1u0czom7y","tag_id":"cji0ejm5e0025g4l1g0tb6hm6","_id":"cji0ejm6d002ng4l1bbhtb21n"},{"post_id":"cji0ejm1t000bg4l1u0czom7y","tag_id":"cji0ejm5s002cg4l1r5agfkhw","_id":"cji0ejm6j002qg4l10t7pd1m9"},{"post_id":"cji0ejm6g002pg4l1aaowq5x3","tag_id":"cji0ejm170003g4l1x83wi8x7","_id":"cji0ejm6r002vg4l1tsomvyec"},{"post_id":"cji0ejm20000fg4l1ecya4srm","tag_id":"cji0ejm2z000qg4l1yocm046x","_id":"cji0ejm770035g4l1kcs1tjud"},{"post_id":"cji0ejm20000fg4l1ecya4srm","tag_id":"cji0ejm3d000yg4l1wxl35sd5","_id":"cji0ejm790038g4l1tzza53co"},{"post_id":"cji0ejm20000fg4l1ecya4srm","tag_id":"cji0ejm6q002ug4l1emho2orq","_id":"cji0ejm7c003ag4l1qzqmigv5"},{"post_id":"cji0ejm20000fg4l1ecya4srm","tag_id":"cji0ejm700031g4l150tfayru","_id":"cji0ejm7f003dg4l1mdgy0zx9"},{"post_id":"cji0ejm29000hg4l1huvpqkh6","tag_id":"cji0ejm2z000qg4l1yocm046x","_id":"cji0ejm7i003fg4l106r2snqs"},{"post_id":"cji0ejm29000hg4l1huvpqkh6","tag_id":"cji0ejm3d000yg4l1wxl35sd5","_id":"cji0ejm7n003ig4l1rnb25akj"},{"post_id":"cji0ejm2n000lg4l1b4subryi","tag_id":"cji0ejm2z000qg4l1yocm046x","_id":"cji0ejm7v003ng4l1mxouyyn2"},{"post_id":"cji0ejm2n000lg4l1b4subryi","tag_id":"cji0ejm3d000yg4l1wxl35sd5","_id":"cji0ejm7w003pg4l1p1aatlga"},{"post_id":"cji0ejm2t000ng4l1cx2ekalu","tag_id":"cji0ejm7t003mg4l19wm4yf6e","_id":"cji0ejm7y003rg4l1nbw15dlm"},{"post_id":"cji0ejm2t000ng4l1cx2ekalu","tag_id":"cji0ejm2j000kg4l1kmykj30r","_id":"cji0ejm80003tg4l1r79noxn4"},{"post_id":"cji0ejm30000rg4l1wda41w9z","tag_id":"cji0ejm2z000qg4l1yocm046x","_id":"cji0ejm84003wg4l1qr6o2v5t"},{"post_id":"cji0ejm30000rg4l1wda41w9z","tag_id":"cji0ejm3d000yg4l1wxl35sd5","_id":"cji0ejm85003xg4l1yyzicuiw"},{"post_id":"cji0ejm34000tg4l1tistyzn5","tag_id":"cji0ejm83003vg4l1mghi6y8k","_id":"cji0ejm87003zg4l1ewquogr5"},{"post_id":"cji0ejm3a000wg4l1r1h8ukwq","tag_id":"cji0ejm86003yg4l1g6rybhy0","_id":"cji0ejm8c0042g4l1o9sud1xe"},{"post_id":"cji0ejm3a000wg4l1r1h8ukwq","tag_id":"cji0ejm890040g4l1althz4yv","_id":"cji0ejm8d0043g4l1g0r1sbuo"},{"post_id":"cji0ejm3e000zg4l1hih6dbm0","tag_id":"cji0ejm86003yg4l1g6rybhy0","_id":"cji0ejm8f0045g4l1cfgo4a9v"},{"post_id":"cji0ejm3j0012g4l1g9x3u6px","tag_id":"cji0ejm8d0044g4l1y413csvr","_id":"cji0ejm8h0047g4l1dcxw0uh3"},{"post_id":"cji0ejm3p0015g4l12wncql7e","tag_id":"cji0ejm8d0044g4l1y413csvr","_id":"cji0ejm8j0049g4l1mj3r0td4"},{"post_id":"cji0ejm3u0018g4l1s0n3sc5a","tag_id":"cji0ejm8i0048g4l1e5zaowcx","_id":"cji0ejm8k004bg4l1yvbxdy62"},{"post_id":"cji0ejm40001cg4l1wil4hful","tag_id":"cji0ejm8j004ag4l1ft856gnq","_id":"cji0ejm8m004dg4l1p8153i4x"},{"post_id":"cji0ejm45001eg4l18uvjza3s","tag_id":"cji0ejm8l004cg4l12dpx9jrs","_id":"cji0ejm8p004fg4l1hchagxzy"},{"post_id":"cji0ejm4f001kg4l10lgkl0jb","tag_id":"cji0ejm890040g4l1althz4yv","_id":"cji0ejm8r004hg4l1njsznu3b"},{"post_id":"cji0ejm4l001ng4l12b3c03ys","tag_id":"cji0ejm8q004gg4l1geikuicx","_id":"cji0ejm8v004kg4l1a0jmhntl"},{"post_id":"cji0ejm4l001ng4l12b3c03ys","tag_id":"cji0ejm8s004ig4l1wfxvktxi","_id":"cji0ejm8w004lg4l1fj58o5hj"},{"post_id":"cji0ejm4u001sg4l1ov38kvik","tag_id":"cji0ejm8u004jg4l104wv68dk","_id":"cji0ejm8y004ng4l1txcv8khb"},{"post_id":"cji0ejm4y001vg4l1wyv0fcsf","tag_id":"cji0ejm8l004cg4l12dpx9jrs","_id":"cji0ejm90004pg4l1wjy7xoy3"},{"post_id":"cji0ejm53001yg4l15rbnqp9x","tag_id":"cji0ejm8z004og4l1emd4ijxc","_id":"cji0ejm92004rg4l1u2m2yshj"},{"post_id":"cji0ejm590021g4l1mexeuolb","tag_id":"cji0ejm91004qg4l1aklzc580","_id":"cji0ejm94004ug4l1tcnwdbn4"},{"post_id":"cji0ejm590021g4l1mexeuolb","tag_id":"cji0ejm92004sg4l1hzeog9t2","_id":"cji0ejm95004vg4l1b6hchrxg"},{"post_id":"cji0ejm5f0026g4l1ilk5ny3h","tag_id":"cji0ejm91004qg4l1aklzc580","_id":"cji0ejm98004yg4l1vd27nbrj"},{"post_id":"cji0ejm5f0026g4l1ilk5ny3h","tag_id":"cji0ejm95004wg4l1jthbwk4m","_id":"cji0ejm98004zg4l1b0zgwtpf"},{"post_id":"cji0ejm5j0028g4l1vz7hcfdb","tag_id":"cji0ejm91004qg4l1aklzc580","_id":"cji0ejm9c0052g4l13gua1mdx"},{"post_id":"cji0ejm5j0028g4l1vz7hcfdb","tag_id":"cji0ejm990050g4l1vc6yjhj8","_id":"cji0ejm9d0053g4l1u8erdnj1"},{"post_id":"cji0ejm5o002bg4l15xa2314u","tag_id":"cji0ejm91004qg4l1aklzc580","_id":"cji0ejm9h0055g4l1f7fxihoa"},{"post_id":"cji0ejm5o002bg4l15xa2314u","tag_id":"cji0ejm1y000eg4l19qpl0atb","_id":"cji0ejm9i0056g4l13y8mmxo8"},{"post_id":"cji0ejm5u002dg4l12oyl96md","tag_id":"cji0ejm91004qg4l1aklzc580","_id":"cji0ejm9l0059g4l17eayxwuc"},{"post_id":"cji0ejm5u002dg4l12oyl96md","tag_id":"cji0ejm1y000eg4l19qpl0atb","_id":"cji0ejm9m005ag4l12varz3a1"},{"post_id":"cji0ejm5u002dg4l12oyl96md","tag_id":"cji0ejm9j0057g4l12b3nh6xm","_id":"cji0ejm9n005cg4l1wdlcn4bx"},{"post_id":"cji0ejm60002gg4l1waulsacj","tag_id":"cji0ejm9k0058g4l12ndmot5p","_id":"cji0ejm9p005eg4l12szp7hdh"},{"post_id":"cji0ejm60002gg4l1waulsacj","tag_id":"cji0ejm9m005bg4l1fvstpn7x","_id":"cji0ejm9q005fg4l1nn2vcwef"},{"post_id":"cji0ejm64002ig4l17w46nh1l","tag_id":"cji0ejm91004qg4l1aklzc580","_id":"cji0ejm9v005ig4l1noz0tvwr"},{"post_id":"cji0ejm64002ig4l17w46nh1l","tag_id":"cji0ejm9r005gg4l14vp6918o","_id":"cji0ejm9v005jg4l1zwk3m3lw"},{"post_id":"cji0ejm6b002mg4l1aicf1gow","tag_id":"cji0ejm9j0057g4l12b3nh6xm","_id":"cji0ejm9z005mg4l1s4v87xnb"},{"post_id":"cji0ejm6b002mg4l1aicf1gow","tag_id":"cji0ejm9w005kg4l1j0u1cltp","_id":"cji0ejma0005ng4l10w5nabp3"},{"post_id":"cji0ejm6m002sg4l1ycq4qas6","tag_id":"cji0ejm9j0057g4l12b3nh6xm","_id":"cji0ejma3005qg4l1iaoid0tu"},{"post_id":"cji0ejm6m002sg4l1ycq4qas6","tag_id":"cji0ejma0005og4l1umklk517","_id":"cji0ejma4005rg4l11bbcq66l"},{"post_id":"cji0ejm6s002xg4l11zbk34da","tag_id":"cji0ejma2005pg4l13a3n8pof","_id":"cji0ejma6005tg4l1q7t9swa3"},{"post_id":"cji0ejm6v002yg4l1tat8wd7g","tag_id":"cji0ejm9j0057g4l12b3nh6xm","_id":"cji0ejma7005ug4l18p4iowhe"}],"Tag":[{"name":"css3","_id":"cji0ejm170003g4l1x83wi8x7"},{"name":"域名","_id":"cji0ejm1l0008g4l1vvvthut6"},{"name":"Element","_id":"cji0ejm1y000eg4l19qpl0atb"},{"name":"Github","_id":"cji0ejm2j000kg4l1kmykj30r"},{"name":"Hexo","_id":"cji0ejm2z000qg4l1yocm046x"},{"name":"NexT","_id":"cji0ejm3d000yg4l1wxl35sd5"},{"name":"Godaddy","_id":"cji0ejm4i001mg4l1tvq0gd9r"},{"name":"DNSPod","_id":"cji0ejm4t001rg4l1byje2swb"},{"name":"CodePen","_id":"cji0ejm5e0025g4l1g0tb6hm6"},{"name":"jsFiddle","_id":"cji0ejm5s002cg4l1r5agfkhw"},{"name":"Web Music","_id":"cji0ejm6q002ug4l1emho2orq"},{"name":"Aplayer","_id":"cji0ejm700031g4l150tfayru"},{"name":"Git","_id":"cji0ejm7t003mg4l19wm4yf6e"},{"name":"gulp","_id":"cji0ejm83003vg4l1mghi6y8k"},{"name":"IP","_id":"cji0ejm86003yg4l1g6rybhy0"},{"name":"js","_id":"cji0ejm890040g4l1althz4yv"},{"name":"css","_id":"cji0ejm8d0044g4l1y413csvr"},{"name":"Node","_id":"cji0ejm8i0048g4l1e5zaowcx"},{"name":"Photoshop","_id":"cji0ejm8j004ag4l1ft856gnq"},{"name":"photoshop","_id":"cji0ejm8l004cg4l12dpx9jrs"},{"name":"tag1","_id":"cji0ejm8q004gg4l1geikuicx"},{"name":"标签2","_id":"cji0ejm8s004ig4l1wfxvktxi"},{"name":"tomcat6","_id":"cji0ejm8u004jg4l104wv68dk"},{"name":"html5","_id":"cji0ejm8z004og4l1emd4ijxc"},{"name":"Vue2","_id":"cji0ejm91004qg4l1aklzc580"},{"name":"axios","_id":"cji0ejm92004sg4l1hzeog9t2"},{"name":"百度地图","_id":"cji0ejm95004wg4l1jthbwk4m"},{"name":"Echarts","_id":"cji0ejm990050g4l1vc6yjhj8"},{"name":"webstorm","_id":"cji0ejm9j0057g4l12b3nh6xm"},{"name":"vue","_id":"cji0ejm9k0058g4l12ndmot5p"},{"name":"sass","_id":"cji0ejm9m005bg4l1fvstpn7x"},{"name":"Mockjs","_id":"cji0ejm9r005gg4l14vp6918o"},{"name":"gitlab","_id":"cji0ejm9w005kg4l1j0u1cltp"},{"name":"markdown","_id":"cji0ejma0005og4l1umklk517"},{"name":"webstorm11","_id":"cji0ejma2005pg4l13a3n8pof"}]}}